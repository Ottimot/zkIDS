[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_String >\n",
        0.9794600009918213,
        0.1
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4473192691802979,
        1.84
    ],
    [
        "Num of variable reads = 1480\n",
        1.4545679092407227,
        1.85
    ],
    [
        "Num of conditional writes = 0\n",
        1.461871862411499,
        1.87
    ],
    [
        "Num of words per element = 1\n",
        1.4696247577667236,
        1.9100000000000001
    ],
    [
        "Num of variable writes = 0\n",
        1.4771568775177002,
        1.9400000000000002
    ],
    [
        "num of accesses = 1480\n",
        1.4849300384521484,
        1.98
    ],
    [
        "Packing Option = 1\n",
        1.4927377700805664,
        2.02
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.5005435943603516,
        2.05
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.5083668231964111,
        2.08
    ],
    [
        "done with read only memory solutions!\n",
        2.4939165115356445,
        3.91
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.5043160915374756,
        3.93
    ],
    [
        "Num of variable reads = 128\n",
        2.514848470687866,
        3.96
    ],
    [
        "Num of conditional writes = 0\n",
        2.523738145828247,
        3.96
    ],
    [
        "Num of words per element = 1\n",
        2.532560110092163,
        3.97
    ],
    [
        "Num of variable writes = 0\n",
        2.541374444961548,
        3.98
    ],
    [
        "num of accesses = 128\n",
        2.5504229068756104,
        3.99
    ],
    [
        "Packing Option = 1\n",
        2.5598819255828857,
        4.0
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.569220781326294,
        4.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.5784122943878174,
        4.02
    ],
    [
        "Num of variable reads = 520\n",
        2.58769154548645,
        4.03
    ],
    [
        "Num of conditional writes = 0\n",
        2.5970218181610107,
        4.04
    ],
    [
        "Num of words per element = 1\n",
        2.606384038925171,
        4.05
    ],
    [
        "Num of variable writes = 0\n",
        2.6158511638641357,
        4.06
    ],
    [
        "num of accesses = 520\n",
        2.625192403793335,
        4.07
    ],
    [
        "Packing Option = 1\n",
        2.634504556655884,
        4.08
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.6438567638397217,
        4.09
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.6531598567962646,
        4.1
    ],
    [
        "done with read only memory solutions!\n",
        3.323350667953491,
        4.880000000000001
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.3336849212646484,
        4.890000000000001
    ],
    [
        "Num of variable reads = 128\n",
        3.343609571456909,
        4.9
    ],
    [
        "Num of conditional writes = 0\n",
        3.3533945083618164,
        4.91
    ],
    [
        "Num of words per element = 1\n",
        3.363304853439331,
        4.920000000000001
    ],
    [
        "Num of variable writes = 0\n",
        3.3731610774993896,
        4.930000000000001
    ],
    [
        "num of accesses = 128\n",
        3.3833417892456055,
        4.94
    ],
    [
        "Packing Option = 1\n",
        3.393583059310913,
        4.95
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.4037859439849854,
        4.960000000000001
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.4139866828918457,
        4.970000000000001
    ],
    [
        "Num of variable reads = 71\n",
        3.4242920875549316,
        4.98
    ],
    [
        "Num of conditional writes = 0\n",
        3.434607982635498,
        4.99
    ],
    [
        "Num of words per element = 1\n",
        3.4449052810668945,
        5.0
    ],
    [
        "Num of variable writes = 0\n",
        3.45522141456604,
        5.0200000000000005
    ],
    [
        "num of accesses = 71\n",
        3.465501546859741,
        5.0200000000000005
    ],
    [
        "Packing Option = 1\n",
        3.4757657051086426,
        5.04
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.4860095977783203,
        5.04
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.4963107109069824,
        5.0600000000000005
    ],
    [
        "Num of variable reads = 128\n",
        3.508227825164795,
        5.090000000000001
    ],
    [
        "Num of conditional writes = 0\n",
        3.5187618732452393,
        5.1000000000000005
    ],
    [
        "Num of words per element = 1\n",
        3.5291519165039062,
        5.11
    ],
    [
        "Num of variable writes = 0\n",
        3.5395569801330566,
        5.12
    ],
    [
        "num of accesses = 128\n",
        3.5498945713043213,
        5.130000000000001
    ],
    [
        "Packing Option = 0\n",
        3.5602328777313232,
        5.140000000000001
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.570517063140869,
        5.15
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.580800771713257,
        5.16
    ],
    [
        "Num of variable reads = 71\n",
        3.5910816192626953,
        5.170000000000001
    ],
    [
        "Num of conditional writes = 0\n",
        3.6014041900634766,
        5.180000000000001
    ],
    [
        "Num of words per element = 1\n",
        3.611762046813965,
        5.19
    ],
    [
        "Num of variable writes = 0\n",
        3.622225046157837,
        5.2
    ],
    [
        "num of accesses = 71\n",
        3.632661819458008,
        5.210000000000001
    ],
    [
        "Packing Option = 1\n",
        3.6437032222747803,
        5.220000000000001
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.6545093059539795,
        5.23
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.665173053741455,
        5.24
    ],
    [
        "Num of variable reads = 128\n",
        3.6758956909179688,
        5.25
    ],
    [
        "Num of conditional writes = 0\n",
        3.6864700317382812,
        5.260000000000001
    ],
    [
        "Num of words per element = 1\n",
        3.6969785690307617,
        5.2700000000000005
    ],
    [
        "Num of variable writes = 0\n",
        3.7092249393463135,
        5.3100000000000005
    ],
    [
        "num of accesses = 128\n",
        3.7200865745544434,
        5.33
    ],
    [
        "Packing Option = 0\n",
        3.73077130317688,
        5.3500000000000005
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.741339921951294,
        5.37
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.7517244815826416,
        5.390000000000001
    ],
    [
        "Num of variable reads = 0\n",
        3.762104034423828,
        5.4
    ],
    [
        "Num of conditional writes = 0\n",
        3.772353172302246,
        5.41
    ],
    [
        "Num of words per element = 1\n",
        3.782641887664795,
        5.420000000000001
    ],
    [
        "Num of variable writes = 0\n",
        3.792909860610962,
        5.430000000000001
    ],
    [
        "num of accesses = 0\n",
        3.803144693374634,
        5.45
    ],
    [
        "Packing Option = 0\n",
        3.813499927520752,
        5.45
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.82407546043396,
        5.48
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.834632158279419,
        5.49
    ],
    [
        "Num of variable reads = 8040\n",
        3.845118761062622,
        5.5200000000000005
    ],
    [
        "Num of conditional writes = 0\n",
        3.8557004928588867,
        5.53
    ],
    [
        "Num of words per element = 1\n",
        3.866051435470581,
        5.54
    ],
    [
        "Num of variable writes = 0\n",
        3.876500368118286,
        5.550000000000001
    ],
    [
        "num of accesses = 8040\n",
        3.886857032775879,
        5.57
    ],
    [
        "Packing Option = 1\n",
        3.897390365600586,
        5.58
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        3.9080257415771484,
        5.590000000000001
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        3.9184470176696777,
        5.590000000000001
    ],
    [
        "done with read only memory solutions!\n",
        4.154265642166138,
        5.970000000000001
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        4.164919853210449,
        5.99
    ],
    [
        "Num of variable reads = 0\n",
        4.175582408905029,
        6.0
    ],
    [
        "Num of conditional writes = 0\n",
        4.186899185180664,
        6.03
    ],
    [
        "Num of words per element = 1\n",
        4.197709083557129,
        6.0600000000000005
    ],
    [
        "Num of variable writes = 0\n",
        4.208441972732544,
        6.090000000000001
    ],
    [
        "num of accesses = 0\n",
        4.219044923782349,
        6.12
    ],
    [
        "Packing Option = 1\n",
        4.229971647262573,
        6.15
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        4.240597248077393,
        6.19
    ],
    [
        "Phase 1: Analysis Completed!\n",
        4.252278089523315,
        6.25
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_String >\n",
        4.26372504234314,
        6.3
    ],
    [
        "Circuit Generation Done for < Test_HTTP_String >  \n",
        9.27296757698059,
        32.75
    ],
    [
        " \t Total Number of Constraints :  1984853\n",
        9.292556762695312,
        32.82
    ],
    [
        "\n",
        9.313990354537964,
        32.94
    ],
    [
        "Instruction queue size: 7086993\n",
        9.365052938461304,
        33.239999999999995
    ],
    [
        "Normal execution\n",
        26.696736097335815,
        43.57
    ],
    [
        "Running Sample Run: run8001\n",
        26.730900764465332,
        43.599999999999994
    ],
    [
        "Url assignment done\n",
        26.76389455795288,
        43.629999999999995
    ],
    [
        "Evaluating Input on the circuit \n",
        26.790316104888916,
        43.63999999999999
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        26.818551301956177,
        43.66
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        26.851104497909546,
        43.73
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        26.882854461669922,
        43.839999999999996
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        26.90624189376831,
        43.91
    ],
    [
        "\t[input] Value of Wire # 21 :: 9\n",
        26.92774796485901,
        43.949999999999996
    ],
    [
        "\t[input] Value of Wire # 22 :: e3\n",
        26.94987201690674,
        43.989999999999995
    ],
    [
        "\t[input] Value of Wire # 31 :: bf\n",
        26.9739191532135,
        44.0
    ],
    [
        "\t[input] Value of Wire # 40 :: a4\n",
        26.99798846244812,
        44.05
    ],
    [
        "\t[input] Value of Wire # 49 :: 1\n",
        27.024510622024536,
        44.099999999999994
    ],
    [
        "\t[input] Value of Wire # 58 :: a4\n",
        27.057279348373413,
        44.28
    ],
    [
        "\t[input] Value of Wire # 67 :: 40\n",
        27.080862283706665,
        44.3
    ],
    [
        "\t[input] Value of Wire # 76 :: ed\n",
        27.10474157333374,
        44.33
    ],
    [
        "\t[input] Value of Wire # 85 :: 41\n",
        27.128795385360718,
        44.36
    ],
    [
        "\t[input] Value of Wire # 94 :: f\n",
        27.15262222290039,
        44.39
    ],
    [
        "\t[input] Value of Wire # 103 :: 3b\n",
        27.176314115524292,
        44.41
    ],
    [
        "\t[input] Value of Wire # 112 :: d0\n",
        27.19998860359192,
        44.44
    ],
    [
        "\t[input] Value of Wire # 121 :: b2\n",
        27.223577737808228,
        44.46
    ],
    [
        "\t[input] Value of Wire # 130 :: 5e\n",
        27.247114181518555,
        44.49
    ],
    [
        "\t[input] Value of Wire # 139 :: 1f\n",
        27.270703077316284,
        44.51
    ],
    [
        "\t[input] Value of Wire # 148 :: b7\n",
        27.294440984725952,
        44.54
    ],
    [
        "\t[input] Value of Wire # 157 :: 92\n",
        27.317979097366333,
        44.56
    ],
    [
        "\t[input] Value of Wire # 166 :: 9f\n",
        27.34156632423401,
        44.589999999999996
    ],
    [
        "\t[input] Value of Wire # 175 :: 37\n",
        27.365126609802246,
        44.61
    ],
    [
        "\t[input] Value of Wire # 184 :: 6b\n",
        27.388739347457886,
        44.64
    ],
    [
        "\t[input] Value of Wire # 193 :: 74\n",
        27.412240505218506,
        44.69
    ],
    [
        "\t[input] Value of Wire # 202 :: bb\n",
        27.435181617736816,
        44.76
    ],
    [
        "\t[input] Value of Wire # 211 :: 39\n",
        27.457151889801025,
        44.81
    ],
    [
        "\t[input] Value of Wire # 220 :: 5\n",
        27.479414701461792,
        44.86
    ],
    [
        "\t[input] Value of Wire # 229 :: 2b\n",
        27.50247883796692,
        44.9
    ],
    [
        "\t[input] Value of Wire # 238 :: 43\n",
        27.525488138198853,
        44.93
    ],
    [
        "\t[input] Value of Wire # 247 :: 1d\n",
        27.548934936523438,
        44.97
    ],
    [
        "\t[input] Value of Wire # 256 :: 93\n",
        27.571922063827515,
        45.0
    ],
    [
        "\t[input] Value of Wire # 265 :: a9\n",
        27.59524655342102,
        45.02
    ],
    [
        "\t[input] Value of Wire # 274 :: b7\n",
        27.61858820915222,
        45.04
    ],
    [
        "\t[input] Value of Wire # 283 :: f2\n",
        27.641891479492188,
        45.07
    ],
    [
        "\t[input] Value of Wire # 292 :: cb\n",
        27.665084838867188,
        45.089999999999996
    ],
    [
        "\t[input] Value of Wire # 301 :: 99\n",
        27.690605878829956,
        45.12
    ],
    [
        "\t[input] Value of Wire # 310 :: cf\n",
        27.71413278579712,
        45.15
    ],
    [
        "\t[input] Value of Wire # 319 :: a3\n",
        27.73768639564514,
        45.17
    ],
    [
        "\t[input] Value of Wire # 328 :: 2f\n",
        27.761029481887817,
        45.2
    ],
    [
        "\t[input] Value of Wire # 337 :: d4\n",
        27.784351348876953,
        45.22
    ],
    [
        "\t[input] Value of Wire # 346 :: 0\n",
        27.807507514953613,
        45.25
    ],
    [
        "\t[input] Value of Wire # 355 :: 0\n",
        27.830514907836914,
        45.27
    ],
    [
        "\t[input] Value of Wire # 364 :: 0\n",
        27.85359787940979,
        45.29
    ],
    [
        "\t[input] Value of Wire # 373 :: 0\n",
        27.87686014175415,
        45.32
    ],
    [
        "\t[input] Value of Wire # 382 :: 0\n",
        27.900342226028442,
        45.339999999999996
    ],
    [
        "\t[input] Value of Wire # 391 :: 0\n",
        27.923917770385742,
        45.36
    ],
    [
        "\t[input] Value of Wire # 400 :: 0\n",
        27.948264360427856,
        45.4
    ],
    [
        "\t[input] Value of Wire # 409 :: 0\n",
        27.971644163131714,
        45.44
    ],
    [
        "\t[input] Value of Wire # 418 :: 0\n",
        27.99601912498474,
        45.44
    ],
    [
        "\t[input] Value of Wire # 427 :: 0\n",
        28.01943016052246,
        45.48
    ],
    [
        "\t[input] Value of Wire # 436 :: 0\n",
        28.042850255966187,
        45.55
    ],
    [
        "\t[input] Value of Wire # 445 :: 0\n",
        28.066027641296387,
        45.57
    ],
    [
        "\t[input] Value of Wire # 454 :: 0\n",
        28.090657949447632,
        45.64
    ],
    [
        "\t[input] Value of Wire # 463 :: 0\n",
        28.11530590057373,
        45.73
    ],
    [
        "\t[input] Value of Wire # 472 :: 0\n",
        28.14073944091797,
        45.79
    ],
    [
        "\t[input] Value of Wire # 481 :: 0\n",
        28.16854166984558,
        45.839999999999996
    ],
    [
        "\t[input] Value of Wire # 490 :: 0\n",
        28.196810245513916,
        45.9
    ],
    [
        "\t[input] Value of Wire # 499 :: 0\n",
        28.22584342956543,
        45.96
    ],
    [
        "\t[input] Value of Wire # 508 :: 0\n",
        28.253832817077637,
        45.99
    ],
    [
        "\t[input] Value of Wire # 517 :: 0\n",
        28.280959129333496,
        46.0
    ],
    [
        "\t[input] Value of Wire # 526 :: 0\n",
        28.30613088607788,
        46.01
    ],
    [
        "\t[input] Value of Wire # 535 :: 0\n",
        28.33136558532715,
        46.01
    ],
    [
        "\t[input] Value of Wire # 544 :: 0\n",
        28.356568336486816,
        46.01
    ],
    [
        "\t[input] Value of Wire # 553 :: 0\n",
        28.381781101226807,
        46.01
    ],
    [
        "\t[input] Value of Wire # 562 :: 0\n",
        28.407093048095703,
        46.01
    ],
    [
        "\t[input] Value of Wire # 571 :: 0\n",
        28.432694911956787,
        46.01
    ],
    [
        "\t[input] Value of Wire # 580 :: 0\n",
        28.458292484283447,
        46.02
    ],
    [
        "\t[input] Value of Wire # 589 :: 0\n",
        28.483792066574097,
        46.02
    ],
    [
        "Done",
        28.69551372528076,
        46.02
    ]
]