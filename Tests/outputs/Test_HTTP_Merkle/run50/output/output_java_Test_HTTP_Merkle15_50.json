[
    [
        "Merkle Computation starts now",
        0,
        0
    ],
    [
        "Merkle Proof Computed",
        3.814697265625e-06,
        0
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.02142500877380371,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.4547302722930908,
        1.78
    ],
    [
        "Num of variable reads = 1480\n",
        0.46143603324890137,
        1.79
    ],
    [
        "Num of conditional writes = 0\n",
        0.46702098846435547,
        1.82
    ],
    [
        "Num of words per element = 1\n",
        0.47182321548461914,
        1.83
    ],
    [
        "Num of variable writes = 0\n",
        0.47648167610168457,
        1.85
    ],
    [
        "num of accesses = 1480\n",
        0.4809257984161377,
        1.87
    ],
    [
        "Packing Option = 1\n",
        0.4852135181427002,
        1.8800000000000001
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.48943519592285156,
        1.9000000000000001
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.49344897270202637,
        1.9100000000000001
    ],
    [
        "done with read only memory solutions!\n",
        1.0937764644622803,
        2.96
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1044692993164062,
        2.98
    ],
    [
        "Num of variable reads = 128\n",
        1.1132993698120117,
        2.9899999999999998
    ],
    [
        "Num of conditional writes = 0\n",
        1.120800256729126,
        3.0
    ],
    [
        "Num of words per element = 1\n",
        1.127089023590088,
        3.01
    ],
    [
        "Num of variable writes = 0\n",
        1.1329238414764404,
        3.01
    ],
    [
        "num of accesses = 128\n",
        1.1398100852966309,
        3.02
    ],
    [
        "Packing Option = 1\n",
        1.1461620330810547,
        3.03
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.152566909790039,
        3.03
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.159541368484497,
        3.04
    ],
    [
        "Num of variable reads = 520\n",
        1.16695237159729,
        3.05
    ],
    [
        "Num of conditional writes = 0\n",
        1.1749927997589111,
        3.06
    ],
    [
        "Num of words per element = 1\n",
        1.1846446990966797,
        3.08
    ],
    [
        "Num of variable writes = 0\n",
        1.1952323913574219,
        3.0900000000000003
    ],
    [
        "num of accesses = 520\n",
        1.205984354019165,
        3.1100000000000003
    ],
    [
        "Packing Option = 1\n",
        1.2168326377868652,
        3.1100000000000003
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.2275457382202148,
        3.1300000000000003
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.2372989654541016,
        3.1300000000000003
    ],
    [
        "done with read only memory solutions!\n",
        1.5775701999664307,
        3.5100000000000002
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5899579524993896,
        3.52
    ],
    [
        "Num of variable reads = 128\n",
        1.6003084182739258,
        3.5300000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        1.6085033416748047,
        3.54
    ],
    [
        "Num of words per element = 1\n",
        1.6163959503173828,
        3.5500000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.62422513961792,
        3.56
    ],
    [
        "num of accesses = 128\n",
        1.6319782733917236,
        3.56
    ],
    [
        "Packing Option = 1\n",
        1.639690637588501,
        3.5700000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6473336219787598,
        3.58
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6553981304168701,
        3.6
    ],
    [
        "Num of variable reads = 71\n",
        1.6658170223236084,
        3.6
    ],
    [
        "Num of conditional writes = 0\n",
        1.6774940490722656,
        3.62
    ],
    [
        "Num of words per element = 1\n",
        1.6887128353118896,
        3.6300000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.699774980545044,
        3.64
    ],
    [
        "num of accesses = 71\n",
        1.710024118423462,
        3.6500000000000004
    ],
    [
        "Packing Option = 1\n",
        1.7198758125305176,
        3.66
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.7293298244476318,
        3.6700000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.738375186920166,
        3.68
    ],
    [
        "Num of variable reads = 128\n",
        1.7471280097961426,
        3.6900000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        1.755645990371704,
        3.7
    ],
    [
        "Num of words per element = 1\n",
        1.7641212940216064,
        3.7
    ],
    [
        "Num of variable writes = 0\n",
        1.7728540897369385,
        3.71
    ],
    [
        "num of accesses = 128\n",
        1.7827131748199463,
        3.73
    ],
    [
        "Packing Option = 0\n",
        1.7923195362091064,
        3.74
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.8017909526824951,
        3.75
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8109350204467773,
        3.7800000000000002
    ],
    [
        "Num of variable reads = 71\n",
        1.8205077648162842,
        3.79
    ],
    [
        "Num of conditional writes = 0\n",
        1.8297841548919678,
        3.81
    ],
    [
        "Num of words per element = 1\n",
        1.838775396347046,
        3.8200000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.8474113941192627,
        3.83
    ],
    [
        "num of accesses = 71\n",
        1.8560223579406738,
        3.8400000000000003
    ],
    [
        "Packing Option = 1\n",
        1.864898681640625,
        3.8600000000000003
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.8739371299743652,
        3.87
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8825147151947021,
        3.8800000000000003
    ],
    [
        "Num of variable reads = 128\n",
        1.8910269737243652,
        3.89
    ],
    [
        "Num of conditional writes = 0\n",
        1.9001851081848145,
        3.9000000000000004
    ],
    [
        "Num of words per element = 1\n",
        1.9109973907470703,
        3.9200000000000004
    ],
    [
        "Num of variable writes = 0\n",
        1.9219951629638672,
        3.93
    ],
    [
        "num of accesses = 128\n",
        1.9329321384429932,
        3.9400000000000004
    ],
    [
        "Packing Option = 0\n",
        1.9437105655670166,
        3.95
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.953981876373291,
        3.97
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9641098976135254,
        3.99
    ],
    [
        "Num of variable reads = 0\n",
        1.974167823791504,
        4.01
    ],
    [
        "Num of conditional writes = 0\n",
        1.9838554859161377,
        4.02
    ],
    [
        "Num of words per element = 1\n",
        1.9932620525360107,
        4.04
    ],
    [
        "Num of variable writes = 0\n",
        2.0025436878204346,
        4.06
    ],
    [
        "num of accesses = 0\n",
        2.012000322341919,
        4.08
    ],
    [
        "Packing Option = 0\n",
        2.022446870803833,
        4.12
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.0317957401275635,
        4.13
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.040999174118042,
        4.14
    ],
    [
        "Num of variable reads = 5160\n",
        2.0499064922332764,
        4.15
    ],
    [
        "Num of conditional writes = 0\n",
        2.0584676265716553,
        4.16
    ],
    [
        "Num of words per element = 1\n",
        2.0664610862731934,
        4.17
    ],
    [
        "Num of variable writes = 0\n",
        2.074136257171631,
        4.19
    ],
    [
        "num of accesses = 5160\n",
        2.0827760696411133,
        4.2
    ],
    [
        "Packing Option = 1\n",
        2.0907046794891357,
        4.24
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.0985848903656006,
        4.25
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.106937885284424,
        4.28
    ],
    [
        "done with read only memory solutions!\n",
        2.1159825325012207,
        4.32
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.126167058944702,
        4.36
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.1356663703918457,
        4.390000000000001
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        4.566930055618286,
        16.81
    ],
    [
        " \t Total Number of Constraints :  1785449\n",
        4.593158483505249,
        16.92
    ],
    [
        "\n",
        4.614612579345703,
        17.02
    ],
    [
        "Instruction queue size: 5735267\n",
        4.63330602645874,
        17.07
    ],
    [
        "Normal execution\n",
        9.35696530342102,
        21.65
    ],
    [
        "Running Sample Run: run151\n",
        9.376556396484375,
        21.65
    ],
    [
        "tls_data.txt\n",
        9.39254093170166,
        21.66
    ],
    [
        "files/proof_15.txt\n",
        9.4094979763031,
        21.68
    ],
    [
        "Url assignment done\n",
        9.426543951034546,
        21.72
    ],
    [
        "Evaluating Input on the circuit \n",
        9.443933725357056,
        21.77
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        9.462796449661255,
        21.83
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        9.481833457946777,
        21.869999999999997
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        9.501769304275513,
        21.919999999999998
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        9.523534774780273,
        21.95
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        9.545083999633789,
        21.97
    ],
    [
        "\t[input] Value of Wire # 22 :: 14aac95f01e2f299378070048c48c63a71421e3386fd931b3241805dc9cf7200\n",
        9.56568694114685,
        21.99
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        9.585351705551147,
        22.02
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        9.605127096176147,
        22.04
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        9.624551057815552,
        22.06
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        9.644035339355469,
        22.08
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        9.663493871688843,
        22.099999999999998
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        9.682435512542725,
        22.119999999999997
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        9.701674938201904,
        22.14
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        9.721331357955933,
        22.16
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        9.741391897201538,
        22.2
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        9.762101411819458,
        22.25
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        9.78311276435852,
        22.29
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        9.804753065109253,
        22.330000000000002
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        9.85288143157959,
        22.7
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        9.893545389175415,
        23.04
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        9.915024995803833,
        23.07
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        9.937307834625244,
        23.099999999999998
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        9.956743001937866,
        23.11
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        9.973729133605957,
        23.119999999999997
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        9.992705583572388,
        23.15
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        10.01155138015747,
        23.189999999999998
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        10.029837608337402,
        23.229999999999997
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        10.049896955490112,
        23.29
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        10.07081151008606,
        23.349999999999998
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        10.092336893081665,
        23.389999999999997
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        10.113153457641602,
        23.41
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        10.13319730758667,
        23.43
    ],
    [
        "Done",
        10.254088163375854,
        23.45
    ]
]