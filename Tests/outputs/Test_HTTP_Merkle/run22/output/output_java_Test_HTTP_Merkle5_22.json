[
    [
        "Merkle Computation starts now",
        0,
        0
    ],
    [
        "Merkle Proof Computed",
        1.430511474609375e-06,
        0
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.021298646926879883,
        0.02
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.42908263206481934,
        1.65
    ],
    [
        "Num of variable reads = 1480\n",
        0.4370894432067871,
        1.6800000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        0.4424729347229004,
        1.7000000000000002
    ],
    [
        "Num of words per element = 1\n",
        0.4480249881744385,
        1.73
    ],
    [
        "Num of variable writes = 0\n",
        0.4535655975341797,
        1.7400000000000002
    ],
    [
        "num of accesses = 1480\n",
        0.45952272415161133,
        1.7599999999999998
    ],
    [
        "Packing Option = 1\n",
        0.46563196182250977,
        1.79
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.47174549102783203,
        1.8199999999999998
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.4778404235839844,
        1.8399999999999999
    ],
    [
        "done with read only memory solutions!\n",
        1.0550282001495361,
        2.7800000000000002
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.064631462097168,
        2.81
    ],
    [
        "Num of variable reads = 128\n",
        1.0722105503082275,
        2.82
    ],
    [
        "Num of conditional writes = 0\n",
        1.079355001449585,
        2.83
    ],
    [
        "Num of words per element = 1\n",
        1.0861632823944092,
        2.83
    ],
    [
        "Num of variable writes = 0\n",
        1.0927166938781738,
        2.84
    ],
    [
        "num of accesses = 128\n",
        1.0992684364318848,
        2.84
    ],
    [
        "Packing Option = 1\n",
        1.1059722900390625,
        2.85
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.1128079891204834,
        2.86
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1192193031311035,
        2.86
    ],
    [
        "Num of variable reads = 520\n",
        1.1258323192596436,
        2.87
    ],
    [
        "Num of conditional writes = 0\n",
        1.1323432922363281,
        2.88
    ],
    [
        "Num of words per element = 1\n",
        1.1390111446380615,
        2.89
    ],
    [
        "Num of variable writes = 0\n",
        1.1457264423370361,
        2.9
    ],
    [
        "num of accesses = 520\n",
        1.1521849632263184,
        2.9
    ],
    [
        "Packing Option = 1\n",
        1.158782958984375,
        2.91
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1654717922210693,
        2.92
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.1719961166381836,
        2.92
    ],
    [
        "done with read only memory solutions!\n",
        1.5377466678619385,
        3.31
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5480458736419678,
        3.33
    ],
    [
        "Num of variable reads = 128\n",
        1.5554616451263428,
        3.33
    ],
    [
        "Num of conditional writes = 0\n",
        1.5625219345092773,
        3.34
    ],
    [
        "Num of words per element = 1\n",
        1.5693259239196777,
        3.35
    ],
    [
        "Num of variable writes = 0\n",
        1.5758767127990723,
        3.36
    ],
    [
        "num of accesses = 128\n",
        1.5823078155517578,
        3.36
    ],
    [
        "Packing Option = 1\n",
        1.5886220932006836,
        3.37
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.594925880432129,
        3.37
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6011950969696045,
        3.38
    ],
    [
        "Num of variable reads = 71\n",
        1.6074130535125732,
        3.39
    ],
    [
        "Num of conditional writes = 0\n",
        1.6138529777526855,
        3.4
    ],
    [
        "Num of words per element = 1\n",
        1.620570421218872,
        3.41
    ],
    [
        "Num of variable writes = 0\n",
        1.627122163772583,
        3.41
    ],
    [
        "num of accesses = 71\n",
        1.6335232257843018,
        3.42
    ],
    [
        "Packing Option = 1\n",
        1.6397464275360107,
        3.43
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.6456499099731445,
        3.43
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6512010097503662,
        3.43
    ],
    [
        "Num of variable reads = 128\n",
        1.656785488128662,
        3.44
    ],
    [
        "Num of conditional writes = 0\n",
        1.6634323596954346,
        3.45
    ],
    [
        "Num of words per element = 1\n",
        1.669576644897461,
        3.45
    ],
    [
        "Num of variable writes = 0\n",
        1.6753439903259277,
        3.46
    ],
    [
        "num of accesses = 128\n",
        1.6808784008026123,
        3.47
    ],
    [
        "Packing Option = 0\n",
        1.6861143112182617,
        3.47
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6912798881530762,
        3.47
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6964313983917236,
        3.48
    ],
    [
        "Num of variable reads = 71\n",
        1.7015151977539062,
        3.4899999999999998
    ],
    [
        "Num of conditional writes = 0\n",
        1.7065751552581787,
        3.4899999999999998
    ],
    [
        "Num of words per element = 1\n",
        1.7116203308105469,
        3.5
    ],
    [
        "Num of variable writes = 0\n",
        1.7166833877563477,
        3.5
    ],
    [
        "num of accesses = 71\n",
        1.7217023372650146,
        3.51
    ],
    [
        "Packing Option = 1\n",
        1.726860761642456,
        3.51
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.731882095336914,
        3.52
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7372536659240723,
        3.53
    ],
    [
        "Num of variable reads = 128\n",
        1.7430119514465332,
        3.53
    ],
    [
        "Num of conditional writes = 0\n",
        1.7485194206237793,
        3.54
    ],
    [
        "Num of words per element = 1\n",
        1.7546882629394531,
        3.54
    ],
    [
        "Num of variable writes = 0\n",
        1.7627975940704346,
        3.56
    ],
    [
        "num of accesses = 128\n",
        1.7710165977478027,
        3.57
    ],
    [
        "Packing Option = 0\n",
        1.7798233032226562,
        3.6
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.788543462753296,
        3.61
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7972791194915771,
        3.62
    ],
    [
        "Num of variable reads = 0\n",
        1.8058393001556396,
        3.63
    ],
    [
        "Num of conditional writes = 0\n",
        1.8143742084503174,
        3.64
    ],
    [
        "Num of words per element = 1\n",
        1.8229291439056396,
        3.65
    ],
    [
        "Num of variable writes = 0\n",
        1.8316171169281006,
        3.67
    ],
    [
        "num of accesses = 0\n",
        1.8399624824523926,
        3.68
    ],
    [
        "Packing Option = 0\n",
        1.8482754230499268,
        3.69
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.8558354377746582,
        3.69
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8634564876556396,
        3.7
    ],
    [
        "Num of variable reads = 5160\n",
        1.8704032897949219,
        3.71
    ],
    [
        "Num of conditional writes = 0\n",
        1.877079963684082,
        3.72
    ],
    [
        "Num of words per element = 1\n",
        1.883565902709961,
        3.73
    ],
    [
        "Num of variable writes = 0\n",
        1.8899736404418945,
        3.73
    ],
    [
        "num of accesses = 5160\n",
        1.896228313446045,
        3.7399999999999998
    ],
    [
        "Packing Option = 1\n",
        1.9024479389190674,
        3.7399999999999998
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.908668041229248,
        3.75
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.9153985977172852,
        3.76
    ],
    [
        "done with read only memory solutions!\n",
        2.028987169265747,
        3.9699999999999998
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.037421703338623,
        3.99
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.0443480014801025,
        4.0
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        4.499736309051514,
        16.78
    ],
    [
        " \t Total Number of Constraints :  1783029\n",
        4.520094871520996,
        16.86
    ],
    [
        "\n",
        4.536884069442749,
        16.93
    ],
    [
        "Instruction queue size: 5721117\n",
        4.551984786987305,
        17.0
    ],
    [
        "Normal execution\n",
        9.426981449127197,
        21.48
    ],
    [
        "Running Sample Run: run51\n",
        9.443103790283203,
        21.48
    ],
    [
        "tls_data.txt\n",
        9.45594310760498,
        21.490000000000002
    ],
    [
        "files/proof_5.txt\n",
        9.468855142593384,
        21.51
    ],
    [
        "Url assignment done\n",
        9.4828519821167,
        21.54
    ],
    [
        "Evaluating Input on the circuit \n",
        9.496885776519775,
        21.58
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        9.512455701828003,
        21.63
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        9.528008699417114,
        21.68
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        9.543745994567871,
        21.709999999999997
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        9.559924364089966,
        21.74
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        9.574940204620361,
        21.75
    ],
    [
        "\t[input] Value of Wire # 22 :: 142f2c5bdd708c2c4e921c6cbb28963944b0d8b7191020d1a46d60c03b40ce6d\n",
        9.589462041854858,
        21.77
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        9.604620218276978,
        21.79
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        9.619866847991943,
        21.81
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        9.63437819480896,
        21.819999999999997
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        9.648456811904907,
        21.84
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        9.662384033203125,
        21.849999999999998
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        9.676307439804077,
        21.869999999999997
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        9.69058084487915,
        21.88
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        9.704843759536743,
        21.9
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        9.719671487808228,
        21.909999999999997
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        9.734517097473145,
        21.93
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        9.749361753463745,
        21.939999999999998
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        9.76420521736145,
        21.97
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        9.779947757720947,
        22.009999999999998
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        9.795889377593994,
        22.049999999999997
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        9.811617136001587,
        22.08
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        9.827261686325073,
        22.099999999999998
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        9.84265398979187,
        22.119999999999997
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        9.857495069503784,
        22.139999999999997
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        9.872054815292358,
        22.159999999999997
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        9.886592626571655,
        22.169999999999998
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        9.901790142059326,
        22.189999999999998
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        9.917884111404419,
        22.2
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        9.933068990707397,
        22.229999999999997
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        9.948241472244263,
        22.27
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        9.963945627212524,
        22.29
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        9.978983879089355,
        22.31
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        9.993324995040894,
        22.34
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        10.00763726234436,
        22.38
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        10.022520780563354,
        22.4
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        10.037061929702759,
        22.409999999999997
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        10.05124282836914,
        22.43
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        10.06534194946289,
        22.439999999999998
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        10.07962965965271,
        22.459999999999997
    ],
    [
        "Done",
        10.16998291015625,
        22.459999999999997
    ]
]