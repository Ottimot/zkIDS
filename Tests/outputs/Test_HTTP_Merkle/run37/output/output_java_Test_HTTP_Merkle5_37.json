[
    [
        "Merkle Computation starts now",
        0,
        0
    ],
    [
        "Merkle Proof Computed",
        1.430511474609375e-06,
        0
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.02164745330810547,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.4354112148284912,
        1.7000000000000002
    ],
    [
        "Num of variable reads = 1480\n",
        0.44166994094848633,
        1.73
    ],
    [
        "Num of conditional writes = 0\n",
        0.44677281379699707,
        1.75
    ],
    [
        "Num of words per element = 1\n",
        0.45123744010925293,
        1.76
    ],
    [
        "Num of variable writes = 0\n",
        0.4549548625946045,
        1.78
    ],
    [
        "num of accesses = 1480\n",
        0.4581749439239502,
        1.79
    ],
    [
        "Packing Option = 1\n",
        0.461148738861084,
        1.8
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.4639251232147217,
        1.82
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.4666118621826172,
        1.82
    ],
    [
        "done with read only memory solutions!\n",
        1.0576794147491455,
        2.81
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.0681273937225342,
        2.83
    ],
    [
        "Num of variable reads = 128\n",
        1.0764544010162354,
        2.85
    ],
    [
        "Num of conditional writes = 0\n",
        1.084881067276001,
        2.85
    ],
    [
        "Num of words per element = 1\n",
        1.0925664901733398,
        2.86
    ],
    [
        "Num of variable writes = 0\n",
        1.1000733375549316,
        2.87
    ],
    [
        "num of accesses = 128\n",
        1.107544183731079,
        2.88
    ],
    [
        "Packing Option = 1\n",
        1.1147208213806152,
        2.88
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.121917963027954,
        2.89
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.129016399383545,
        2.9
    ],
    [
        "Num of variable reads = 520\n",
        1.1361489295959473,
        2.91
    ],
    [
        "Num of conditional writes = 0\n",
        1.1432147026062012,
        2.91
    ],
    [
        "Num of words per element = 1\n",
        1.1506645679473877,
        2.92
    ],
    [
        "Num of variable writes = 0\n",
        1.158207654953003,
        2.9299999999999997
    ],
    [
        "num of accesses = 520\n",
        1.1654179096221924,
        2.94
    ],
    [
        "Packing Option = 1\n",
        1.172595500946045,
        2.94
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1793813705444336,
        2.9499999999999997
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.1861903667449951,
        2.96
    ],
    [
        "done with read only memory solutions!\n",
        1.5377247333526611,
        3.32
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5488505363464355,
        3.34
    ],
    [
        "Num of variable reads = 128\n",
        1.558053970336914,
        3.34
    ],
    [
        "Num of conditional writes = 0\n",
        1.5655975341796875,
        3.35
    ],
    [
        "Num of words per element = 1\n",
        1.5731384754180908,
        3.36
    ],
    [
        "Num of variable writes = 0\n",
        1.5806763172149658,
        3.37
    ],
    [
        "num of accesses = 128\n",
        1.5876688957214355,
        3.38
    ],
    [
        "Packing Option = 1\n",
        1.5945179462432861,
        3.38
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6013121604919434,
        3.39
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6080093383789062,
        3.4
    ],
    [
        "Num of variable reads = 71\n",
        1.6149115562438965,
        3.4
    ],
    [
        "Num of conditional writes = 0\n",
        1.6217951774597168,
        3.41
    ],
    [
        "Num of words per element = 1\n",
        1.628530740737915,
        3.42
    ],
    [
        "Num of variable writes = 0\n",
        1.6351966857910156,
        3.42
    ],
    [
        "num of accesses = 71\n",
        1.6417887210845947,
        3.4299999999999997
    ],
    [
        "Packing Option = 1\n",
        1.6482937335968018,
        3.44
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.6549708843231201,
        3.44
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6614408493041992,
        3.4499999999999997
    ],
    [
        "Num of variable reads = 128\n",
        1.6685612201690674,
        3.46
    ],
    [
        "Num of conditional writes = 0\n",
        1.6754565238952637,
        3.46
    ],
    [
        "Num of words per element = 1\n",
        1.6822190284729004,
        3.4699999999999998
    ],
    [
        "Num of variable writes = 0\n",
        1.6888964176177979,
        3.48
    ],
    [
        "num of accesses = 128\n",
        1.6955034732818604,
        3.48
    ],
    [
        "Packing Option = 0\n",
        1.702470064163208,
        3.4899999999999998
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.7093720436096191,
        3.5
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.715916633605957,
        3.5
    ],
    [
        "Num of variable reads = 71\n",
        1.7226896286010742,
        3.51
    ],
    [
        "Num of conditional writes = 0\n",
        1.729283332824707,
        3.52
    ],
    [
        "Num of words per element = 1\n",
        1.7362174987792969,
        3.53
    ],
    [
        "Num of variable writes = 0\n",
        1.7429416179656982,
        3.53
    ],
    [
        "num of accesses = 71\n",
        1.7495536804199219,
        3.54
    ],
    [
        "Packing Option = 1\n",
        1.757263422012329,
        3.55
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.7653141021728516,
        3.57
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.773848056793213,
        3.58
    ],
    [
        "Num of variable reads = 128\n",
        1.7821264266967773,
        3.6
    ],
    [
        "Num of conditional writes = 0\n",
        1.7900664806365967,
        3.61
    ],
    [
        "Num of words per element = 1\n",
        1.797722578048706,
        3.62
    ],
    [
        "Num of variable writes = 0\n",
        1.805276870727539,
        3.63
    ],
    [
        "num of accesses = 128\n",
        1.8135981559753418,
        3.64
    ],
    [
        "Packing Option = 0\n",
        1.8219518661499023,
        3.65
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.830003023147583,
        3.67
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.837843894958496,
        3.69
    ],
    [
        "Num of variable reads = 0\n",
        1.8454453945159912,
        3.69
    ],
    [
        "Num of conditional writes = 0\n",
        1.8530607223510742,
        3.6999999999999997
    ],
    [
        "Num of words per element = 1\n",
        1.8599367141723633,
        3.71
    ],
    [
        "Num of variable writes = 0\n",
        1.866588830947876,
        3.7199999999999998
    ],
    [
        "num of accesses = 0\n",
        1.872903823852539,
        3.7199999999999998
    ],
    [
        "Packing Option = 0\n",
        1.8789002895355225,
        3.73
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.884887933731079,
        3.7399999999999998
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8903040885925293,
        3.7399999999999998
    ],
    [
        "Num of variable reads = 5160\n",
        1.895341396331787,
        3.75
    ],
    [
        "Num of conditional writes = 0\n",
        1.9003417491912842,
        3.75
    ],
    [
        "Num of words per element = 1\n",
        1.9055113792419434,
        3.76
    ],
    [
        "Num of variable writes = 0\n",
        1.9140405654907227,
        3.77
    ],
    [
        "num of accesses = 5160\n",
        1.9235467910766602,
        3.8
    ],
    [
        "Packing Option = 1\n",
        1.9334518909454346,
        3.81
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.9433846473693848,
        3.83
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.9537889957427979,
        3.85
    ],
    [
        "done with read only memory solutions!\n",
        2.0236093997955322,
        3.9899999999999998
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.0335378646850586,
        3.9899999999999998
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.041841745376587,
        4.01
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        4.475947856903076,
        16.55
    ],
    [
        " \t Total Number of Constraints :  1783029\n",
        4.4984941482543945,
        16.63
    ],
    [
        "\n",
        4.519758462905884,
        16.71
    ],
    [
        "Instruction queue size: 5721117\n",
        4.541869163513184,
        16.79
    ],
    [
        "Normal execution\n",
        9.435832977294922,
        21.36
    ],
    [
        "Running Sample Run: run51\n",
        9.453445434570312,
        21.37
    ],
    [
        "tls_data.txt\n",
        9.467634439468384,
        21.37
    ],
    [
        "files/proof_5.txt\n",
        9.481745958328247,
        21.38
    ],
    [
        "Url assignment done\n",
        9.496460914611816,
        21.419999999999998
    ],
    [
        "Evaluating Input on the circuit \n",
        9.513201236724854,
        21.48
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        9.530953645706177,
        21.55
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        9.550642728805542,
        21.599999999999998
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        9.567853689193726,
        21.639999999999997
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        9.585956573486328,
        21.669999999999998
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        9.602908849716187,
        21.689999999999998
    ],
    [
        "\t[input] Value of Wire # 22 :: 142f2c5bdd708c2c4e921c6cbb28963944b0d8b7191020d1a46d60c03b40ce6d\n",
        9.620552062988281,
        21.72
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        9.637671947479248,
        21.74
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        9.654016017913818,
        21.75
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        9.670323610305786,
        21.77
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        9.685936450958252,
        21.79
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        9.70189905166626,
        21.799999999999997
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        9.718219995498657,
        21.82
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        9.734510898590088,
        21.84
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        9.750472068786621,
        21.86
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        9.76694917678833,
        21.869999999999997
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        9.7830970287323,
        21.889999999999997
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        9.799292087554932,
        21.919999999999998
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        9.818121671676636,
        21.990000000000002
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        9.836004734039307,
        22.03
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        9.852410316467285,
        22.05
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        9.868849754333496,
        22.080000000000002
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        9.885595321655273,
        22.09
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        9.90249752998352,
        22.11
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        9.919163465499878,
        22.13
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        9.934748411178589,
        22.15
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        9.949101209640503,
        22.16
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        9.96431827545166,
        22.18
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        9.97990083694458,
        22.23
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        9.994732856750488,
        22.25
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        10.01038122177124,
        22.28
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        10.02744174003601,
        22.32
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        10.043725728988647,
        22.35
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        10.060024738311768,
        22.37
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        10.076191425323486,
        22.39
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        10.092453718185425,
        22.4
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        10.108500003814697,
        22.42
    ],
    [
        "Done",
        10.227053165435791,
        22.42
    ]
]