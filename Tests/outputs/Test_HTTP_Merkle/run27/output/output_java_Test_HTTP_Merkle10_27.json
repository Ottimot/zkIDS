[
    [
        "Merkle Computation starts now",
        0,
        0
    ],
    [
        "Merkle Proof Computed",
        3.5762786865234375e-06,
        0
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.021746158599853516,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.4281768798828125,
        1.6600000000000001
    ],
    [
        "Num of variable reads = 1480\n",
        0.4340660572052002,
        1.6800000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        0.43877553939819336,
        1.7000000000000002
    ],
    [
        "Num of words per element = 1\n",
        0.4429490566253662,
        1.7200000000000002
    ],
    [
        "Num of variable writes = 0\n",
        0.4467470645904541,
        1.74
    ],
    [
        "num of accesses = 1480\n",
        0.45046424865722656,
        1.75
    ],
    [
        "Packing Option = 1\n",
        0.4541025161743164,
        1.77
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.457733154296875,
        1.78
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.46133899688720703,
        1.8
    ],
    [
        "done with read only memory solutions!\n",
        1.0296275615692139,
        2.8200000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.0383872985839844,
        2.8400000000000003
    ],
    [
        "Num of variable reads = 128\n",
        1.0455784797668457,
        2.8400000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.0523452758789062,
        2.85
    ],
    [
        "Num of words per element = 1\n",
        1.0588939189910889,
        2.8600000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.0653040409088135,
        2.8600000000000003
    ],
    [
        "num of accesses = 128\n",
        1.0717666149139404,
        2.87
    ],
    [
        "Packing Option = 1\n",
        1.078749418258667,
        2.8800000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.0855183601379395,
        2.8800000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.0922014713287354,
        2.89
    ],
    [
        "Num of variable reads = 520\n",
        1.0988013744354248,
        2.9000000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        1.1052298545837402,
        2.9000000000000004
    ],
    [
        "Num of words per element = 1\n",
        1.1119298934936523,
        2.9200000000000004
    ],
    [
        "Num of variable writes = 0\n",
        1.1184990406036377,
        2.9200000000000004
    ],
    [
        "num of accesses = 520\n",
        1.124924898147583,
        2.93
    ],
    [
        "Packing Option = 1\n",
        1.13126802444458,
        2.93
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1375465393066406,
        2.94
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.143733263015747,
        2.95
    ],
    [
        "done with read only memory solutions!\n",
        1.5071158409118652,
        3.3400000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5164494514465332,
        3.35
    ],
    [
        "Num of variable reads = 128\n",
        1.5240941047668457,
        3.3600000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.5312309265136719,
        3.3600000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.537492036819458,
        3.37
    ],
    [
        "Num of variable writes = 0\n",
        1.5423197746276855,
        3.3800000000000003
    ],
    [
        "num of accesses = 128\n",
        1.546863079071045,
        3.3800000000000003
    ],
    [
        "Packing Option = 1\n",
        1.5513098239898682,
        3.3800000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.555701732635498,
        3.39
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5602233409881592,
        3.4000000000000004
    ],
    [
        "Num of variable reads = 71\n",
        1.5647234916687012,
        3.4000000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        1.5691957473754883,
        3.4000000000000004
    ],
    [
        "Num of words per element = 1\n",
        1.5736665725708008,
        3.41
    ],
    [
        "Num of variable writes = 0\n",
        1.5794734954833984,
        3.4200000000000004
    ],
    [
        "num of accesses = 71\n",
        1.5859839916229248,
        3.4200000000000004
    ],
    [
        "Packing Option = 1\n",
        1.5918354988098145,
        3.43
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.5973808765411377,
        3.44
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6036770343780518,
        3.44
    ],
    [
        "Num of variable reads = 128\n",
        1.6089601516723633,
        3.45
    ],
    [
        "Num of conditional writes = 0\n",
        1.6137845516204834,
        3.45
    ],
    [
        "Num of words per element = 1\n",
        1.618682861328125,
        3.46
    ],
    [
        "Num of variable writes = 0\n",
        1.6235263347625732,
        3.46
    ],
    [
        "num of accesses = 128\n",
        1.6283273696899414,
        3.47
    ],
    [
        "Packing Option = 0\n",
        1.6331419944763184,
        3.47
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6379060745239258,
        3.48
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6426186561584473,
        3.48
    ],
    [
        "Num of variable reads = 71\n",
        1.6472837924957275,
        3.48
    ],
    [
        "Num of conditional writes = 0\n",
        1.6520380973815918,
        3.49
    ],
    [
        "Num of words per element = 1\n",
        1.6567978858947754,
        3.5
    ],
    [
        "Num of variable writes = 0\n",
        1.6616032123565674,
        3.5
    ],
    [
        "num of accesses = 71\n",
        1.6665127277374268,
        3.5
    ],
    [
        "Packing Option = 1\n",
        1.671318531036377,
        3.5100000000000002
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.676215648651123,
        3.52
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6825177669525146,
        3.52
    ],
    [
        "Num of variable reads = 128\n",
        1.6879463195800781,
        3.5300000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        1.6929938793182373,
        3.5300000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.6979260444641113,
        3.54
    ],
    [
        "Num of variable writes = 0\n",
        1.7039802074432373,
        3.5500000000000003
    ],
    [
        "num of accesses = 128\n",
        1.7093703746795654,
        3.5500000000000003
    ],
    [
        "Packing Option = 0\n",
        1.7145371437072754,
        3.56
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.7196059226989746,
        3.5700000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7247240543365479,
        3.5700000000000003
    ],
    [
        "Num of variable reads = 0\n",
        1.7300806045532227,
        3.58
    ],
    [
        "Num of conditional writes = 0\n",
        1.7354075908660889,
        3.5900000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.7407407760620117,
        3.6100000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.7459423542022705,
        3.6100000000000003
    ],
    [
        "num of accesses = 0\n",
        1.751218318939209,
        3.62
    ],
    [
        "Packing Option = 0\n",
        1.7567033767700195,
        3.64
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.762223243713379,
        3.64
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7679431438446045,
        3.66
    ],
    [
        "Num of variable reads = 5160\n",
        1.7735257148742676,
        3.66
    ],
    [
        "Num of conditional writes = 0\n",
        1.7790906429290771,
        3.6700000000000004
    ],
    [
        "Num of words per element = 1\n",
        1.784804344177246,
        3.6700000000000004
    ],
    [
        "Num of variable writes = 0\n",
        1.7900745868682861,
        3.68
    ],
    [
        "num of accesses = 5160\n",
        1.7951033115386963,
        3.68
    ],
    [
        "Packing Option = 1\n",
        1.8003199100494385,
        3.69
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.8059542179107666,
        3.7
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.8114283084869385,
        3.71
    ],
    [
        "done with read only memory solutions!\n",
        1.9992854595184326,
        4.03
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.0096778869628906,
        4.05
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.0187275409698486,
        4.11
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        4.521946907043457,
        16.88
    ],
    [
        " \t Total Number of Constraints :  1784239\n",
        4.540969133377075,
        16.97
    ],
    [
        "\n",
        4.556321859359741,
        17.04
    ],
    [
        "Instruction queue size: 5728192\n",
        4.576934337615967,
        17.130000000000003
    ],
    [
        "Normal execution\n",
        9.460813760757446,
        21.61
    ],
    [
        "Running Sample Run: run101\n",
        9.478578329086304,
        21.61
    ],
    [
        "tls_data.txt\n",
        9.49202585220337,
        21.62
    ],
    [
        "files/proof_10.txt\n",
        9.505801916122437,
        21.63
    ],
    [
        "Url assignment done\n",
        9.521299123764038,
        21.680000000000003
    ],
    [
        "Evaluating Input on the circuit \n",
        9.536879062652588,
        21.75
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        9.552895784378052,
        21.8
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        9.568249702453613,
        21.830000000000002
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        9.584015130996704,
        21.87
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        9.600753545761108,
        21.900000000000002
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        9.616818189620972,
        21.91
    ],
    [
        "\t[input] Value of Wire # 22 :: 11418fd811c07f8f7635ee5b9df4d57f47f79218d21e011f380f91daa7aa9e80\n",
        9.632822036743164,
        21.930000000000003
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        9.648335218429565,
        21.950000000000003
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        9.663233757019043,
        21.970000000000002
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        9.678451299667358,
        21.98
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        9.692978382110596,
        22.0
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        9.707468271255493,
        22.020000000000003
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        9.722094297409058,
        22.03
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        9.737376689910889,
        22.05
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        9.752380609512329,
        22.07
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        9.767228603363037,
        22.080000000000002
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        9.781941890716553,
        22.1
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        9.796766996383667,
        22.110000000000003
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        9.812601566314697,
        22.16
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        9.829394102096558,
        22.21
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        9.846078872680664,
        22.240000000000002
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        9.862131595611572,
        22.26
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        9.878074884414673,
        22.290000000000003
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        9.893613338470459,
        22.3
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        9.910850048065186,
        22.32
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        9.928403854370117,
        22.34
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        9.94481086730957,
        22.360000000000003
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        9.959254026412964,
        22.37
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        9.975114107131958,
        22.39
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        9.99049973487854,
        22.430000000000003
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        10.005205869674683,
        22.450000000000003
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        10.021499156951904,
        22.48
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        10.038874626159668,
        22.51
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        10.056756973266602,
        22.55
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        10.073304653167725,
        22.580000000000002
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        10.088940382003784,
        22.59
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        10.105002641677856,
        22.610000000000003
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        10.121610641479492,
        22.62
    ],
    [
        "Done",
        10.225583553314209,
        22.630000000000003
    ]
]