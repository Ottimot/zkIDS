[
    [
        "Verification starts now",
        0.0
    ],
    [
        "Proof received",
        0.00030612945556640625
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < HTTP_Merkle_Token >\n",
        0.2980036735534668,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.7029540538787842,
        1.6400000000000001
    ],
    [
        "Num of variable reads = 1480\n",
        0.7137885093688965,
        1.6600000000000001
    ],
    [
        "Num of conditional writes = 0\n",
        0.7211775779724121,
        1.6900000000000002
    ],
    [
        "Num of words per element = 1\n",
        0.7280304431915283,
        1.7100000000000002
    ],
    [
        "Num of variable writes = 0\n",
        0.734403133392334,
        1.7300000000000002
    ],
    [
        "num of accesses = 1480\n",
        0.7398684024810791,
        1.76
    ],
    [
        "Packing Option = 1\n",
        0.7462842464447021,
        1.78
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.7533462047576904,
        1.81
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.7700612545013428,
        1.9500000000000002
    ],
    [
        "done with read only memory solutions!\n",
        1.354196548461914,
        2.98
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.367140293121338,
        3.0
    ],
    [
        "Num of variable reads = 128\n",
        1.3778834342956543,
        3.0
    ],
    [
        "Num of conditional writes = 0\n",
        1.385444164276123,
        3.0100000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.3938579559326172,
        3.02
    ],
    [
        "Num of variable writes = 0\n",
        1.4020819664001465,
        3.0300000000000002
    ],
    [
        "num of accesses = 128\n",
        1.409358024597168,
        3.04
    ],
    [
        "Packing Option = 1\n",
        1.4163689613342285,
        3.0500000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.4236483573913574,
        3.06
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4306373596191406,
        3.0700000000000003
    ],
    [
        "Num of variable reads = 520\n",
        1.4374890327453613,
        3.0700000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.4443974494934082,
        3.08
    ],
    [
        "Num of words per element = 1\n",
        1.4510259628295898,
        3.0900000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.4574079513549805,
        3.0900000000000003
    ],
    [
        "num of accesses = 520\n",
        1.4643843173980713,
        3.1
    ],
    [
        "Packing Option = 1\n",
        1.4726603031158447,
        3.1100000000000003
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.4798142910003662,
        3.1100000000000003
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.4861230850219727,
        3.12
    ],
    [
        "done with read only memory solutions!\n",
        1.837984561920166,
        3.48
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8502182960510254,
        3.5
    ],
    [
        "Num of variable reads = 128\n",
        1.8603367805480957,
        3.5100000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        1.8707561492919922,
        3.52
    ],
    [
        "Num of words per element = 1\n",
        1.880833387374878,
        3.5300000000000002
    ],
    [
        "Num of variable writes = 0\n",
        1.8902223110198975,
        3.54
    ],
    [
        "num of accesses = 128\n",
        1.8995575904846191,
        3.5500000000000003
    ],
    [
        "Packing Option = 1\n",
        1.9084758758544922,
        3.56
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.9169704914093018,
        3.5700000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9246246814727783,
        3.58
    ],
    [
        "Num of variable reads = 71\n",
        1.9320316314697266,
        3.5900000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.9396045207977295,
        3.5900000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.9467296600341797,
        3.6
    ],
    [
        "Num of variable writes = 0\n",
        1.9534013271331787,
        3.6100000000000003
    ],
    [
        "num of accesses = 71\n",
        1.9591665267944336,
        3.6100000000000003
    ],
    [
        "Packing Option = 1\n",
        1.9650828838348389,
        3.62
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.9728319644927979,
        3.6300000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9809818267822266,
        3.6300000000000003
    ],
    [
        "Num of variable reads = 128\n",
        1.9925694465637207,
        3.6500000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        2.0046277046203613,
        3.66
    ],
    [
        "Num of words per element = 1\n",
        2.0164036750793457,
        3.6700000000000004
    ],
    [
        "Num of variable writes = 0\n",
        2.0278475284576416,
        3.68
    ],
    [
        "num of accesses = 128\n",
        2.0349292755126953,
        3.6900000000000004
    ],
    [
        "Packing Option = 0\n",
        2.041820526123047,
        3.7
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.0486812591552734,
        3.7
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.0556769371032715,
        3.7100000000000004
    ],
    [
        "Num of variable reads = 71\n",
        2.063645362854004,
        3.73
    ],
    [
        "Num of conditional writes = 0\n",
        2.072798728942871,
        3.74
    ],
    [
        "Num of words per element = 1\n",
        2.0820937156677246,
        3.7600000000000002
    ],
    [
        "Num of variable writes = 0\n",
        2.091313123703003,
        3.7800000000000002
    ],
    [
        "num of accesses = 71\n",
        2.100281000137329,
        3.79
    ],
    [
        "Packing Option = 1\n",
        2.10856032371521,
        3.8000000000000003
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.1166226863861084,
        3.81
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.124743700027466,
        3.8200000000000003
    ],
    [
        "Num of variable reads = 128\n",
        2.1329007148742676,
        3.83
    ],
    [
        "Num of conditional writes = 0\n",
        2.140885591506958,
        3.8400000000000003
    ],
    [
        "Num of words per element = 1\n",
        2.1484122276306152,
        3.85
    ],
    [
        "Num of variable writes = 0\n",
        2.155484914779663,
        3.8600000000000003
    ],
    [
        "num of accesses = 128\n",
        2.1622259616851807,
        3.8600000000000003
    ],
    [
        "Packing Option = 0\n",
        2.16937255859375,
        3.87
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.177443742752075,
        3.8800000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.1851024627685547,
        3.89
    ],
    [
        "Num of variable reads = 0\n",
        2.1918749809265137,
        3.9000000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        2.1985366344451904,
        3.9000000000000004
    ],
    [
        "Num of words per element = 1\n",
        2.205254077911377,
        3.91
    ],
    [
        "Num of variable writes = 0\n",
        2.2128031253814697,
        3.9200000000000004
    ],
    [
        "num of accesses = 0\n",
        2.220750093460083,
        3.9400000000000004
    ],
    [
        "Packing Option = 0\n",
        2.2286953926086426,
        3.95
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.236379384994507,
        3.9600000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.244283437728882,
        3.97
    ],
    [
        "Num of variable reads = 5160\n",
        2.2527921199798584,
        3.99
    ],
    [
        "Num of conditional writes = 0\n",
        2.261496067047119,
        4.01
    ],
    [
        "Num of words per element = 1\n",
        2.271322250366211,
        4.03
    ],
    [
        "Num of variable writes = 0\n",
        2.2818562984466553,
        4.05
    ],
    [
        "num of accesses = 5160\n",
        2.2913999557495117,
        4.07
    ],
    [
        "Packing Option = 1\n",
        2.3010807037353516,
        4.09
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.31022310256958,
        4.1
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.3188838958740234,
        4.11
    ],
    [
        "done with read only memory solutions!\n",
        2.326997756958008,
        4.12
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.33487606048584,
        4.14
    ],
    [
        "Num of variable reads = 5\n",
        2.342961549758911,
        4.16
    ],
    [
        "Num of conditional writes = 0\n",
        2.3511757850646973,
        4.17
    ],
    [
        "Num of words per element = 1\n",
        2.3600070476531982,
        4.2
    ],
    [
        "Num of variable writes = 0\n",
        2.369701862335205,
        4.23
    ],
    [
        "num of accesses = 5\n",
        2.379770517349243,
        4.2700000000000005
    ],
    [
        "Packing Option = 1\n",
        2.3900420665740967,
        4.29
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.40130352973938,
        4.340000000000001
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.412081480026245,
        4.380000000000001
    ],
    [
        "[2nd Phase] Running Circuit Generator for < HTTP_Merkle_Token >\n",
        2.422305107116699,
        4.4
    ],
    [
        "Circuit Generation Done for < HTTP_Merkle_Token >  \n",
        4.815024137496948,
        17.24
    ],
    [
        " \t Total Number of Constraints :  1792370\n",
        4.843093395233154,
        17.36
    ],
    [
        "\n",
        4.871139764785767,
        17.47
    ],
    [
        "Instruction queue size: 5747712\n",
        4.897547245025635,
        17.56
    ],
    [
        "Generate public inputs only\n",
        9.686371803283691,
        23.330000000000002
    ],
    [
        "Generating public parameters for: 5c209780a5f64c7a9d7e9a22fa944e7976d2b3f9a786ee3a7a2a98280d8b331d1\n",
        9.707866430282593,
        23.34
    ],
    [
        "../Middlebox/files/transcript_5c209780a5f64c7a9d7e9a22fa944e7976d2b3f9a786ee3a7a2a98280d8b331d1.txt\n",
        9.728763341903687,
        23.35
    ],
    [
        "../Middlebox/files/merkle_proof_pub.txt\n",
        9.748878717422485,
        23.36
    ],
    [
        "asdfghc\n",
        9.77263855934143,
        23.4
    ],
    [
        "97\n",
        9.795132398605347,
        23.43
    ],
    [
        "115\n",
        9.817624807357788,
        23.45
    ],
    [
        "100\n",
        9.840014219284058,
        23.47
    ],
    [
        "102\n",
        9.8610520362854,
        23.48
    ],
    [
        "103\n",
        9.954437732696533,
        23.48
    ],
    [
        "7\n",
        9.954576015472412,
        23.48
    ],
    [
        "Sample Run: 5c209780a5f64c7a9d7e9a22fa944e7976d2b3f9a786ee3a7a2a98280d8b331d1 finished!\n",
        9.954636812210083,
        23.48
    ],
    [
        "1\n",
        9.954688310623169,
        23.48
    ],
    [
        "1768\n",
        9.95473861694336,
        23.48
    ],
    [
        "264\n",
        9.954789161682129,
        23.48
    ],
    [
        "4\n",
        9.954837560653687,
        23.48
    ],
    [
        "7\n",
        9.954886198043823,
        23.48
    ],
    [
        "18765087434070279118326479840333070550893160322590316806400066067763149452870\n",
        9.954933643341064,
        23.48
    ],
    [
        "173\n",
        9.954980850219727,
        23.48
    ],
    [
        "48\n",
        9.95503544807434,
        23.48
    ],
    [
        "157\n",
        9.955083847045898,
        23.48
    ],
    [
        "216\n",
        9.955130577087402,
        23.48
    ],
    [
        "195\n",
        9.955176830291748,
        23.48
    ],
    [
        "140\n",
        9.955222368240356,
        23.48
    ],
    [
        "16\n",
        9.955268859863281,
        23.48
    ],
    [
        "102\n",
        9.955314636230469,
        23.48
    ],
    [
        "217\n",
        9.955360889434814,
        23.48
    ],
    [
        "83\n",
        9.955406665802002,
        23.48
    ],
    [
        "7\n",
        9.95545220375061,
        23.48
    ],
    [
        "103\n",
        9.955498695373535,
        23.48
    ],
    [
        "196\n",
        9.955544471740723,
        23.48
    ],
    [
        "165\n",
        9.955590009689331,
        23.48
    ],
    [
        "97\n",
        9.95563554763794,
        23.48
    ],
    [
        "84\n",
        9.955680847167969,
        23.48
    ],
    [
        "114\n",
        9.955726385116577,
        23.48
    ],
    [
        "90\n",
        9.955775022506714,
        23.48
    ],
    [
        "93\n",
        9.955820560455322,
        23.48
    ],
    [
        "111\n",
        9.955866575241089,
        23.48
    ],
    [
        "32\n",
        9.955913305282593,
        23.48
    ],
    [
        "61\n",
        9.955959796905518,
        23.48
    ],
    [
        "141\n",
        9.956008672714233,
        23.48
    ],
    [
        "243\n",
        9.956054925918579,
        23.48
    ],
    [
        "245\n",
        9.956100225448608,
        23.48
    ],
    [
        "147\n",
        9.956145763397217,
        23.48
    ],
    [
        "183\n",
        9.956190824508667,
        23.48
    ],
    [
        "13\n",
        9.956235885620117,
        23.48
    ],
    [
        "113\n",
        9.95628046989441,
        23.48
    ],
    [
        "154\n",
        9.956325769424438,
        23.48
    ],
    [
        "43\n",
        9.95637059211731,
        23.48
    ],
    [
        "55\n",
        9.956416130065918,
        23.48
    ],
    [
        "136\n",
        9.95646071434021,
        23.48
    ],
    [
        "52\n",
        9.956505298614502,
        23.48
    ],
    [
        "32\n",
        9.956549882888794,
        23.48
    ],
    [
        "215\n",
        9.956594228744507,
        23.48
    ],
    [
        "0\n",
        9.95663857460022,
        23.48
    ],
    [
        "0\n",
        9.956682682037354,
        23.48
    ],
    [
        "0\n",
        9.9567289352417,
        23.48
    ],
    [
        "0\n",
        9.95677375793457,
        23.48
    ],
    [
        "0\n",
        9.956818342208862,
        23.48
    ],
    [
        "0\n",
        9.956862926483154,
        23.48
    ],
    [
        "0\n",
        9.956907510757446,
        23.48
    ],
    [
        "0\n",
        9.956954717636108,
        23.48
    ],
    [
        "0\n",
        9.957000017166138,
        23.48
    ],
    [
        "0\n",
        9.957045316696167,
        23.48
    ],
    [
        "0\n",
        9.95708966255188,
        23.48
    ],
    [
        "0\n",
        9.957134246826172,
        23.48
    ],
    [
        "0\n",
        9.957178831100464,
        23.48
    ],
    [
        "0\n",
        9.957223415374756,
        23.48
    ],
    [
        "0\n",
        9.957266807556152,
        23.48
    ],
    [
        "0\n",
        9.957310914993286,
        23.48
    ],
    [
        "0\n",
        9.95735502243042,
        23.48
    ],
    [
        "0\n",
        9.957398891448975,
        23.48
    ],
    [
        "0\n",
        9.957443237304688,
        23.48
    ],
    [
        "0\n",
        9.957488298416138,
        23.48
    ],
    [
        "0\n",
        9.95753264427185,
        23.48
    ],
    [
        "0\n",
        9.957576513290405,
        23.48
    ],
    [
        "0\n",
        9.95762038230896,
        23.48
    ],
    [
        "0\n",
        9.957667589187622,
        23.48
    ],
    [
        "0\n",
        9.957711935043335,
        23.48
    ],
    [
        "0\n",
        9.957756757736206,
        23.48
    ],
    [
        "0\n",
        9.957802057266235,
        23.48
    ],
    [
        "0\n",
        9.957846641540527,
        23.48
    ],
    [
        "0\n",
        9.957894563674927,
        23.48
    ],
    [
        "0\n",
        9.957939863204956,
        23.48
    ],
    [
        "0\n",
        9.957985877990723,
        23.48
    ],
    [
        "0\n",
        9.958030700683594,
        23.48
    ],
    [
        "0\n",
        9.958075046539307,
        23.48
    ],
    [
        "0\n",
        9.95811915397644,
        23.48
    ],
    [
        "0\n",
        9.95816421508789,
        23.48
    ],
    [
        "0\n",
        9.958209753036499,
        23.48
    ],
    [
        "0\n",
        9.95825481414795,
        23.48
    ],
    [
        "0\n",
        9.958300590515137,
        23.48
    ],
    [
        "0\n",
        9.958346366882324,
        23.48
    ],
    [
        "0\n",
        9.958391189575195,
        23.48
    ],
    [
        "0\n",
        9.958435773849487,
        23.48
    ],
    [
        "0\n",
        9.958481311798096,
        23.48
    ],
    [
        "0\n",
        9.958525896072388,
        23.48
    ],
    [
        "0\n",
        9.958574533462524,
        23.48
    ],
    [
        "0\n",
        9.958624601364136,
        23.48
    ],
    [
        "0\n",
        9.95867133140564,
        23.48
    ],
    [
        "0\n",
        9.958716869354248,
        23.48
    ],
    [
        "0\n",
        9.958762168884277,
        23.48
    ],
    [
        "0\n",
        9.958806991577148,
        23.48
    ],
    [
        "0\n",
        9.958853960037231,
        23.48
    ],
    [
        "0\n",
        9.958899021148682,
        23.48
    ],
    [
        "0\n",
        9.958943605422974,
        23.48
    ],
    [
        "0\n",
        9.958988189697266,
        23.48
    ],
    [
        "0\n",
        9.959032773971558,
        23.48
    ],
    [
        "0\n",
        9.95907711982727,
        23.48
    ],
    [
        "0\n",
        9.959121227264404,
        23.48
    ],
    [
        "0\n",
        9.959166288375854,
        23.48
    ],
    [
        "0\n",
        9.959210872650146,
        23.48
    ],
    [
        "0\n",
        9.959255456924438,
        23.48
    ],
    [
        "0\n",
        9.959299564361572,
        23.48
    ],
    [
        "0\n",
        9.959343910217285,
        23.48
    ],
    [
        "0\n",
        9.959388971328735,
        23.48
    ],
    [
        "0\n",
        9.959433555603027,
        23.48
    ],
    [
        "0\n",
        9.959478378295898,
        23.48
    ],
    [
        "0\n",
        9.959522485733032,
        23.48
    ],
    [
        "0\n",
        9.959569931030273,
        23.48
    ],
    [
        "0\n",
        9.959614276885986,
        23.48
    ],
    [
        "0\n",
        9.959658861160278,
        23.48
    ],
    [
        "0\n",
        9.959703207015991,
        23.48
    ],
    [
        "0\n",
        9.95974850654602,
        23.48
    ],
    [
        "0\n",
        9.95979619026184,
        23.48
    ],
    [
        "0\n",
        9.959841012954712,
        23.48
    ],
    [
        "0\n",
        9.959884881973267,
        23.48
    ],
    [
        "0\n",
        9.959928750991821,
        23.48
    ],
    [
        "0\n",
        9.959973096847534,
        23.48
    ],
    [
        "0\n",
        9.960017681121826,
        23.48
    ],
    [
        "0\n",
        9.960061311721802,
        23.48
    ],
    [
        "0\n",
        9.960105657577515,
        23.48
    ],
    [
        "0\n",
        9.960149765014648,
        23.48
    ],
    [
        "0\n",
        9.960193634033203,
        23.48
    ],
    [
        "0\n",
        9.960238456726074,
        23.48
    ],
    [
        "0\n",
        9.960283041000366,
        23.48
    ],
    [
        "0\n",
        9.960327386856079,
        23.48
    ],
    [
        "0\n",
        9.96037220954895,
        23.48
    ],
    [
        "0\n",
        9.960416316986084,
        23.48
    ],
    [
        "0\n",
        9.960460424423218,
        23.48
    ],
    [
        "0\n",
        9.960507154464722,
        23.48
    ],
    [
        "0\n",
        9.960551738739014,
        23.48
    ],
    [
        "0\n",
        9.960596084594727,
        23.48
    ],
    [
        "0\n",
        9.960640668869019,
        23.48
    ],
    [
        "0\n",
        9.96068525314331,
        23.48
    ],
    [
        "0\n",
        9.96073293685913,
        23.48
    ],
    [
        "0\n",
        9.96077847480774,
        23.48
    ],
    [
        "0\n",
        9.96082353591919,
        23.48
    ],
    [
        "0\n",
        9.96086859703064,
        23.48
    ],
    [
        "0\n",
        9.960912942886353,
        23.48
    ],
    [
        "0\n",
        9.960956573486328,
        23.48
    ],
    [
        "0\n",
        9.961001634597778,
        23.48
    ],
    [
        "0\n",
        9.961045980453491,
        23.48
    ],
    [
        "0\n",
        9.961090803146362,
        23.48
    ],
    [
        "0\n",
        9.961135625839233,
        23.48
    ],
    [
        "0\n",
        9.961180210113525,
        23.48
    ],
    [
        "0\n",
        9.961224555969238,
        23.48
    ],
    [
        "0\n",
        9.961268424987793,
        23.48
    ],
    [
        "0\n",
        9.961312770843506,
        23.48
    ],
    [
        "0\n",
        9.961357116699219,
        23.48
    ],
    [
        "0\n",
        9.961401462554932,
        23.48
    ],
    [
        "0\n",
        9.961448907852173,
        23.48
    ],
    [
        "0\n",
        9.961493730545044,
        23.48
    ],
    [
        "0\n",
        9.961538553237915,
        23.48
    ],
    [
        "0\n",
        9.961582660675049,
        23.48
    ],
    [
        "0\n",
        9.961627721786499,
        23.48
    ],
    [
        "0\n",
        9.961676597595215,
        23.48
    ],
    [
        "0\n",
        9.961722612380981,
        23.48
    ],
    [
        "0\n",
        9.961767673492432,
        23.48
    ],
    [
        "0\n",
        9.961812973022461,
        23.48
    ],
    [
        "0\n",
        9.961857318878174,
        23.48
    ],
    [
        "0\n",
        9.961901664733887,
        23.48
    ],
    [
        "0\n",
        9.961946249008179,
        23.48
    ],
    [
        "0\n",
        9.961990356445312,
        23.48
    ],
    [
        "0\n",
        9.962035417556763,
        23.48
    ],
    [
        "0\n",
        9.962079763412476,
        23.48
    ],
    [
        "0\n",
        9.962124109268188,
        23.48
    ],
    [
        "0\n",
        9.96216869354248,
        23.48
    ],
    [
        "3\n",
        9.962212562561035,
        23.48
    ],
    [
        "229\n",
        9.96225643157959,
        23.48
    ],
    [
        "75\n",
        9.962300539016724,
        23.48
    ],
    [
        "90\n",
        9.962344646453857,
        23.48
    ],
    [
        "215\n",
        9.962391138076782,
        23.48
    ],
    [
        "154\n",
        9.962435722351074,
        23.48
    ],
    [
        "73\n",
        9.962479829788208,
        23.48
    ],
    [
        "170\n",
        9.962525129318237,
        23.48
    ],
    [
        "198\n",
        9.962598323822021,
        23.48
    ],
    [
        "128\n",
        9.962661027908325,
        23.48
    ],
    [
        "197\n",
        9.962710857391357,
        23.48
    ],
    [
        "166\n",
        9.96275806427002,
        23.48
    ],
    [
        "27\n",
        9.962803840637207,
        23.48
    ],
    [
        "7\n",
        9.962850093841553,
        23.48
    ],
    [
        "218\n",
        9.96289610862732,
        23.48
    ],
    [
        "113\n",
        9.962941884994507,
        23.48
    ],
    [
        "53\n",
        9.962988138198853,
        23.48
    ],
    [
        "207\n",
        9.963034868240356,
        23.48
    ],
    [
        "84\n",
        9.96308183670044,
        23.48
    ],
    [
        "147\n",
        9.96312928199768,
        23.48
    ],
    [
        "7\n",
        9.963175535202026,
        23.48
    ],
    [
        "169\n",
        9.963222026824951,
        23.48
    ],
    [
        "196\n",
        9.963268280029297,
        23.48
    ],
    [
        "138\n",
        9.963314056396484,
        23.48
    ],
    [
        "208\n",
        9.963360071182251,
        23.48
    ],
    [
        "23\n",
        9.963409900665283,
        23.48
    ],
    [
        "214\n",
        9.96345567703247,
        23.48
    ],
    [
        "229\n",
        9.963501214981079,
        23.48
    ],
    [
        "18\n",
        9.963546752929688,
        23.48
    ],
    [
        "134\n",
        9.963592290878296,
        23.48
    ],
    [
        "245\n",
        9.963640689849854,
        23.48
    ],
    [
        "134\n",
        9.963687181472778,
        23.48
    ],
    [
        "186\n",
        9.963732957839966,
        23.48
    ],
    [
        "26\n",
        9.963778734207153,
        23.48
    ],
    [
        "54\n",
        9.96382451057434,
        23.48
    ],
    [
        "182\n",
        9.963869333267212,
        23.48
    ],
    [
        "97\n",
        9.963914394378662,
        23.48
    ],
    [
        "115\n",
        9.96395993232727,
        23.48
    ],
    [
        "100\n",
        9.964004755020142,
        23.48
    ],
    [
        "102\n",
        9.964050054550171,
        23.48
    ],
    [
        "103\n",
        9.964095115661621,
        23.48
    ],
    [
        "Done",
        10.191867113113403,
        23.48
    ],
    [
        "Reset time counters for profiling\n",
        10.195109367370605,
        23.48
    ],
    [
        "Verifying proof...\n",
        10.195562601089478,
        23.48
    ],
    [
        "files/verify.5c209780a5f64c7a9d7e9a22fa944e7976d2b3f9a786ee3a7a2a98280d8b331d.1.bin\n",
        10.195985317230225,
        23.48
    ],
    [
        "(enter) Parsing and Evaluating the circuit \t[             ]\t(0.0004s x1.00 from start)\n",
        10.196398973464966,
        23.48
    ],
    [
        "(leave) Parsing and Evaluating the circuit \t[6.1766s x1.00]\t(6.1770s x1.00 from start)\n",
        16.37168574333191,
        29.65
    ],
    [
        "Translating Constraints ... \n",
        16.37428307533264,
        29.65
    ],
    [
        "\tConstraint translation done\n",
        34.97371506690979,
        47.94
    ],
    [
        "\tMemory usage for constraint translation: 1889 MB\n",
        35.01187086105347,
        47.95
    ],
    [
        "Note: Protoboard Not Satisfied .. \n",
        35.06532526016235,
        48.0
    ],
    [
        "Assignment of values done .. \n",
        35.11278486251831,
        48.040000000000006
    ],
    [
        "Example created!\n",
        35.16270852088928,
        48.1
    ],
    [
        "Reading verification key (preprocessed)...\n",
        35.20839023590088,
        48.13
    ],
    [
        "Reading proof...\n",
        35.24492526054382,
        48.13
    ],
    [
        "(enter) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[             ]\t(24.8114s x0.99 from start)\n",
        35.287083864212036,
        48.17
    ],
    [
        "  (enter) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[             ]\t(24.8115s x0.99 from start)\n",
        35.32969045639038,
        48.21
    ],
    [
        "    (enter) Accumulate input                   \t[             ]\t(24.8115s x0.99 from start)\n",
        35.37259483337402,
        48.260000000000005
    ],
    [
        "    (leave) Accumulate input                   \t[0.0002s x1.00]\t(24.8117s x0.99 from start)\n",
        35.4191370010376,
        48.31
    ],
    [
        "    (enter) Check if the proof is well-formed  \t[             ]\t(24.8117s x0.99 from start)\n",
        35.466933727264404,
        48.35
    ],
    [
        "    (leave) Check if the proof is well-formed  \t[0.0000s x1.10]\t(24.8117s x0.99 from start)\n",
        35.512269496917725,
        48.400000000000006
    ],
    [
        "    (enter) Online pairing computations        \t[             ]\t(24.8117s x0.99 from start)\n",
        35.55561852455139,
        48.43000000000001
    ],
    [
        "      (enter) Check QAP divisibility             \t[             ]\t(24.8117s x0.99 from start)\n",
        35.59191918373108,
        48.44
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(24.8117s x0.99 from start)\n",
        35.6253125667572,
        48.45
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.16]\t(24.8117s x0.99 from start)\n",
        35.659292221069336,
        48.47
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G2    \t[             ]\t(24.8117s x0.99 from start)\n",
        35.697532176971436,
        48.53
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G2    \t[0.0001s x1.01]\t(24.8117s x0.99 from start)\n",
        35.73663115501404,
        48.55
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(24.8117s x0.99 from start)\n",
        35.776304960250854,
        48.59
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.12]\t(24.8117s x0.99 from start)\n",
        35.81559133529663,
        48.63
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(24.8117s x0.99 from start)\n",
        35.855355978012085,
        48.67
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.03]\t(24.8117s x0.99 from start)\n",
        35.895047426223755,
        48.71
    ],
    [
        "        (enter) Call to miller_loop<bn128_pp>      \t[             ]\t(24.8117s x0.99 from start)\n",
        35.934382915496826,
        48.74
    ],
    [
        "        (leave) Call to miller_loop<bn128_pp>      \t[0.0001s x1.00]\t(24.8119s x0.99 from start)\n",
        35.97312140464783,
        48.78
    ],
    [
        "        (enter) Call to double_miller_loop<bn128_pp>\t[             ]\t(24.8119s x0.99 from start)\n",
        36.01158666610718,
        48.82
    ],
    [
        "        (leave) Call to double_miller_loop<bn128_pp>\t[0.0002s x1.00]\t(24.8121s x0.99 from start)\n",
        36.05026888847351,
        48.86
    ],
    [
        "        (enter) Call to bn128_final_exponentiation \t[             ]\t(24.8121s x0.99 from start)\n",
        36.09049963951111,
        48.900000000000006
    ],
    [
        "        (leave) Call to bn128_final_exponentiation \t[0.0002s x1.00]\t(24.8123s x0.99 from start)\n",
        36.127785444259644,
        48.94
    ],
    [
        "      (leave) Check QAP divisibility             \t[0.0007s x1.00]\t(24.8123s x0.99 from start)\n",
        36.16483688354492,
        48.97
    ],
    [
        "    (leave) Online pairing computations        \t[0.0007s x1.00]\t(24.8123s x0.99 from start)\n",
        36.20172667503357,
        49.010000000000005
    ],
    [
        "  (leave) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[0.0009s x1.00]\t(24.8123s x0.99 from start)\n",
        36.23897671699524,
        49.05
    ],
    [
        "(leave) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[0.0009s x1.00]\t(24.8123s x0.99 from start)\n",
        36.28248119354248,
        49.09
    ],
    [
        "PASS",
        36.88079595565796,
        49.69
    ],
    [
        "Done",
        37.75836682319641,
        49.69
    ]
]