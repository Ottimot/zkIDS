[
    [
        "Verification starts now",
        2.384185791015625e-07
    ],
    [
        "Proof received",
        0.00025200843811035156
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < HTTP_Merkle_Token >\n",
        0.02544403076171875,
        0.02
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.41510486602783203,
        1.5499999999999998
    ],
    [
        "Num of variable reads = 1480\n",
        0.4213285446166992,
        1.58
    ],
    [
        "Num of conditional writes = 0\n",
        0.42647600173950195,
        1.5899999999999999
    ],
    [
        "Num of words per element = 1\n",
        0.4311213493347168,
        1.6099999999999999
    ],
    [
        "Num of variable writes = 0\n",
        0.4354219436645508,
        1.63
    ],
    [
        "num of accesses = 1480\n",
        0.43897199630737305,
        1.6400000000000001
    ],
    [
        "Packing Option = 1\n",
        0.44217634201049805,
        1.65
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.44530534744262695,
        1.6800000000000002
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.44832658767700195,
        1.69
    ],
    [
        "done with read only memory solutions!\n",
        1.0516307353973389,
        2.87
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.063220739364624,
        2.89
    ],
    [
        "Num of variable reads = 128\n",
        1.07244873046875,
        2.91
    ],
    [
        "Num of conditional writes = 0\n",
        1.0813090801239014,
        2.91
    ],
    [
        "Num of words per element = 1\n",
        1.0899791717529297,
        2.93
    ],
    [
        "Num of variable writes = 0\n",
        1.0985972881317139,
        2.94
    ],
    [
        "num of accesses = 128\n",
        1.1072604656219482,
        2.94
    ],
    [
        "Packing Option = 1\n",
        1.115570068359375,
        2.95
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.123892068862915,
        2.96
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1321971416473389,
        2.97
    ],
    [
        "Num of variable reads = 520\n",
        1.140547513961792,
        2.98
    ],
    [
        "Num of conditional writes = 0\n",
        1.1485638618469238,
        2.99
    ],
    [
        "Num of words per element = 1\n",
        1.1565392017364502,
        3.0
    ],
    [
        "Num of variable writes = 0\n",
        1.164458990097046,
        3.01
    ],
    [
        "num of accesses = 520\n",
        1.1723005771636963,
        3.01
    ],
    [
        "Packing Option = 1\n",
        1.1799986362457275,
        3.02
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.187833309173584,
        3.03
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.1960055828094482,
        3.04
    ],
    [
        "done with read only memory solutions!\n",
        1.5382366180419922,
        3.39
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5502359867095947,
        3.4
    ],
    [
        "Num of variable reads = 128\n",
        1.5598280429840088,
        3.42
    ],
    [
        "Num of conditional writes = 0\n",
        1.5670158863067627,
        3.42
    ],
    [
        "Num of words per element = 1\n",
        1.574113368988037,
        3.43
    ],
    [
        "Num of variable writes = 0\n",
        1.5813679695129395,
        3.44
    ],
    [
        "num of accesses = 128\n",
        1.5886285305023193,
        3.44
    ],
    [
        "Packing Option = 1\n",
        1.5956475734710693,
        3.45
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6032788753509521,
        3.46
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6101465225219727,
        3.47
    ],
    [
        "Num of variable reads = 71\n",
        1.6167235374450684,
        3.47
    ],
    [
        "Num of conditional writes = 0\n",
        1.6231300830841064,
        3.48
    ],
    [
        "Num of words per element = 1\n",
        1.6298086643218994,
        3.49
    ],
    [
        "Num of variable writes = 0\n",
        1.6364977359771729,
        3.49
    ],
    [
        "num of accesses = 71\n",
        1.6430366039276123,
        3.5
    ],
    [
        "Packing Option = 1\n",
        1.6532411575317383,
        3.51
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.663813829421997,
        3.52
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6744425296783447,
        3.53
    ],
    [
        "Num of variable reads = 128\n",
        1.685044288635254,
        3.54
    ],
    [
        "Num of conditional writes = 0\n",
        1.6956796646118164,
        3.55
    ],
    [
        "Num of words per element = 1\n",
        1.7063465118408203,
        3.56
    ],
    [
        "Num of variable writes = 0\n",
        1.716996431350708,
        3.58
    ],
    [
        "num of accesses = 128\n",
        1.7276103496551514,
        3.59
    ],
    [
        "Packing Option = 0\n",
        1.7382500171661377,
        3.59
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.7489676475524902,
        3.61
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7590217590332031,
        3.62
    ],
    [
        "Num of variable reads = 71\n",
        1.7688615322113037,
        3.64
    ],
    [
        "Num of conditional writes = 0\n",
        1.778257131576538,
        3.66
    ],
    [
        "Num of words per element = 1\n",
        1.787670612335205,
        3.68
    ],
    [
        "Num of variable writes = 0\n",
        1.7971386909484863,
        3.7
    ],
    [
        "num of accesses = 71\n",
        1.8080167770385742,
        3.71
    ],
    [
        "Packing Option = 1\n",
        1.819096565246582,
        3.72
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.8297371864318848,
        3.73
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8394889831542969,
        3.74
    ],
    [
        "Num of variable reads = 128\n",
        1.8490736484527588,
        3.77
    ],
    [
        "Num of conditional writes = 0\n",
        1.8595831394195557,
        3.78
    ],
    [
        "Num of words per element = 1\n",
        1.8701350688934326,
        3.79
    ],
    [
        "Num of variable writes = 0\n",
        1.8807094097137451,
        3.8
    ],
    [
        "num of accesses = 128\n",
        1.8912715911865234,
        3.81
    ],
    [
        "Packing Option = 0\n",
        1.9017162322998047,
        3.82
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.912201166152954,
        3.83
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9226453304290771,
        3.84
    ],
    [
        "Num of variable reads = 0\n",
        1.9327802658081055,
        3.86
    ],
    [
        "Num of conditional writes = 0\n",
        1.9422249794006348,
        3.87
    ],
    [
        "Num of words per element = 1\n",
        1.9515767097473145,
        3.9
    ],
    [
        "Num of variable writes = 0\n",
        1.961751937866211,
        3.91
    ],
    [
        "num of accesses = 0\n",
        1.9722628593444824,
        3.92
    ],
    [
        "Packing Option = 0\n",
        1.9817166328430176,
        3.94
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.991185188293457,
        3.96
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.00042462348938,
        3.98
    ],
    [
        "Num of variable reads = 5160\n",
        2.0093331336975098,
        3.99
    ],
    [
        "Num of conditional writes = 0\n",
        2.018101215362549,
        4.01
    ],
    [
        "Num of words per element = 1\n",
        2.0265469551086426,
        4.02
    ],
    [
        "Num of variable writes = 0\n",
        2.0355684757232666,
        4.04
    ],
    [
        "num of accesses = 5160\n",
        2.0442588329315186,
        4.0600000000000005
    ],
    [
        "Packing Option = 1\n",
        2.052651882171631,
        4.08
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.0628066062927246,
        4.09
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.073049306869507,
        4.109999999999999
    ],
    [
        "done with read only memory solutions!\n",
        2.0817909240722656,
        4.13
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.0901196002960205,
        4.15
    ],
    [
        "Num of variable reads = 5\n",
        2.098515272140503,
        4.18
    ],
    [
        "Num of conditional writes = 0\n",
        2.10681414604187,
        4.2
    ],
    [
        "Num of words per element = 1\n",
        2.116612195968628,
        4.220000000000001
    ],
    [
        "Num of variable writes = 0\n",
        2.129089593887329,
        4.27
    ],
    [
        "num of accesses = 5\n",
        2.140972375869751,
        4.3
    ],
    [
        "Packing Option = 1\n",
        2.1540920734405518,
        4.35
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.1643295288085938,
        4.4
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.1746113300323486,
        4.43
    ],
    [
        "[2nd Phase] Running Circuit Generator for < HTTP_Merkle_Token >\n",
        2.184720039367676,
        4.47
    ],
    [
        "Circuit Generation Done for < HTTP_Merkle_Token >  \n",
        4.540983438491821,
        18.189999999999998
    ],
    [
        " \t Total Number of Constraints :  1792370\n",
        4.557276487350464,
        18.259999999999998
    ],
    [
        "\n",
        4.572652578353882,
        18.31
    ],
    [
        "Instruction queue size: 5747712\n",
        4.5874927043914795,
        18.33
    ],
    [
        "Generate public inputs only\n",
        9.199881792068481,
        22.84
    ],
    [
        "Generating public parameters for: 28f68c96344bc6793f493a1e2b1ccce26d65ee0aa7db1bd5b883a5517d1fe5611\n",
        9.219204425811768,
        22.85
    ],
    [
        "../Middlebox/files/transcript_28f68c96344bc6793f493a1e2b1ccce26d65ee0aa7db1bd5b883a5517d1fe5611.txt\n",
        9.23457956314087,
        22.86
    ],
    [
        "../Middlebox/files/merkle_proof_pub.txt\n",
        9.250830888748169,
        22.87
    ],
    [
        "asdfghc\n",
        9.272101879119873,
        22.919999999999998
    ],
    [
        "97\n",
        9.293187379837036,
        22.959999999999997
    ],
    [
        "115\n",
        9.311072826385498,
        22.97
    ],
    [
        "100\n",
        9.328607320785522,
        22.99
    ],
    [
        "102\n",
        9.346095323562622,
        23.009999999999998
    ],
    [
        "103\n",
        9.362927436828613,
        23.02
    ],
    [
        "7\n",
        9.440524101257324,
        23.02
    ],
    [
        "Sample Run: 28f68c96344bc6793f493a1e2b1ccce26d65ee0aa7db1bd5b883a5517d1fe5611 finished!\n",
        9.440645217895508,
        23.02
    ],
    [
        "1\n",
        9.440698623657227,
        23.02
    ],
    [
        "1768\n",
        9.440750122070312,
        23.02
    ],
    [
        "264\n",
        9.440798997879028,
        23.02
    ],
    [
        "4\n",
        9.44085431098938,
        23.02
    ],
    [
        "7\n",
        9.44090223312378,
        23.02
    ],
    [
        "18765087434070279118326479840333070550893160322590316806400066067763149452870\n",
        9.440950870513916,
        23.02
    ],
    [
        "143\n",
        9.44099760055542,
        23.02
    ],
    [
        "183\n",
        9.441044569015503,
        23.02
    ],
    [
        "130\n",
        9.441090822219849,
        23.02
    ],
    [
        "163\n",
        9.441136360168457,
        23.02
    ],
    [
        "50\n",
        9.441181421279907,
        23.02
    ],
    [
        "193\n",
        9.441226720809937,
        23.02
    ],
    [
        "12\n",
        9.441271781921387,
        23.02
    ],
    [
        "4\n",
        9.441316604614258,
        23.02
    ],
    [
        "103\n",
        9.441361904144287,
        23.02
    ],
    [
        "98\n",
        9.441407203674316,
        23.02
    ],
    [
        "169\n",
        9.441452264785767,
        23.02
    ],
    [
        "203\n",
        9.441497564315796,
        23.02
    ],
    [
        "131\n",
        9.441543102264404,
        23.02
    ],
    [
        "125\n",
        9.441588878631592,
        23.02
    ],
    [
        "136\n",
        9.441633462905884,
        23.02
    ],
    [
        "71\n",
        9.441678524017334,
        23.02
    ],
    [
        "169\n",
        9.44172739982605,
        23.02
    ],
    [
        "152\n",
        9.441773414611816,
        23.02
    ],
    [
        "252\n",
        9.441820859909058,
        23.02
    ],
    [
        "215\n",
        9.441865682601929,
        23.02
    ],
    [
        "231\n",
        9.4419105052948,
        23.02
    ],
    [
        "171\n",
        9.441955327987671,
        23.02
    ],
    [
        "203\n",
        9.442000150680542,
        23.02
    ],
    [
        "9\n",
        9.442044496536255,
        23.02
    ],
    [
        "147\n",
        9.442088842391968,
        23.02
    ],
    [
        "179\n",
        9.442133903503418,
        23.02
    ],
    [
        "85\n",
        9.442178726196289,
        23.02
    ],
    [
        "0\n",
        9.442223072052002,
        23.02
    ],
    [
        "127\n",
        9.442268133163452,
        23.02
    ],
    [
        "41\n",
        9.442312955856323,
        23.02
    ],
    [
        "86\n",
        9.442357301712036,
        23.02
    ],
    [
        "30\n",
        9.442402124404907,
        23.02
    ],
    [
        "45\n",
        9.442447900772095,
        23.02
    ],
    [
        "91\n",
        9.442492723464966,
        23.02
    ],
    [
        "217\n",
        9.442537546157837,
        23.02
    ],
    [
        "127\n",
        9.442582607269287,
        23.02
    ],
    [
        "0\n",
        9.442627668380737,
        23.02
    ],
    [
        "0\n",
        9.442675113677979,
        23.02
    ],
    [
        "0\n",
        9.442720413208008,
        23.02
    ],
    [
        "0\n",
        9.442768335342407,
        23.02
    ],
    [
        "0\n",
        9.442813634872437,
        23.02
    ],
    [
        "0\n",
        9.442858457565308,
        23.02
    ],
    [
        "0\n",
        9.4429030418396,
        23.02
    ],
    [
        "0\n",
        9.442947149276733,
        23.02
    ],
    [
        "0\n",
        9.442990779876709,
        23.02
    ],
    [
        "0\n",
        9.443035364151001,
        23.02
    ],
    [
        "0\n",
        9.443079710006714,
        23.02
    ],
    [
        "0\n",
        9.443124532699585,
        23.02
    ],
    [
        "0\n",
        9.443169355392456,
        23.02
    ],
    [
        "0\n",
        9.44321322441101,
        23.02
    ],
    [
        "0\n",
        9.443257331848145,
        23.02
    ],
    [
        "0\n",
        9.443301439285278,
        23.02
    ],
    [
        "0\n",
        9.443345308303833,
        23.02
    ],
    [
        "0\n",
        9.443390130996704,
        23.02
    ],
    [
        "0\n",
        9.443434000015259,
        23.02
    ],
    [
        "0\n",
        9.443477630615234,
        23.02
    ],
    [
        "0\n",
        9.443521976470947,
        23.02
    ],
    [
        "0\n",
        9.44356632232666,
        23.02
    ],
    [
        "0\n",
        9.44361925125122,
        23.02
    ],
    [
        "0\n",
        9.4436674118042,
        23.02
    ],
    [
        "0\n",
        9.443715333938599,
        23.02
    ],
    [
        "0\n",
        9.443759679794312,
        23.02
    ],
    [
        "0\n",
        9.443804264068604,
        23.02
    ],
    [
        "0\n",
        9.443848848342896,
        23.02
    ],
    [
        "0\n",
        9.443893432617188,
        23.02
    ],
    [
        "0\n",
        9.44393801689148,
        23.02
    ],
    [
        "0\n",
        9.443982601165771,
        23.02
    ],
    [
        "0\n",
        9.444026947021484,
        23.02
    ],
    [
        "0\n",
        9.444071531295776,
        23.02
    ],
    [
        "0\n",
        9.444116115570068,
        23.02
    ],
    [
        "0\n",
        9.44416093826294,
        23.02
    ],
    [
        "0\n",
        9.44420599937439,
        23.02
    ],
    [
        "0\n",
        9.44425106048584,
        23.02
    ],
    [
        "0\n",
        9.444295883178711,
        23.02
    ],
    [
        "0\n",
        9.444340944290161,
        23.02
    ],
    [
        "0\n",
        9.444385051727295,
        23.02
    ],
    [
        "0\n",
        9.444429159164429,
        23.02
    ],
    [
        "0\n",
        9.444472551345825,
        23.02
    ],
    [
        "0\n",
        9.444516658782959,
        23.02
    ],
    [
        "0\n",
        9.444563627243042,
        23.02
    ],
    [
        "0\n",
        9.444608211517334,
        23.02
    ],
    [
        "0\n",
        9.444655895233154,
        23.02
    ],
    [
        "0\n",
        9.444701194763184,
        23.02
    ],
    [
        "0\n",
        9.444746255874634,
        23.02
    ],
    [
        "0\n",
        9.444791078567505,
        23.02
    ],
    [
        "0\n",
        9.444836854934692,
        23.02
    ],
    [
        "0\n",
        9.444882154464722,
        23.02
    ],
    [
        "0\n",
        9.444926738739014,
        23.02
    ],
    [
        "0\n",
        9.444971561431885,
        23.02
    ],
    [
        "0\n",
        9.445016145706177,
        23.02
    ],
    [
        "0\n",
        9.445060968399048,
        23.02
    ],
    [
        "0\n",
        9.445105075836182,
        23.02
    ],
    [
        "0\n",
        9.445149183273315,
        23.02
    ],
    [
        "0\n",
        9.44519329071045,
        23.02
    ],
    [
        "0\n",
        9.445237159729004,
        23.02
    ],
    [
        "0\n",
        9.445281267166138,
        23.02
    ],
    [
        "0\n",
        9.44532585144043,
        23.02
    ],
    [
        "0\n",
        9.445371150970459,
        23.02
    ],
    [
        "0\n",
        9.445415735244751,
        23.02
    ],
    [
        "0\n",
        9.445460319519043,
        23.02
    ],
    [
        "0\n",
        9.445508003234863,
        23.02
    ],
    [
        "0\n",
        9.445553302764893,
        23.02
    ],
    [
        "0\n",
        9.445600271224976,
        23.02
    ],
    [
        "0\n",
        9.445645332336426,
        23.02
    ],
    [
        "0\n",
        9.445690155029297,
        23.02
    ],
    [
        "0\n",
        9.44573450088501,
        23.02
    ],
    [
        "0\n",
        9.445779085159302,
        23.02
    ],
    [
        "0\n",
        9.445822954177856,
        23.02
    ],
    [
        "0\n",
        9.445867776870728,
        23.02
    ],
    [
        "0\n",
        9.44591236114502,
        23.02
    ],
    [
        "0\n",
        9.44595718383789,
        23.02
    ],
    [
        "0\n",
        9.446001052856445,
        23.02
    ],
    [
        "0\n",
        9.446045398712158,
        23.02
    ],
    [
        "0\n",
        9.446089744567871,
        23.02
    ],
    [
        "0\n",
        9.446134328842163,
        23.02
    ],
    [
        "0\n",
        9.446178436279297,
        23.02
    ],
    [
        "0\n",
        9.446223020553589,
        23.02
    ],
    [
        "0\n",
        9.446267366409302,
        23.02
    ],
    [
        "0\n",
        9.446312189102173,
        23.02
    ],
    [
        "0\n",
        9.446356534957886,
        23.02
    ],
    [
        "0\n",
        9.446399688720703,
        23.02
    ],
    [
        "0\n",
        9.44644832611084,
        23.02
    ],
    [
        "0\n",
        9.446492671966553,
        23.02
    ],
    [
        "0\n",
        9.446539878845215,
        23.02
    ],
    [
        "0\n",
        9.446584939956665,
        23.02
    ],
    [
        "0\n",
        9.446629524230957,
        23.02
    ],
    [
        "0\n",
        9.446674108505249,
        23.02
    ],
    [
        "0\n",
        9.446718215942383,
        23.02
    ],
    [
        "0\n",
        9.446762084960938,
        23.02
    ],
    [
        "0\n",
        9.44680643081665,
        23.02
    ],
    [
        "0\n",
        9.446850299835205,
        23.02
    ],
    [
        "0\n",
        9.446896076202393,
        23.02
    ],
    [
        "0\n",
        9.44694185256958,
        23.02
    ],
    [
        "0\n",
        9.44698715209961,
        23.02
    ],
    [
        "0\n",
        9.447032928466797,
        23.02
    ],
    [
        "0\n",
        9.447077989578247,
        23.02
    ],
    [
        "0\n",
        9.447123527526855,
        23.02
    ],
    [
        "0\n",
        9.447167873382568,
        23.02
    ],
    [
        "0\n",
        9.447212934494019,
        23.02
    ],
    [
        "0\n",
        9.44725751876831,
        23.02
    ],
    [
        "0\n",
        9.447301626205444,
        23.02
    ],
    [
        "0\n",
        9.447345733642578,
        23.02
    ],
    [
        "0\n",
        9.447392702102661,
        23.02
    ],
    [
        "0\n",
        9.44743824005127,
        23.02
    ],
    [
        "0\n",
        9.447486400604248,
        23.02
    ],
    [
        "0\n",
        9.447532176971436,
        23.02
    ],
    [
        "0\n",
        9.447576999664307,
        23.02
    ],
    [
        "0\n",
        9.447634935379028,
        23.02
    ],
    [
        "0\n",
        9.44768476486206,
        23.02
    ],
    [
        "0\n",
        9.447731018066406,
        23.02
    ],
    [
        "0\n",
        9.447776794433594,
        23.02
    ],
    [
        "0\n",
        9.447821855545044,
        23.02
    ],
    [
        "0\n",
        9.447867393493652,
        23.02
    ],
    [
        "0\n",
        9.44791316986084,
        23.02
    ],
    [
        "0\n",
        9.447957992553711,
        23.02
    ],
    [
        "0\n",
        9.448002815246582,
        23.02
    ],
    [
        "0\n",
        9.448047637939453,
        23.02
    ],
    [
        "0\n",
        9.448091983795166,
        23.02
    ],
    [
        "0\n",
        9.448137044906616,
        23.02
    ],
    [
        "0\n",
        9.448180198669434,
        23.02
    ],
    [
        "226\n",
        9.448224544525146,
        23.02
    ],
    [
        "162\n",
        9.448269367218018,
        23.02
    ],
    [
        "177\n",
        9.448313474655151,
        23.02
    ],
    [
        "207\n",
        9.44836163520813,
        23.02
    ],
    [
        "93\n",
        9.448407173156738,
        23.02
    ],
    [
        "221\n",
        9.44845461845398,
        23.02
    ],
    [
        "85\n",
        9.448500633239746,
        23.02
    ],
    [
        "233\n",
        9.448546648025513,
        23.02
    ],
    [
        "76\n",
        9.448590755462646,
        23.02
    ],
    [
        "108\n",
        9.448634624481201,
        23.02
    ],
    [
        "203\n",
        9.448679208755493,
        23.02
    ],
    [
        "144\n",
        9.448724031448364,
        23.02
    ],
    [
        "6\n",
        9.448769330978394,
        23.02
    ],
    [
        "55\n",
        9.448814392089844,
        23.02
    ],
    [
        "21\n",
        9.448858976364136,
        23.02
    ],
    [
        "55\n",
        9.44890284538269,
        23.02
    ],
    [
        "219\n",
        9.448947668075562,
        23.02
    ],
    [
        "54\n",
        9.448991775512695,
        23.02
    ],
    [
        "177\n",
        9.449035882949829,
        23.02
    ],
    [
        "68\n",
        9.449079751968384,
        23.02
    ],
    [
        "182\n",
        9.449124813079834,
        23.02
    ],
    [
        "205\n",
        9.449168920516968,
        23.02
    ],
    [
        "143\n",
        9.44921326637268,
        23.02
    ],
    [
        "99\n",
        9.449260950088501,
        23.02
    ],
    [
        "50\n",
        9.449308156967163,
        23.02
    ],
    [
        "52\n",
        9.449353694915771,
        23.02
    ],
    [
        "21\n",
        9.449400901794434,
        23.02
    ],
    [
        "23\n",
        9.44944453239441,
        23.02
    ],
    [
        "29\n",
        9.449488639831543,
        23.02
    ],
    [
        "218\n",
        9.449532985687256,
        23.02
    ],
    [
        "228\n",
        9.44957709312439,
        23.02
    ],
    [
        "134\n",
        9.44962477684021,
        23.02
    ],
    [
        "140\n",
        9.449669361114502,
        23.02
    ],
    [
        "115\n",
        9.449714422225952,
        23.02
    ],
    [
        "109\n",
        9.449759244918823,
        23.02
    ],
    [
        "248\n",
        9.449804067611694,
        23.02
    ],
    [
        "97\n",
        9.449848651885986,
        23.02
    ],
    [
        "115\n",
        9.449893712997437,
        23.02
    ],
    [
        "100\n",
        9.44993805885315,
        23.02
    ],
    [
        "102\n",
        9.449982404708862,
        23.02
    ],
    [
        "103\n",
        9.45002555847168,
        23.02
    ],
    [
        "Done",
        10.160407066345215,
        23.02
    ],
    [
        "Reset time counters for profiling\n",
        10.166053533554077,
        23.02
    ],
    [
        "Verifying proof...\n",
        10.166842699050903,
        23.02
    ],
    [
        "files/verify.28f68c96344bc6793f493a1e2b1ccce26d65ee0aa7db1bd5b883a5517d1fe561.1.bin\n",
        10.167543649673462,
        23.02
    ],
    [
        "(enter) Parsing and Evaluating the circuit \t[             ]\t(0.0007s x1.00 from start)\n",
        10.168281316757202,
        23.02
    ],
    [
        "(leave) Parsing and Evaluating the circuit \t[6.1130s x1.00]\t(6.1137s x1.00 from start)\n",
        16.27904772758484,
        29.119999999999997
    ],
    [
        "Translating Constraints ... \n",
        16.28096079826355,
        29.119999999999997
    ],
    [
        "\tConstraint translation done\n",
        34.86548614501953,
        47.4
    ],
    [
        "\tMemory usage for constraint translation: 1889 MB\n",
        34.90162491798401,
        47.4
    ],
    [
        "Note: Protoboard Not Satisfied .. \n",
        34.9344744682312,
        47.4
    ],
    [
        "Assignment of values done .. \n",
        34.96736454963684,
        47.4
    ],
    [
        "Example created!\n",
        35.000182151794434,
        47.4
    ],
    [
        "Reading verification key (preprocessed)...\n",
        35.03301525115967,
        47.4
    ],
    [
        "Reading proof...\n",
        35.13979649543762,
        47.4
    ],
    [
        "(enter) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[             ]\t(24.9746s x0.98 from start)\n",
        35.17718577384949,
        47.41
    ],
    [
        "  (enter) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[             ]\t(24.9746s x0.98 from start)\n",
        35.226333141326904,
        47.46
    ],
    [
        "    (enter) Accumulate input                   \t[             ]\t(24.9746s x0.98 from start)\n",
        35.267338514328,
        47.5
    ],
    [
        "    (leave) Accumulate input                   \t[0.0003s x1.00]\t(24.9750s x0.98 from start)\n",
        35.30878019332886,
        47.54
    ],
    [
        "    (enter) Check if the proof is well-formed  \t[             ]\t(24.9750s x0.98 from start)\n",
        35.34974670410156,
        47.58
    ],
    [
        "    (leave) Check if the proof is well-formed  \t[0.0000s x1.13]\t(24.9750s x0.98 from start)\n",
        35.38249230384827,
        47.58
    ],
    [
        "    (enter) Online pairing computations        \t[             ]\t(24.9750s x0.98 from start)\n",
        35.421130895614624,
        47.63
    ],
    [
        "      (enter) Check QAP divisibility             \t[             ]\t(24.9750s x0.98 from start)\n",
        35.46026086807251,
        47.67
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(24.9750s x0.98 from start)\n",
        35.49975609779358,
        47.71
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.14]\t(24.9750s x0.98 from start)\n",
        35.54309368133545,
        47.75
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G2    \t[             ]\t(24.9750s x0.98 from start)\n",
        35.58683395385742,
        47.790000000000006
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G2    \t[0.0001s x1.01]\t(24.9751s x0.98 from start)\n",
        35.629111528396606,
        47.84
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(24.9751s x0.98 from start)\n",
        35.66891932487488,
        47.88
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.11]\t(24.9751s x0.98 from start)\n",
        35.702199935913086,
        47.88
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(24.9751s x0.98 from start)\n",
        35.73369026184082,
        47.88
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.03]\t(24.9751s x0.98 from start)\n",
        35.76408004760742,
        47.88
    ],
    [
        "        (enter) Call to miller_loop<bn128_pp>      \t[             ]\t(24.9751s x0.98 from start)\n",
        35.792839765548706,
        47.88
    ],
    [
        "        (leave) Call to miller_loop<bn128_pp>      \t[0.0002s x1.00]\t(24.9753s x0.98 from start)\n",
        35.82524132728577,
        47.92
    ],
    [
        "        (enter) Call to double_miller_loop<bn128_pp>\t[             ]\t(24.9754s x0.98 from start)\n",
        35.85828900337219,
        47.95
    ],
    [
        "        (leave) Call to double_miller_loop<bn128_pp>\t[0.0004s x1.00]\t(24.9757s x0.98 from start)\n",
        35.892711877822876,
        47.980000000000004
    ],
    [
        "        (enter) Call to bn128_final_exponentiation \t[             ]\t(24.9757s x0.98 from start)\n",
        35.92809319496155,
        48.019999999999996
    ],
    [
        "        (leave) Call to bn128_final_exponentiation \t[0.0004s x1.00]\t(24.9761s x0.98 from start)\n",
        35.96388649940491,
        48.06
    ],
    [
        "      (leave) Check QAP divisibility             \t[0.0011s x1.00]\t(24.9761s x0.98 from start)\n",
        35.99969696998596,
        48.09
    ],
    [
        "    (leave) Online pairing computations        \t[0.0011s x1.00]\t(24.9761s x0.98 from start)\n",
        36.03545784950256,
        48.120000000000005
    ],
    [
        "  (leave) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[0.0015s x1.00]\t(24.9761s x0.98 from start)\n",
        36.07171010971069,
        48.16
    ],
    [
        "(leave) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[0.0015s x1.00]\t(24.9761s x0.98 from start)\n",
        36.10653257369995,
        48.2
    ],
    [
        "PASS",
        36.93387460708618,
        49.03
    ],
    [
        "Done",
        37.741332054138184,
        49.03
    ]
]