[
    [
        "Merkle Computation starts now",
        0,
        0
    ],
    [
        "Merkle Proof Computed",
        1.1920928955078125e-06,
        0
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.020184040069580078,
        0.02
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.4283449649810791,
        1.62
    ],
    [
        "Num of variable reads = 1480\n",
        0.43587422370910645,
        1.6400000000000001
    ],
    [
        "Num of conditional writes = 0\n",
        0.4424784183502197,
        1.6700000000000002
    ],
    [
        "Num of words per element = 1\n",
        0.45507073402404785,
        1.8
    ],
    [
        "Num of variable writes = 0\n",
        0.4606351852416992,
        1.81
    ],
    [
        "num of accesses = 1480\n",
        0.46466660499572754,
        1.83
    ],
    [
        "Packing Option = 1\n",
        0.468242883682251,
        1.85
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.47169971466064453,
        1.85
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.4749605655670166,
        1.86
    ],
    [
        "done with read only memory solutions!\n",
        1.0460419654846191,
        2.8400000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.0550570487976074,
        2.85
    ],
    [
        "Num of variable reads = 128\n",
        1.0621461868286133,
        2.8600000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.0691325664520264,
        2.87
    ],
    [
        "Num of words per element = 1\n",
        1.0757131576538086,
        2.87
    ],
    [
        "Num of variable writes = 0\n",
        1.082226276397705,
        2.8800000000000003
    ],
    [
        "num of accesses = 128\n",
        1.0888218879699707,
        2.89
    ],
    [
        "Packing Option = 1\n",
        1.0950860977172852,
        2.89
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.101219892501831,
        2.9
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1074373722076416,
        2.9
    ],
    [
        "Num of variable reads = 520\n",
        1.1137161254882812,
        2.91
    ],
    [
        "Num of conditional writes = 0\n",
        1.11997389793396,
        2.91
    ],
    [
        "Num of words per element = 1\n",
        1.1261746883392334,
        2.92
    ],
    [
        "Num of variable writes = 0\n",
        1.132429838180542,
        2.93
    ],
    [
        "num of accesses = 520\n",
        1.1387484073638916,
        2.93
    ],
    [
        "Packing Option = 1\n",
        1.1450130939483643,
        2.94
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1511974334716797,
        2.95
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.1572918891906738,
        2.95
    ],
    [
        "done with read only memory solutions!\n",
        1.5142974853515625,
        3.31
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5242154598236084,
        3.33
    ],
    [
        "Num of variable reads = 128\n",
        1.531334400177002,
        3.3400000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.5376355648040771,
        3.3400000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.5437588691711426,
        3.35
    ],
    [
        "Num of variable writes = 0\n",
        1.5500059127807617,
        3.3600000000000003
    ],
    [
        "num of accesses = 128\n",
        1.5566086769104004,
        3.3600000000000003
    ],
    [
        "Packing Option = 1\n",
        1.5628712177276611,
        3.37
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.5689375400543213,
        3.3800000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5751118659973145,
        3.3800000000000003
    ],
    [
        "Num of variable reads = 71\n",
        1.5815556049346924,
        3.39
    ],
    [
        "Num of conditional writes = 0\n",
        1.588411569595337,
        3.4
    ],
    [
        "Num of words per element = 1\n",
        1.5951464176177979,
        3.4
    ],
    [
        "Num of variable writes = 0\n",
        1.6016535758972168,
        3.41
    ],
    [
        "num of accesses = 71\n",
        1.6079940795898438,
        3.41
    ],
    [
        "Packing Option = 1\n",
        1.6141901016235352,
        3.42
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.6204328536987305,
        3.43
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6265344619750977,
        3.43
    ],
    [
        "Num of variable reads = 128\n",
        1.6326649188995361,
        3.44
    ],
    [
        "Num of conditional writes = 0\n",
        1.6387429237365723,
        3.45
    ],
    [
        "Num of words per element = 1\n",
        1.644834280014038,
        3.45
    ],
    [
        "Num of variable writes = 0\n",
        1.6514511108398438,
        3.46
    ],
    [
        "num of accesses = 128\n",
        1.657609224319458,
        3.47
    ],
    [
        "Packing Option = 0\n",
        1.6636013984680176,
        3.47
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6695671081542969,
        3.48
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6756134033203125,
        3.48
    ],
    [
        "Num of variable reads = 71\n",
        1.6818666458129883,
        3.49
    ],
    [
        "Num of conditional writes = 0\n",
        1.6889464855194092,
        3.5
    ],
    [
        "Num of words per element = 1\n",
        1.6957075595855713,
        3.5
    ],
    [
        "Num of variable writes = 0\n",
        1.702350378036499,
        3.5100000000000002
    ],
    [
        "num of accesses = 71\n",
        1.7089555263519287,
        3.52
    ],
    [
        "Packing Option = 1\n",
        1.715376377105713,
        3.52
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.7220771312713623,
        3.5300000000000002
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7288646697998047,
        3.54
    ],
    [
        "Num of variable reads = 128\n",
        1.735640048980713,
        3.5500000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.742300033569336,
        3.5700000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.7490594387054443,
        3.58
    ],
    [
        "Num of variable writes = 0\n",
        1.755856990814209,
        3.5900000000000003
    ],
    [
        "num of accesses = 128\n",
        1.7626290321350098,
        3.6
    ],
    [
        "Packing Option = 0\n",
        1.7695107460021973,
        3.6100000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.7766730785369873,
        3.62
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7842869758605957,
        3.6300000000000003
    ],
    [
        "Num of variable reads = 0\n",
        1.7914421558380127,
        3.64
    ],
    [
        "Num of conditional writes = 0\n",
        1.7984907627105713,
        3.66
    ],
    [
        "Num of words per element = 1\n",
        1.8053393363952637,
        3.67
    ],
    [
        "Num of variable writes = 0\n",
        1.8122148513793945,
        3.68
    ],
    [
        "num of accesses = 0\n",
        1.8189632892608643,
        3.69
    ],
    [
        "Packing Option = 0\n",
        1.8255717754364014,
        3.7
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.832042932510376,
        3.7
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8384647369384766,
        3.71
    ],
    [
        "Num of variable reads = 5160\n",
        1.8447895050048828,
        3.72
    ],
    [
        "Num of conditional writes = 0\n",
        1.8509533405303955,
        3.72
    ],
    [
        "Num of words per element = 1\n",
        1.8569207191467285,
        3.73
    ],
    [
        "Num of variable writes = 0\n",
        1.8627691268920898,
        3.73
    ],
    [
        "num of accesses = 5160\n",
        1.8687317371368408,
        3.74
    ],
    [
        "Packing Option = 1\n",
        1.875199794769287,
        3.75
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.8827917575836182,
        3.7600000000000002
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.8905208110809326,
        3.7800000000000002
    ],
    [
        "done with read only memory solutions!\n",
        1.9835469722747803,
        3.97
    ],
    [
        "Phase 1: Analysis Completed!\n",
        1.9924631118774414,
        3.99
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.0000593662261963,
        3.99
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        4.386089563369751,
        15.99
    ],
    [
        " \t Total Number of Constraints :  1783029\n",
        4.399670839309692,
        16.03
    ],
    [
        "\n",
        4.411359786987305,
        16.05
    ],
    [
        "Instruction queue size: 5721117\n",
        4.4234418869018555,
        16.099999999999998
    ],
    [
        "Normal execution\n",
        9.299813508987427,
        22.029999999999998
    ],
    [
        "Running Sample Run: run51\n",
        9.316283226013184,
        22.04
    ],
    [
        "tls_data.txt\n",
        9.330201864242554,
        22.05
    ],
    [
        "files/proof_5.txt\n",
        9.34368085861206,
        22.06
    ],
    [
        "Url assignment done\n",
        9.357048988342285,
        22.09
    ],
    [
        "Evaluating Input on the circuit \n",
        9.370970010757446,
        22.13
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        9.386325359344482,
        22.19
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        9.402271509170532,
        22.240000000000002
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        9.41769289970398,
        22.27
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        9.433786392211914,
        22.32
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        9.450154066085815,
        22.34
    ],
    [
        "\t[input] Value of Wire # 22 :: 142f2c5bdd708c2c4e921c6cbb28963944b0d8b7191020d1a46d60c03b40ce6d\n",
        9.466145515441895,
        22.36
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        9.481794357299805,
        22.38
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        9.497373819351196,
        22.39
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        9.51393461227417,
        22.41
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        9.529459953308105,
        22.43
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        9.545165538787842,
        22.45
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        9.561284303665161,
        22.46
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        9.577038764953613,
        22.48
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        9.592774868011475,
        22.5
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        9.608529567718506,
        22.52
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        9.624399423599243,
        22.53
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        9.64058232307434,
        22.55
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        9.657103776931763,
        22.59
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        9.674128532409668,
        22.64
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        9.69113540649414,
        22.67
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        9.707895517349243,
        22.71
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        9.724426031112671,
        22.75
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        9.740782022476196,
        22.77
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        9.757278680801392,
        22.78
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        9.773492813110352,
        22.8
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        9.78900957107544,
        22.82
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        9.802715063095093,
        22.830000000000002
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        9.817308902740479,
        22.86
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        9.832028865814209,
        22.9
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        9.845935821533203,
        22.93
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        9.860213041305542,
        22.959999999999997
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        9.875051259994507,
        22.99
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        9.892477750778198,
        23.06
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        9.945626735687256,
        23.56
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        9.965158700942993,
        23.63
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        9.981871128082275,
        23.669999999999998
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        10.011910915374756,
        23.87
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        10.036869525909424,
        24.029999999999998
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        10.059056520462036,
        24.15
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        10.074614763259888,
        24.16
    ],
    [
        "\t[input] Value of Wire # 329 :: 2f\n",
        10.089503765106201,
        24.18
    ],
    [
        "\t[input] Value of Wire # 338 :: d4\n",
        10.104090452194214,
        24.2
    ],
    [
        "Done",
        10.209228992462158,
        24.2
    ]
]