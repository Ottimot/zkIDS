[
    [
        "Verification starts now",
        4.76837158203125e-07
    ],
    [
        "Proof received",
        0.0006742477416992188
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < HTTP_String >\n",
        0.026495695114135742,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.23267483711242676,
        0.87
    ],
    [
        "Num of variable reads = 1480\n",
        0.23792052268981934,
        0.9
    ],
    [
        "Num of conditional writes = 0\n",
        0.2412734031677246,
        0.92
    ],
    [
        "Num of words per element = 1\n",
        0.2435016632080078,
        0.92
    ],
    [
        "Num of variable writes = 0\n",
        0.2451949119567871,
        0.93
    ],
    [
        "num of accesses = 1480\n",
        0.24647021293640137,
        0.93
    ],
    [
        "Packing Option = 1\n",
        0.24788141250610352,
        0.9400000000000001
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.24907541275024414,
        0.9500000000000001
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.25079798698425293,
        0.9500000000000001
    ],
    [
        "done with read only memory solutions!\n",
        0.833014726638794,
        2.14
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.8408937454223633,
        2.15
    ],
    [
        "Num of variable reads = 128\n",
        0.846799373626709,
        2.16
    ],
    [
        "Num of conditional writes = 0\n",
        0.8502273559570312,
        2.17
    ],
    [
        "Num of words per element = 1\n",
        0.8527944087982178,
        2.17
    ],
    [
        "Num of variable writes = 0\n",
        0.8551521301269531,
        2.17
    ],
    [
        "num of accesses = 128\n",
        0.8574919700622559,
        2.18
    ],
    [
        "Packing Option = 1\n",
        0.8595128059387207,
        2.18
    ],
    [
        "Decision: Using Network mode for this memory\n",
        0.8620216846466064,
        2.19
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.8644118309020996,
        2.19
    ],
    [
        "Num of variable reads = 520\n",
        0.8664910793304443,
        2.1999999999999997
    ],
    [
        "Num of conditional writes = 0\n",
        0.8684673309326172,
        2.1999999999999997
    ],
    [
        "Num of words per element = 1\n",
        0.8704338073730469,
        2.21
    ],
    [
        "Num of variable writes = 0\n",
        0.8724069595336914,
        2.21
    ],
    [
        "num of accesses = 520\n",
        0.8744449615478516,
        2.21
    ],
    [
        "Packing Option = 1\n",
        0.8764584064483643,
        2.21
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.8785178661346436,
        2.21
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.8805804252624512,
        2.21
    ],
    [
        "done with read only memory solutions!\n",
        1.3280491828918457,
        2.73
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.3370039463043213,
        2.7399999999999998
    ],
    [
        "Num of variable reads = 128\n",
        1.3435301780700684,
        2.75
    ],
    [
        "Num of conditional writes = 0\n",
        1.3470656871795654,
        2.75
    ],
    [
        "Num of words per element = 1\n",
        1.349973201751709,
        2.76
    ],
    [
        "Num of variable writes = 0\n",
        1.352712869644165,
        2.76
    ],
    [
        "num of accesses = 128\n",
        1.3551411628723145,
        2.76
    ],
    [
        "Packing Option = 1\n",
        1.3575878143310547,
        2.76
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.3599319458007812,
        2.76
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.3624284267425537,
        2.77
    ],
    [
        "Num of variable reads = 71\n",
        1.364889144897461,
        2.77
    ],
    [
        "Num of conditional writes = 0\n",
        1.3672435283660889,
        2.77
    ],
    [
        "Num of words per element = 1\n",
        1.3695008754730225,
        2.78
    ],
    [
        "Num of variable writes = 0\n",
        1.371704339981079,
        2.78
    ],
    [
        "num of accesses = 71\n",
        1.3739299774169922,
        2.78
    ],
    [
        "Packing Option = 1\n",
        1.376166820526123,
        2.78
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.3784151077270508,
        2.78
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.3806796073913574,
        2.78
    ],
    [
        "Num of variable reads = 128\n",
        1.3829107284545898,
        2.79
    ],
    [
        "Num of conditional writes = 0\n",
        1.3851318359375,
        2.79
    ],
    [
        "Num of words per element = 1\n",
        1.3873534202575684,
        2.79
    ],
    [
        "Num of variable writes = 0\n",
        1.3895807266235352,
        2.8
    ],
    [
        "num of accesses = 128\n",
        1.3918218612670898,
        2.8
    ],
    [
        "Packing Option = 0\n",
        1.394087791442871,
        2.8
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.3963897228240967,
        2.8
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.3988032341003418,
        2.8
    ],
    [
        "Num of variable reads = 71\n",
        1.4011099338531494,
        2.81
    ],
    [
        "Num of conditional writes = 0\n",
        1.403698444366455,
        2.81
    ],
    [
        "Num of words per element = 1\n",
        1.4064064025878906,
        2.81
    ],
    [
        "Num of variable writes = 0\n",
        1.4091370105743408,
        2.82
    ],
    [
        "num of accesses = 71\n",
        1.4115803241729736,
        2.82
    ],
    [
        "Packing Option = 1\n",
        1.4138994216918945,
        2.82
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.416212558746338,
        2.82
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4185361862182617,
        2.82
    ],
    [
        "Num of variable reads = 128\n",
        1.4208879470825195,
        2.82
    ],
    [
        "Num of conditional writes = 0\n",
        1.4233250617980957,
        2.83
    ],
    [
        "Num of words per element = 1\n",
        1.4258983135223389,
        2.83
    ],
    [
        "Num of variable writes = 0\n",
        1.4284138679504395,
        2.83
    ],
    [
        "num of accesses = 128\n",
        1.4309465885162354,
        2.84
    ],
    [
        "Packing Option = 0\n",
        1.433455467224121,
        2.84
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.435910701751709,
        2.84
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4384913444519043,
        2.84
    ],
    [
        "Num of variable reads = 0\n",
        1.4413838386535645,
        2.85
    ],
    [
        "Num of conditional writes = 0\n",
        1.4439077377319336,
        2.85
    ],
    [
        "Num of words per element = 1\n",
        1.4464011192321777,
        2.85
    ],
    [
        "Num of variable writes = 0\n",
        1.4488539695739746,
        2.85
    ],
    [
        "num of accesses = 0\n",
        1.4513194561004639,
        2.86
    ],
    [
        "Packing Option = 0\n",
        1.453782081604004,
        2.86
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.4562180042266846,
        2.86
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4586517810821533,
        2.86
    ],
    [
        "Num of variable reads = 5160\n",
        1.4611146450042725,
        2.8699999999999997
    ],
    [
        "Num of conditional writes = 0\n",
        1.4639863967895508,
        2.8699999999999997
    ],
    [
        "Num of words per element = 1\n",
        1.4670569896697998,
        2.8699999999999997
    ],
    [
        "Num of variable writes = 0\n",
        1.4700360298156738,
        2.88
    ],
    [
        "num of accesses = 5160\n",
        1.4729444980621338,
        2.88
    ],
    [
        "Packing Option = 1\n",
        1.47654390335083,
        2.88
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.4797797203063965,
        2.88
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.4827921390533447,
        2.8899999999999997
    ],
    [
        "done with read only memory solutions!\n",
        1.7953100204467773,
        3.38
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.802875280380249,
        3.3899999999999997
    ],
    [
        "Num of variable reads = 0\n",
        1.8093225955963135,
        3.3899999999999997
    ],
    [
        "Num of conditional writes = 0\n",
        1.8157131671905518,
        3.4
    ],
    [
        "Num of words per element = 1\n",
        1.821068286895752,
        3.42
    ],
    [
        "Num of variable writes = 0\n",
        1.8255550861358643,
        3.44
    ],
    [
        "num of accesses = 0\n",
        1.8300023078918457,
        3.4499999999999997
    ],
    [
        "Packing Option = 1\n",
        1.8338842391967773,
        3.46
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.837904930114746,
        3.4699999999999998
    ],
    [
        "Phase 1: Analysis Completed!\n",
        1.8420515060424805,
        3.4899999999999998
    ],
    [
        "[2nd Phase] Running Circuit Generator for < HTTP_String >\n",
        1.8465030193328857,
        3.5
    ],
    [
        "Circuit Generation Done for < HTTP_String >  \n",
        3.857321262359619,
        15.82
    ],
    [
        " \t Total Number of Constraints :  1772969\n",
        3.8755991458892822,
        15.93
    ],
    [
        "\n",
        3.8959221839904785,
        16.06
    ],
    [
        "Instruction queue size: 5433129\n",
        3.9137253761291504,
        16.18
    ],
    [
        "Generate public inputs only\n",
        8.641714572906494,
        20.79
    ],
    [
        "Generating public parameters for: 8e433ee606a7562c119063b1e76df0652fda156119a37928fd91ddbc6b9c2e3f1\n",
        8.660149812698364,
        20.8
    ],
    [
        "Url assignment done\n",
        8.681974172592163,
        20.82
    ],
    [
        "Sample Run: 8e433ee606a7562c119063b1e76df0652fda156119a37928fd91ddbc6b9c2e3f1 finished!\n",
        8.698512315750122,
        20.85
    ],
    [
        "1\n",
        8.714045524597168,
        20.88
    ],
    [
        "1768\n",
        8.730167388916016,
        20.91
    ],
    [
        "264\n",
        8.747188806533813,
        20.93
    ],
    [
        "4\n",
        8.76405668258667,
        20.95
    ],
    [
        "9\n",
        8.780917882919312,
        20.96
    ],
    [
        "250\n",
        8.797680377960205,
        20.98
    ],
    [
        "75\n",
        8.875388622283936,
        20.98
    ],
    [
        "170\n",
        8.875515699386597,
        20.98
    ],
    [
        "203\n",
        8.875571012496948,
        20.98
    ],
    [
        "200\n",
        8.875619649887085,
        20.98
    ],
    [
        "185\n",
        8.875668287277222,
        20.98
    ],
    [
        "73\n",
        8.875715970993042,
        20.98
    ],
    [
        "216\n",
        8.87576174736023,
        20.98
    ],
    [
        "87\n",
        8.875807762145996,
        20.98
    ],
    [
        "56\n",
        8.8758544921875,
        20.98
    ],
    [
        "90\n",
        8.875900030136108,
        20.98
    ],
    [
        "67\n",
        8.875946760177612,
        20.98
    ],
    [
        "75\n",
        8.876001119613647,
        20.98
    ],
    [
        "184\n",
        8.87604832649231,
        20.98
    ],
    [
        "31\n",
        8.876094341278076,
        20.98
    ],
    [
        "142\n",
        8.876142263412476,
        20.98
    ],
    [
        "104\n",
        8.876191854476929,
        20.98
    ],
    [
        "83\n",
        8.876238822937012,
        20.98
    ],
    [
        "237\n",
        8.876285314559937,
        20.98
    ],
    [
        "2\n",
        8.876331329345703,
        20.98
    ],
    [
        "66\n",
        8.876376390457153,
        20.98
    ],
    [
        "27\n",
        8.876421928405762,
        20.98
    ],
    [
        "156\n",
        8.876466989517212,
        20.98
    ],
    [
        "209\n",
        8.876511096954346,
        20.98
    ],
    [
        "18\n",
        8.876555919647217,
        20.98
    ],
    [
        "245\n",
        8.87660026550293,
        20.98
    ],
    [
        "111\n",
        8.876644134521484,
        20.98
    ],
    [
        "151\n",
        8.87668752670288,
        20.98
    ],
    [
        "226\n",
        8.876730680465698,
        20.98
    ],
    [
        "171\n",
        8.876775026321411,
        20.98
    ],
    [
        "26\n",
        8.876819372177124,
        20.98
    ],
    [
        "84\n",
        8.876863956451416,
        20.98
    ],
    [
        "163\n",
        8.87690806388855,
        20.98
    ],
    [
        "165\n",
        8.876956224441528,
        20.98
    ],
    [
        "202\n",
        8.87701678276062,
        20.98
    ],
    [
        "53\n",
        8.877061605453491,
        20.98
    ],
    [
        "0\n",
        8.877106189727783,
        20.98
    ],
    [
        "0\n",
        8.877152919769287,
        20.98
    ],
    [
        "0\n",
        8.877197504043579,
        20.98
    ],
    [
        "0\n",
        8.877241849899292,
        20.98
    ],
    [
        "0\n",
        8.877285718917847,
        20.98
    ],
    [
        "0\n",
        8.877330541610718,
        20.98
    ],
    [
        "0\n",
        8.877374649047852,
        20.98
    ],
    [
        "0\n",
        8.877418279647827,
        20.98
    ],
    [
        "0\n",
        8.877463102340698,
        20.98
    ],
    [
        "0\n",
        8.877507209777832,
        20.98
    ],
    [
        "0\n",
        8.877551794052124,
        20.98
    ],
    [
        "0\n",
        8.877597093582153,
        20.98
    ],
    [
        "0\n",
        8.877641916275024,
        20.98
    ],
    [
        "0\n",
        8.877685785293579,
        20.98
    ],
    [
        "0\n",
        8.877730369567871,
        20.98
    ],
    [
        "0\n",
        8.877781629562378,
        20.98
    ],
    [
        "0\n",
        8.877826690673828,
        20.98
    ],
    [
        "0\n",
        8.87787127494812,
        20.98
    ],
    [
        "0\n",
        8.877918481826782,
        20.98
    ],
    [
        "0\n",
        8.877964735031128,
        20.98
    ],
    [
        "0\n",
        8.878010272979736,
        20.98
    ],
    [
        "0\n",
        8.878055095672607,
        20.98
    ],
    [
        "0\n",
        8.878103256225586,
        20.98
    ],
    [
        "0\n",
        8.878148555755615,
        20.98
    ],
    [
        "0\n",
        8.878193616867065,
        20.98
    ],
    [
        "0\n",
        8.878238439559937,
        20.98
    ],
    [
        "0\n",
        8.878282070159912,
        20.98
    ],
    [
        "0\n",
        8.878325700759888,
        20.98
    ],
    [
        "0\n",
        8.878369808197021,
        20.98
    ],
    [
        "0\n",
        8.878413677215576,
        20.98
    ],
    [
        "0\n",
        8.87845754623413,
        20.98
    ],
    [
        "0\n",
        8.878501415252686,
        20.98
    ],
    [
        "0\n",
        8.87854552268982,
        20.98
    ],
    [
        "0\n",
        8.878589868545532,
        20.98
    ],
    [
        "0\n",
        8.878633499145508,
        20.98
    ],
    [
        "0\n",
        8.87867784500122,
        20.98
    ],
    [
        "0\n",
        8.878721475601196,
        20.98
    ],
    [
        "0\n",
        8.878765106201172,
        20.98
    ],
    [
        "0\n",
        8.878809213638306,
        20.98
    ],
    [
        "0\n",
        8.878856897354126,
        20.98
    ],
    [
        "0\n",
        8.878901243209839,
        20.98
    ],
    [
        "0\n",
        8.878945350646973,
        20.98
    ],
    [
        "0\n",
        8.878989934921265,
        20.98
    ],
    [
        "0\n",
        8.879036903381348,
        20.98
    ],
    [
        "0\n",
        8.879081010818481,
        20.98
    ],
    [
        "0\n",
        8.879124879837036,
        20.98
    ],
    [
        "0\n",
        8.879169702529907,
        20.98
    ],
    [
        "0\n",
        8.879218339920044,
        20.98
    ],
    [
        "0\n",
        8.879262208938599,
        20.98
    ],
    [
        "0\n",
        8.879306316375732,
        20.98
    ],
    [
        "0\n",
        8.879351377487183,
        20.98
    ],
    [
        "0\n",
        8.879395246505737,
        20.98
    ],
    [
        "0\n",
        8.879439353942871,
        20.98
    ],
    [
        "0\n",
        8.879488706588745,
        20.98
    ],
    [
        "0\n",
        8.879533767700195,
        20.98
    ],
    [
        "0\n",
        8.879577398300171,
        20.98
    ],
    [
        "0\n",
        8.879626274108887,
        20.98
    ],
    [
        "0\n",
        8.879670143127441,
        20.98
    ],
    [
        "0\n",
        8.879718542098999,
        20.98
    ],
    [
        "0\n",
        8.87976336479187,
        20.98
    ],
    [
        "0\n",
        8.879810810089111,
        20.98
    ],
    [
        "0\n",
        8.879855871200562,
        20.98
    ],
    [
        "0\n",
        8.879900217056274,
        20.98
    ],
    [
        "0\n",
        8.879944562911987,
        20.98
    ],
    [
        "0\n",
        8.879992008209229,
        20.98
    ],
    [
        "0\n",
        8.880037069320679,
        20.98
    ],
    [
        "0\n",
        8.880080938339233,
        20.98
    ],
    [
        "0\n",
        8.880124807357788,
        20.98
    ],
    [
        "0\n",
        8.88016939163208,
        20.98
    ],
    [
        "0\n",
        8.880213975906372,
        20.98
    ],
    [
        "0\n",
        8.880258321762085,
        20.98
    ],
    [
        "0\n",
        8.880302667617798,
        20.98
    ],
    [
        "0\n",
        8.880346536636353,
        20.98
    ],
    [
        "0\n",
        8.880390405654907,
        20.98
    ],
    [
        "0\n",
        8.880434274673462,
        20.98
    ],
    [
        "0\n",
        8.880478620529175,
        20.98
    ],
    [
        "0\n",
        8.88052248954773,
        20.98
    ],
    [
        "0\n",
        8.880566596984863,
        20.98
    ],
    [
        "0\n",
        8.880611181259155,
        20.98
    ],
    [
        "0\n",
        8.88065481185913,
        20.98
    ],
    [
        "0\n",
        8.880698919296265,
        20.98
    ],
    [
        "0\n",
        8.880745887756348,
        20.98
    ],
    [
        "0\n",
        8.88079047203064,
        20.98
    ],
    [
        "0\n",
        8.880834102630615,
        20.98
    ],
    [
        "0\n",
        8.880878686904907,
        20.98
    ],
    [
        "0\n",
        8.880926847457886,
        20.98
    ],
    [
        "0\n",
        8.880982875823975,
        20.98
    ],
    [
        "0\n",
        8.881032705307007,
        20.98
    ],
    [
        "0\n",
        8.881078243255615,
        20.98
    ],
    [
        "0\n",
        8.88112211227417,
        20.98
    ],
    [
        "0\n",
        8.8811674118042,
        20.98
    ],
    [
        "0\n",
        8.881211996078491,
        20.98
    ],
    [
        "0\n",
        8.881256103515625,
        20.98
    ],
    [
        "0\n",
        8.8812997341156,
        20.98
    ],
    [
        "0\n",
        8.881343841552734,
        20.98
    ],
    [
        "0\n",
        8.881387948989868,
        20.98
    ],
    [
        "0\n",
        8.881431579589844,
        20.98
    ],
    [
        "0\n",
        8.881475687026978,
        20.98
    ],
    [
        "0\n",
        8.88152027130127,
        20.98
    ],
    [
        "0\n",
        8.881564617156982,
        20.98
    ],
    [
        "0\n",
        8.881608486175537,
        20.98
    ],
    [
        "0\n",
        8.881656885147095,
        20.98
    ],
    [
        "0\n",
        8.881704568862915,
        20.98
    ],
    [
        "0\n",
        8.881750106811523,
        20.98
    ],
    [
        "0\n",
        8.881795167922974,
        20.98
    ],
    [
        "0\n",
        8.881840229034424,
        20.98
    ],
    [
        "0\n",
        8.881887912750244,
        20.98
    ],
    [
        "0\n",
        8.881932973861694,
        20.98
    ],
    [
        "0\n",
        8.881976842880249,
        20.98
    ],
    [
        "0\n",
        8.882022142410278,
        20.98
    ],
    [
        "0\n",
        8.88206672668457,
        20.98
    ],
    [
        "0\n",
        8.88211178779602,
        20.98
    ],
    [
        "0\n",
        8.88215684890747,
        20.98
    ],
    [
        "0\n",
        8.882201671600342,
        20.98
    ],
    [
        "0\n",
        8.882246255874634,
        20.98
    ],
    [
        "0\n",
        8.88229751586914,
        20.98
    ],
    [
        "0\n",
        8.882373809814453,
        20.98
    ],
    [
        "0\n",
        8.882442235946655,
        20.98
    ],
    [
        "0\n",
        8.882510423660278,
        20.98
    ],
    [
        "0\n",
        8.882577657699585,
        20.98
    ],
    [
        "0\n",
        8.88264536857605,
        20.98
    ],
    [
        "0\n",
        8.882719278335571,
        20.98
    ],
    [
        "0\n",
        8.88276743888855,
        20.98
    ],
    [
        "0\n",
        8.882817506790161,
        20.98
    ],
    [
        "103\n",
        8.882866621017456,
        20.98
    ],
    [
        "20\n",
        8.882911443710327,
        20.98
    ],
    [
        "149\n",
        8.88295578956604,
        20.98
    ],
    [
        "207\n",
        8.88300371170044,
        20.98
    ],
    [
        "115\n",
        8.883050203323364,
        20.98
    ],
    [
        "57\n",
        8.883095264434814,
        20.98
    ],
    [
        "199\n",
        8.88313913345337,
        20.98
    ],
    [
        "210\n",
        8.883183002471924,
        20.98
    ],
    [
        "198\n",
        8.8832266330719,
        20.98
    ],
    [
        "113\n",
        8.883270978927612,
        20.98
    ],
    [
        "14\n",
        8.883316278457642,
        20.98
    ],
    [
        "183\n",
        8.883360624313354,
        20.98
    ],
    [
        "11\n",
        8.88340449333191,
        20.98
    ],
    [
        "57\n",
        8.883447885513306,
        20.98
    ],
    [
        "9\n",
        8.883491516113281,
        20.98
    ],
    [
        "224\n",
        8.883534908294678,
        20.98
    ],
    [
        "99\n",
        8.883578777313232,
        20.98
    ],
    [
        "169\n",
        8.883623838424683,
        20.98
    ],
    [
        "225\n",
        8.883667469024658,
        20.98
    ],
    [
        "105\n",
        8.883711576461792,
        20.98
    ],
    [
        "85\n",
        8.883763551712036,
        20.98
    ],
    [
        "249\n",
        8.883808135986328,
        20.98
    ],
    [
        "109\n",
        8.8838529586792,
        20.98
    ],
    [
        "84\n",
        8.883898973464966,
        20.98
    ],
    [
        "131\n",
        8.883946180343628,
        20.98
    ],
    [
        "99\n",
        8.883991003036499,
        20.98
    ],
    [
        "57\n",
        8.884035348892212,
        20.98
    ],
    [
        "32\n",
        8.884079456329346,
        20.98
    ],
    [
        "218\n",
        8.88412356376648,
        20.98
    ],
    [
        "2\n",
        8.88416862487793,
        20.98
    ],
    [
        "83\n",
        8.884215354919434,
        20.98
    ],
    [
        "144\n",
        8.884260416030884,
        20.98
    ],
    [
        "23\n",
        8.884304523468018,
        20.98
    ],
    [
        "136\n",
        8.884348154067993,
        20.98
    ],
    [
        "211\n",
        8.884392261505127,
        20.98
    ],
    [
        "117\n",
        8.884435653686523,
        20.98
    ],
    [
        "47\n",
        8.884480953216553,
        20.98
    ],
    [
        "102\n",
        8.884524583816528,
        20.98
    ],
    [
        "117\n",
        8.884568214416504,
        20.98
    ],
    [
        "110\n",
        8.88461184501648,
        20.98
    ],
    [
        "99\n",
        8.884655952453613,
        20.98
    ],
    [
        "116\n",
        8.884702682495117,
        20.98
    ],
    [
        "105\n",
        8.884748220443726,
        20.98
    ],
    [
        "111\n",
        8.88479232788086,
        20.98
    ],
    [
        "110\n",
        8.88483715057373,
        20.98
    ],
    [
        "13\n",
        8.884884119033813,
        20.98
    ],
    [
        "10\n",
        8.884928464889526,
        20.98
    ],
    [
        "0\n",
        8.884979009628296,
        20.98
    ],
    [
        "0\n",
        8.885025978088379,
        20.98
    ],
    [
        "0\n",
        8.885072231292725,
        20.98
    ],
    [
        "0\n",
        8.885117053985596,
        20.98
    ],
    [
        "0\n",
        8.88516116142273,
        20.98
    ],
    [
        "0\n",
        8.885206937789917,
        20.98
    ],
    [
        "0\n",
        8.885250568389893,
        20.98
    ],
    [
        "0\n",
        8.885294437408447,
        20.98
    ],
    [
        "0\n",
        8.885339975357056,
        20.98
    ],
    [
        "Done",
        9.131341934204102,
        20.98
    ],
    [
        "Reset time counters for profiling\n",
        9.137124300003052,
        20.98
    ],
    [
        "Verifying proof...\n",
        9.13796329498291,
        20.98
    ],
    [
        "files/verify.8e433ee606a7562c119063b1e76df0652fda156119a37928fd91ddbc6b9c2e3f.1.bin\n",
        9.138699531555176,
        20.98
    ],
    [
        "(enter) Parsing and Evaluating the circuit \t[             ]\t(0.0007s x1.00 from start)\n",
        9.139440536499023,
        20.98
    ],
    [
        "(leave) Parsing and Evaluating the circuit \t[5.8002s x1.00]\t(5.8010s x1.00 from start)\n",
        14.937365770339966,
        26.77
    ],
    [
        "Translating Constraints ... \n",
        14.941239833831787,
        26.78
    ],
    [
        "\tConstraint translation done\n",
        31.592278718948364,
        43.129999999999995
    ],
    [
        "\tMemory usage for constraint translation: 1745 MB\n",
        31.632513761520386,
        43.129999999999995
    ],
    [
        "Note: Protoboard Not Satisfied .. \n",
        31.67129635810852,
        43.239999999999995
    ],
    [
        "Assignment of values done .. \n",
        31.708205223083496,
        43.3
    ],
    [
        "Example created!\n",
        31.76101565361023,
        43.349999999999994
    ],
    [
        "Reading verification key (preprocessed)...\n",
        31.804388999938965,
        43.39
    ],
    [
        "Reading proof...\n",
        31.85020899772644,
        43.44
    ],
    [
        "(enter) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[             ]\t(22.4912s x0.98 from start)\n",
        31.892778158187866,
        43.480000000000004
    ],
    [
        "  (enter) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[             ]\t(22.4912s x0.98 from start)\n",
        31.93458390235901,
        43.519999999999996
    ],
    [
        "    (enter) Accumulate input                   \t[             ]\t(22.4912s x0.98 from start)\n",
        31.977433443069458,
        43.56
    ],
    [
        "    (leave) Accumulate input                   \t[0.0434s x2.54]\t(22.5347s x0.99 from start)\n",
        32.02154874801636,
        43.61
    ],
    [
        "    (enter) Check if the proof is well-formed  \t[             ]\t(22.5347s x0.99 from start)\n",
        32.068864583969116,
        43.65
    ],
    [
        "    (leave) Check if the proof is well-formed  \t[0.0000s x1.01]\t(22.5347s x0.99 from start)\n",
        32.11241269111633,
        43.7
    ],
    [
        "    (enter) Online pairing computations        \t[             ]\t(22.5347s x0.99 from start)\n",
        32.15266823768616,
        43.739999999999995
    ],
    [
        "      (enter) Check QAP divisibility             \t[             ]\t(22.5347s x0.99 from start)\n",
        32.188228368759155,
        43.760000000000005
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(22.5347s x0.99 from start)\n",
        32.221463441848755,
        43.760000000000005
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.10]\t(22.5347s x0.99 from start)\n",
        32.25265049934387,
        43.760000000000005
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G2    \t[             ]\t(22.5347s x0.99 from start)\n",
        32.287306785583496,
        43.8
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G2    \t[0.0001s x1.01]\t(22.5348s x0.99 from start)\n",
        32.32332444190979,
        43.83
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(22.5348s x0.99 from start)\n",
        32.35853338241577,
        43.870000000000005
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.09]\t(22.5348s x0.99 from start)\n",
        32.393935680389404,
        43.91
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(22.5348s x0.99 from start)\n",
        32.433268547058105,
        43.95
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.03]\t(22.5348s x0.99 from start)\n",
        32.47248911857605,
        43.980000000000004
    ],
    [
        "        (enter) Call to miller_loop<bn128_pp>      \t[             ]\t(22.5348s x0.99 from start)\n",
        32.512144565582275,
        44.019999999999996
    ],
    [
        "        (leave) Call to miller_loop<bn128_pp>      \t[0.0001s x1.00]\t(22.5350s x0.99 from start)\n",
        32.550877809524536,
        44.06
    ],
    [
        "        (enter) Call to double_miller_loop<bn128_pp>\t[             ]\t(22.5350s x0.99 from start)\n",
        32.59130525588989,
        44.11
    ],
    [
        "        (leave) Call to double_miller_loop<bn128_pp>\t[0.0002s x1.00]\t(22.5352s x0.99 from start)\n",
        32.6287739276886,
        44.14
    ],
    [
        "        (enter) Call to bn128_final_exponentiation \t[             ]\t(22.5352s x0.99 from start)\n",
        32.666889905929565,
        44.18
    ],
    [
        "        (leave) Call to bn128_final_exponentiation \t[0.0002s x1.00]\t(22.5354s x0.99 from start)\n",
        32.70443677902222,
        44.21
    ],
    [
        "      (leave) Check QAP divisibility             \t[0.0007s x1.00]\t(22.5354s x0.99 from start)\n",
        32.74161148071289,
        44.25
    ],
    [
        "    (leave) Online pairing computations        \t[0.0007s x1.00]\t(22.5354s x0.99 from start)\n",
        32.778979539871216,
        44.29
    ],
    [
        "  (leave) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[0.0442s x2.51]\t(22.5354s x0.99 from start)\n",
        32.81729578971863,
        44.33
    ],
    [
        "(leave) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[0.0442s x2.51]\t(22.5354s x0.99 from start)\n",
        32.85472011566162,
        44.370000000000005
    ],
    [
        "PASS",
        33.38346481323242,
        44.89
    ],
    [
        "Done",
        33.598473072052,
        44.89
    ]
]