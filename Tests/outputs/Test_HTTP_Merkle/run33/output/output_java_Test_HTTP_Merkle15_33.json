[
    [
        "Merkle Computation starts now",
        0,
        0
    ],
    [
        "Merkle Proof Computed",
        3.814697265625e-06,
        0
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.02202296257019043,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.4327585697174072,
        1.7400000000000002
    ],
    [
        "Num of variable reads = 1480\n",
        0.440030574798584,
        1.7599999999999998
    ],
    [
        "Num of conditional writes = 0\n",
        0.44671130180358887,
        1.7799999999999998
    ],
    [
        "Num of words per element = 1\n",
        0.4511129856109619,
        1.81
    ],
    [
        "Num of variable writes = 0\n",
        0.45595765113830566,
        1.83
    ],
    [
        "num of accesses = 1480\n",
        0.4599320888519287,
        1.85
    ],
    [
        "Packing Option = 1\n",
        0.4636702537536621,
        1.8599999999999999
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.46692323684692383,
        1.88
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.47060227394104004,
        1.88
    ],
    [
        "done with read only memory solutions!\n",
        1.0725665092468262,
        2.93
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.08197021484375,
        2.95
    ],
    [
        "Num of variable reads = 128\n",
        1.0896987915039062,
        2.96
    ],
    [
        "Num of conditional writes = 0\n",
        1.0962932109832764,
        2.97
    ],
    [
        "Num of words per element = 1\n",
        1.101658821105957,
        2.98
    ],
    [
        "Num of variable writes = 0\n",
        1.107818841934204,
        2.99
    ],
    [
        "num of accesses = 128\n",
        1.1138315200805664,
        2.99
    ],
    [
        "Packing Option = 1\n",
        1.1190850734710693,
        3.0
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.1238858699798584,
        3.0100000000000002
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.128584623336792,
        3.0100000000000002
    ],
    [
        "Num of variable reads = 520\n",
        1.133162498474121,
        3.0100000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        1.1379401683807373,
        3.02
    ],
    [
        "Num of words per element = 1\n",
        1.1431193351745605,
        3.0300000000000002
    ],
    [
        "Num of variable writes = 0\n",
        1.1477839946746826,
        3.0300000000000002
    ],
    [
        "num of accesses = 520\n",
        1.1547956466674805,
        3.04
    ],
    [
        "Packing Option = 1\n",
        1.1611919403076172,
        3.0500000000000003
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1670634746551514,
        3.06
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.1726951599121094,
        3.06
    ],
    [
        "done with read only memory solutions!\n",
        1.577909231185913,
        3.5100000000000002
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5879106521606445,
        3.52
    ],
    [
        "Num of variable reads = 128\n",
        1.5951876640319824,
        3.5300000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        1.6009066104888916,
        3.5300000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.6059298515319824,
        3.54
    ],
    [
        "Num of variable writes = 0\n",
        1.6108357906341553,
        3.54
    ],
    [
        "num of accesses = 128\n",
        1.6156303882598877,
        3.5500000000000003
    ],
    [
        "Packing Option = 1\n",
        1.6208410263061523,
        3.5500000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6258134841918945,
        3.56
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.630603551864624,
        3.56
    ],
    [
        "Num of variable reads = 71\n",
        1.635321855545044,
        3.5700000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.6399919986724854,
        3.5700000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.6446435451507568,
        3.58
    ],
    [
        "Num of variable writes = 0\n",
        1.6503565311431885,
        3.5900000000000003
    ],
    [
        "num of accesses = 71\n",
        1.6579995155334473,
        3.6
    ],
    [
        "Packing Option = 1\n",
        1.6631596088409424,
        3.6100000000000003
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.668184757232666,
        3.6100000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.67307710647583,
        3.62
    ],
    [
        "Num of variable reads = 128\n",
        1.6782920360565186,
        3.62
    ],
    [
        "Num of conditional writes = 0\n",
        1.6839499473571777,
        3.6300000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.6893320083618164,
        3.6300000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.6948590278625488,
        3.64
    ],
    [
        "num of accesses = 128\n",
        1.6998403072357178,
        3.64
    ],
    [
        "Packing Option = 0\n",
        1.7046799659729004,
        3.6500000000000004
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.7095160484313965,
        3.6500000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7143094539642334,
        3.66
    ],
    [
        "Num of variable reads = 71\n",
        1.7190628051757812,
        3.66
    ],
    [
        "Num of conditional writes = 0\n",
        1.7238402366638184,
        3.6700000000000004
    ],
    [
        "Num of words per element = 1\n",
        1.7286114692687988,
        3.6700000000000004
    ],
    [
        "Num of variable writes = 0\n",
        1.7333440780639648,
        3.68
    ],
    [
        "num of accesses = 71\n",
        1.7381165027618408,
        3.68
    ],
    [
        "Packing Option = 1\n",
        1.7428507804870605,
        3.68
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.7478208541870117,
        3.6900000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7526929378509521,
        3.7
    ],
    [
        "Num of variable reads = 128\n",
        1.757483959197998,
        3.7
    ],
    [
        "Num of conditional writes = 0\n",
        1.7621982097625732,
        3.7
    ],
    [
        "Num of words per element = 1\n",
        1.7670769691467285,
        3.71
    ],
    [
        "Num of variable writes = 0\n",
        1.775289535522461,
        3.73
    ],
    [
        "num of accesses = 128\n",
        1.782576560974121,
        3.73
    ],
    [
        "Packing Option = 0\n",
        1.789177417755127,
        3.74
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.7953391075134277,
        3.75
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8014285564422607,
        3.75
    ],
    [
        "Num of variable reads = 0\n",
        1.8074417114257812,
        3.77
    ],
    [
        "Num of conditional writes = 0\n",
        1.8131742477416992,
        3.7800000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.819453239440918,
        3.79
    ],
    [
        "Num of variable writes = 0\n",
        1.8257782459259033,
        3.8000000000000003
    ],
    [
        "num of accesses = 0\n",
        1.8330409526824951,
        3.8200000000000003
    ],
    [
        "Packing Option = 0\n",
        1.839989423751831,
        3.83
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.846524715423584,
        3.8400000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8527634143829346,
        3.85
    ],
    [
        "Num of variable reads = 5160\n",
        1.8587119579315186,
        3.85
    ],
    [
        "Num of conditional writes = 0\n",
        1.8643922805786133,
        3.8600000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.8698692321777344,
        3.8600000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.8752119541168213,
        3.87
    ],
    [
        "num of accesses = 5160\n",
        1.8813514709472656,
        3.8800000000000003
    ],
    [
        "Packing Option = 1\n",
        1.8884990215301514,
        3.89
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.8952572345733643,
        3.91
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.9015955924987793,
        3.9200000000000004
    ],
    [
        "done with read only memory solutions!\n",
        2.087520122528076,
        4.22
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.099031448364258,
        4.25
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.106107473373413,
        4.25
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        4.569953203201294,
        17.06
    ],
    [
        " \t Total Number of Constraints :  1785449\n",
        4.591354608535767,
        17.16
    ],
    [
        "\n",
        4.607725381851196,
        17.21
    ],
    [
        "Instruction queue size: 5735267\n",
        4.6593849658966064,
        17.73
    ],
    [
        "Normal execution\n",
        9.48405122756958,
        21.84
    ],
    [
        "Running Sample Run: run151\n",
        9.501100063323975,
        21.84
    ],
    [
        "tls_data.txt\n",
        9.514724731445312,
        21.85
    ],
    [
        "files/proof_15.txt\n",
        9.5295889377594,
        21.86
    ],
    [
        "Url assignment done\n",
        9.54353666305542,
        21.89
    ],
    [
        "Evaluating Input on the circuit \n",
        9.557526111602783,
        21.95
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        9.572527170181274,
        22.01
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        9.588442087173462,
        22.04
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        9.603739738464355,
        22.08
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        9.619577407836914,
        22.12
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        9.636110782623291,
        22.14
    ],
    [
        "\t[input] Value of Wire # 22 :: 14aac95f01e2f299378070048c48c63a71421e3386fd931b3241805dc9cf7200\n",
        9.652137041091919,
        22.15
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        9.66832184791565,
        22.18
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        9.683839082717896,
        22.2
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        9.699779510498047,
        22.21
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        9.715739011764526,
        22.23
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        9.731896162033081,
        22.25
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        9.747441291809082,
        22.26
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        9.762962102890015,
        22.28
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        9.778220176696777,
        22.29
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        9.794069766998291,
        22.31
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        9.810582399368286,
        22.33
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        9.826108932495117,
        22.35
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        9.842219591140747,
        22.37
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        9.857962608337402,
        22.419999999999998
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        9.875133275985718,
        22.48
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        9.89196491241455,
        22.51
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        9.909061670303345,
        22.55
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        9.92535138130188,
        22.57
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        9.942322969436646,
        22.59
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        9.958174228668213,
        22.6
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        9.975029945373535,
        22.63
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        9.98939299583435,
        22.64
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        10.003812551498413,
        22.669999999999998
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        10.018337488174438,
        22.71
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        10.03175950050354,
        22.73
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        10.045939922332764,
        22.76
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        10.060367107391357,
        22.78
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        10.074955224990845,
        22.82
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        10.089959144592285,
        22.84
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        10.105007886886597,
        22.86
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        10.119855403900146,
        22.87
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        10.135428667068481,
        22.89
    ],
    [
        "Done",
        10.22991681098938,
        22.9
    ]
]