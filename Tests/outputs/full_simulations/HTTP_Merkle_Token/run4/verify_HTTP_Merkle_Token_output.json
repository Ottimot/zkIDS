[
    [
        "Verification starts now",
        2.384185791015625e-07
    ],
    [
        "Proof received",
        0.0002541542053222656
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < HTTP_Merkle_Token >\n",
        0.024011850357055664,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.42435288429260254,
        1.6500000000000001
    ],
    [
        "Num of variable reads = 1480\n",
        0.4307270050048828,
        1.6600000000000001
    ],
    [
        "Num of conditional writes = 0\n",
        0.4362039566040039,
        1.7000000000000002
    ],
    [
        "Num of words per element = 1\n",
        0.4411356449127197,
        1.7100000000000002
    ],
    [
        "Num of variable writes = 0\n",
        0.4460923671722412,
        1.73
    ],
    [
        "num of accesses = 1480\n",
        0.45076847076416016,
        1.75
    ],
    [
        "Packing Option = 1\n",
        0.45545029640197754,
        1.76
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.46022582054138184,
        1.8
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.47251367568969727,
        1.9300000000000002
    ],
    [
        "done with read only memory solutions!\n",
        1.0570285320281982,
        2.94
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.067434549331665,
        2.9499999999999997
    ],
    [
        "Num of variable reads = 128\n",
        1.0775961875915527,
        2.96
    ],
    [
        "Num of conditional writes = 0\n",
        1.087346076965332,
        2.9699999999999998
    ],
    [
        "Num of words per element = 1\n",
        1.0961525440216064,
        2.98
    ],
    [
        "Num of variable writes = 0\n",
        1.1024401187896729,
        2.9899999999999998
    ],
    [
        "num of accesses = 128\n",
        1.1088957786560059,
        3.0
    ],
    [
        "Packing Option = 1\n",
        1.1152126789093018,
        3.01
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.1214330196380615,
        3.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1274669170379639,
        3.02
    ],
    [
        "Num of variable reads = 520\n",
        1.1335728168487549,
        3.03
    ],
    [
        "Num of conditional writes = 0\n",
        1.139794111251831,
        3.03
    ],
    [
        "Num of words per element = 1\n",
        1.1459105014801025,
        3.04
    ],
    [
        "Num of variable writes = 0\n",
        1.152038812637329,
        3.05
    ],
    [
        "num of accesses = 520\n",
        1.1581394672393799,
        3.05
    ],
    [
        "Packing Option = 1\n",
        1.1640403270721436,
        3.06
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1698510646820068,
        3.06
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.1757514476776123,
        3.07
    ],
    [
        "done with read only memory solutions!\n",
        1.5555624961853027,
        3.46
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5645639896392822,
        3.4699999999999998
    ],
    [
        "Num of variable reads = 128\n",
        1.5718698501586914,
        3.48
    ],
    [
        "Num of conditional writes = 0\n",
        1.5787959098815918,
        3.4899999999999998
    ],
    [
        "Num of words per element = 1\n",
        1.5855112075805664,
        3.4899999999999998
    ],
    [
        "Num of variable writes = 0\n",
        1.5922033786773682,
        3.5
    ],
    [
        "num of accesses = 128\n",
        1.59837007522583,
        3.51
    ],
    [
        "Packing Option = 1\n",
        1.6042616367340088,
        3.51
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6100938320159912,
        3.52
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6163408756256104,
        3.53
    ],
    [
        "Num of variable reads = 71\n",
        1.6226716041564941,
        3.54
    ],
    [
        "Num of conditional writes = 0\n",
        1.628361463546753,
        3.54
    ],
    [
        "Num of words per element = 1\n",
        1.6338508129119873,
        3.54
    ],
    [
        "Num of variable writes = 0\n",
        1.6393592357635498,
        3.55
    ],
    [
        "num of accesses = 71\n",
        1.6448352336883545,
        3.56
    ],
    [
        "Packing Option = 1\n",
        1.6502487659454346,
        3.56
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.6557493209838867,
        3.57
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.661255121231079,
        3.57
    ],
    [
        "Num of variable reads = 128\n",
        1.6667671203613281,
        3.58
    ],
    [
        "Num of conditional writes = 0\n",
        1.6724333763122559,
        3.58
    ],
    [
        "Num of words per element = 1\n",
        1.6779634952545166,
        3.59
    ],
    [
        "Num of variable writes = 0\n",
        1.683394432067871,
        3.59
    ],
    [
        "num of accesses = 128\n",
        1.6888439655303955,
        3.6
    ],
    [
        "Packing Option = 0\n",
        1.6942589282989502,
        3.6
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6996715068817139,
        3.61
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7050864696502686,
        3.62
    ],
    [
        "Num of variable reads = 71\n",
        1.7105107307434082,
        3.62
    ],
    [
        "Num of conditional writes = 0\n",
        1.7160186767578125,
        3.63
    ],
    [
        "Num of words per element = 1\n",
        1.7215445041656494,
        3.63
    ],
    [
        "Num of variable writes = 0\n",
        1.7275059223175049,
        3.64
    ],
    [
        "num of accesses = 71\n",
        1.733654260635376,
        3.65
    ],
    [
        "Packing Option = 1\n",
        1.7393910884857178,
        3.65
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.7450902462005615,
        3.66
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7506661415100098,
        3.66
    ],
    [
        "Num of variable reads = 128\n",
        1.7562434673309326,
        3.67
    ],
    [
        "Num of conditional writes = 0\n",
        1.7617437839508057,
        3.67
    ],
    [
        "Num of words per element = 1\n",
        1.7671632766723633,
        3.68
    ],
    [
        "Num of variable writes = 0\n",
        1.772956132888794,
        3.69
    ],
    [
        "num of accesses = 128\n",
        1.7793574333190918,
        3.69
    ],
    [
        "Packing Option = 0\n",
        1.786362886428833,
        3.71
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.7933714389801025,
        3.73
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8006858825683594,
        3.7399999999999998
    ],
    [
        "Num of variable reads = 0\n",
        1.8075566291809082,
        3.75
    ],
    [
        "Num of conditional writes = 0\n",
        1.8142566680908203,
        3.76
    ],
    [
        "Num of words per element = 1\n",
        1.820652961730957,
        3.77
    ],
    [
        "Num of variable writes = 0\n",
        1.8268465995788574,
        3.77
    ],
    [
        "num of accesses = 0\n",
        1.832930088043213,
        3.78
    ],
    [
        "Packing Option = 0\n",
        1.8392987251281738,
        3.79
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.8457412719726562,
        3.81
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.852262258529663,
        3.82
    ],
    [
        "Num of variable reads = 5160\n",
        1.8584985733032227,
        3.82
    ],
    [
        "Num of conditional writes = 0\n",
        1.864424228668213,
        3.83
    ],
    [
        "Num of words per element = 1\n",
        1.8702003955841064,
        3.83
    ],
    [
        "Num of variable writes = 0\n",
        1.8759112358093262,
        3.84
    ],
    [
        "num of accesses = 5160\n",
        1.8815462589263916,
        3.84
    ],
    [
        "Packing Option = 1\n",
        1.8870913982391357,
        3.85
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.892655849456787,
        3.86
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.8982024192810059,
        3.86
    ],
    [
        "done with read only memory solutions!\n",
        2.0385327339172363,
        4.1000000000000005
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.046539306640625,
        4.12
    ],
    [
        "Num of variable reads = 5\n",
        2.054483652114868,
        4.12
    ],
    [
        "Num of conditional writes = 0\n",
        2.0614144802093506,
        4.140000000000001
    ],
    [
        "Num of words per element = 1\n",
        2.0684380531311035,
        4.180000000000001
    ],
    [
        "Num of variable writes = 0\n",
        2.0761585235595703,
        4.2
    ],
    [
        "num of accesses = 5\n",
        2.083388328552246,
        4.220000000000001
    ],
    [
        "Packing Option = 1\n",
        2.0906288623809814,
        4.25
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.0979702472686768,
        4.2700000000000005
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.1055283546447754,
        4.300000000000001
    ],
    [
        "[2nd Phase] Running Circuit Generator for < HTTP_Merkle_Token >\n",
        2.1132619380950928,
        4.33
    ],
    [
        "Circuit Generation Done for < HTTP_Merkle_Token >  \n",
        4.451206684112549,
        15.73
    ],
    [
        " \t Total Number of Constraints :  1792370\n",
        4.463758230209351,
        15.79
    ],
    [
        "\n",
        4.475544452667236,
        15.799999999999999
    ],
    [
        "Instruction queue size: 5747712\n",
        4.4871275424957275,
        15.82
    ],
    [
        "Generate public inputs only\n",
        9.41425371170044,
        20.18
    ],
    [
        "Generating public parameters for: efd38532172335dcc3793adb9e7357dad388c435b04ad883afc451f50e2f07021\n",
        9.429620265960693,
        20.2
    ],
    [
        "../Middlebox/files/transcript_efd38532172335dcc3793adb9e7357dad388c435b04ad883afc451f50e2f07021.txt\n",
        9.441018342971802,
        20.2
    ],
    [
        "../Middlebox/files/merkle_proof_pub.txt\n",
        9.452526092529297,
        20.209999999999997
    ],
    [
        "asdfghc\n",
        9.463893413543701,
        20.209999999999997
    ],
    [
        "97\n",
        9.476014614105225,
        20.24
    ],
    [
        "115\n",
        9.489121913909912,
        20.27
    ],
    [
        "100\n",
        9.50284719467163,
        20.29
    ],
    [
        "102\n",
        9.516684293746948,
        20.31
    ],
    [
        "103\n",
        9.530243396759033,
        20.319999999999997
    ],
    [
        "7\n",
        9.543333292007446,
        20.33
    ],
    [
        "Sample Run: efd38532172335dcc3793adb9e7357dad388c435b04ad883afc451f50e2f07021 finished!\n",
        9.556398630142212,
        20.349999999999998
    ],
    [
        "1\n",
        9.568958759307861,
        20.36
    ],
    [
        "1768\n",
        9.636631488800049,
        20.36
    ],
    [
        "264\n",
        9.63676381111145,
        20.36
    ],
    [
        "4\n",
        9.63681936264038,
        20.36
    ],
    [
        "7\n",
        9.636869430541992,
        20.36
    ],
    [
        "18765087434070279118326479840333070550893160322590316806400066067763149452870\n",
        9.636918783187866,
        20.36
    ],
    [
        "38\n",
        9.636964797973633,
        20.36
    ],
    [
        "196\n",
        9.637009859085083,
        20.36
    ],
    [
        "199\n",
        9.637056112289429,
        20.36
    ],
    [
        "236\n",
        9.6371009349823,
        20.36
    ],
    [
        "92\n",
        9.637145519256592,
        20.36
    ],
    [
        "196\n",
        9.637189149856567,
        20.36
    ],
    [
        "149\n",
        9.637232780456543,
        20.36
    ],
    [
        "119\n",
        9.637277364730835,
        20.36
    ],
    [
        "31\n",
        9.63732123374939,
        20.36
    ],
    [
        "16\n",
        9.63736605644226,
        20.36
    ],
    [
        "113\n",
        9.637409925460815,
        20.36
    ],
    [
        "229\n",
        9.637453317642212,
        20.36
    ],
    [
        "109\n",
        9.63749647140503,
        20.36
    ],
    [
        "10\n",
        9.637540102005005,
        20.36
    ],
    [
        "72\n",
        9.637583255767822,
        20.36
    ],
    [
        "67\n",
        9.637626886367798,
        20.36
    ],
    [
        "63\n",
        9.637669086456299,
        20.36
    ],
    [
        "111\n",
        9.637716293334961,
        20.36
    ],
    [
        "254\n",
        9.637763261795044,
        20.36
    ],
    [
        "151\n",
        9.637807846069336,
        20.36
    ],
    [
        "203\n",
        9.637852191925049,
        20.36
    ],
    [
        "24\n",
        9.637896060943604,
        20.36
    ],
    [
        "102\n",
        9.637939691543579,
        20.36
    ],
    [
        "67\n",
        9.637982606887817,
        20.36
    ],
    [
        "187\n",
        9.638025760650635,
        20.36
    ],
    [
        "111\n",
        9.638069152832031,
        20.36
    ],
    [
        "178\n",
        9.638113260269165,
        20.36
    ],
    [
        "200\n",
        9.63815712928772,
        20.36
    ],
    [
        "135\n",
        9.638200044631958,
        20.36
    ],
    [
        "232\n",
        9.638242959976196,
        20.36
    ],
    [
        "119\n",
        9.63828730583191,
        20.36
    ],
    [
        "210\n",
        9.638330698013306,
        20.36
    ],
    [
        "157\n",
        9.638373136520386,
        20.36
    ],
    [
        "19\n",
        9.638415813446045,
        20.36
    ],
    [
        "23\n",
        9.638458490371704,
        20.36
    ],
    [
        "229\n",
        9.63850212097168,
        20.36
    ],
    [
        "0\n",
        9.638545751571655,
        20.36
    ],
    [
        "0\n",
        9.638588428497314,
        20.36
    ],
    [
        "0\n",
        9.63863492012024,
        20.36
    ],
    [
        "0\n",
        9.638682126998901,
        20.36
    ],
    [
        "0\n",
        9.638726949691772,
        20.36
    ],
    [
        "0\n",
        9.63876986503601,
        20.36
    ],
    [
        "0\n",
        9.638813734054565,
        20.36
    ],
    [
        "0\n",
        9.638857364654541,
        20.36
    ],
    [
        "0\n",
        9.63890266418457,
        20.36
    ],
    [
        "0\n",
        9.638947248458862,
        20.36
    ],
    [
        "0\n",
        9.638990879058838,
        20.36
    ],
    [
        "0\n",
        9.639034509658813,
        20.36
    ],
    [
        "0\n",
        9.63907766342163,
        20.36
    ],
    [
        "0\n",
        9.63912057876587,
        20.36
    ],
    [
        "0\n",
        9.639163970947266,
        20.36
    ],
    [
        "0\n",
        9.639208316802979,
        20.36
    ],
    [
        "0\n",
        9.63925313949585,
        20.36
    ],
    [
        "0\n",
        9.639297246932983,
        20.36
    ],
    [
        "0\n",
        9.6393404006958,
        20.36
    ],
    [
        "0\n",
        9.63938593864441,
        20.36
    ],
    [
        "0\n",
        9.639429807662964,
        20.36
    ],
    [
        "0\n",
        9.639474153518677,
        20.36
    ],
    [
        "0\n",
        9.63951826095581,
        20.36
    ],
    [
        "0\n",
        9.639565229415894,
        20.36
    ],
    [
        "0\n",
        9.639620065689087,
        20.36
    ],
    [
        "0\n",
        9.639664649963379,
        20.36
    ],
    [
        "0\n",
        9.639708995819092,
        20.36
    ],
    [
        "0\n",
        9.63975191116333,
        20.36
    ],
    [
        "0\n",
        9.639795064926147,
        20.36
    ],
    [
        "0\n",
        9.639838218688965,
        20.36
    ],
    [
        "0\n",
        9.639881610870361,
        20.36
    ],
    [
        "0\n",
        9.639925241470337,
        20.36
    ],
    [
        "0\n",
        9.639968395233154,
        20.36
    ],
    [
        "0\n",
        9.64001178741455,
        20.36
    ],
    [
        "0\n",
        9.640055179595947,
        20.36
    ],
    [
        "0\n",
        9.640098571777344,
        20.36
    ],
    [
        "0\n",
        9.640141487121582,
        20.36
    ],
    [
        "0\n",
        9.640185594558716,
        20.36
    ],
    [
        "0\n",
        9.640228509902954,
        20.36
    ],
    [
        "0\n",
        9.64027190208435,
        20.36
    ],
    [
        "0\n",
        9.64031457901001,
        20.36
    ],
    [
        "0\n",
        9.640358448028564,
        20.36
    ],
    [
        "0\n",
        9.640401363372803,
        20.36
    ],
    [
        "0\n",
        9.640444993972778,
        20.36
    ],
    [
        "0\n",
        9.640491485595703,
        20.36
    ],
    [
        "0\n",
        9.640538454055786,
        20.36
    ],
    [
        "0\n",
        9.640581607818604,
        20.36
    ],
    [
        "0\n",
        9.640624761581421,
        20.36
    ],
    [
        "0\n",
        9.640668153762817,
        20.36
    ],
    [
        "0\n",
        9.640710353851318,
        20.36
    ],
    [
        "0\n",
        9.640752792358398,
        20.36
    ],
    [
        "0\n",
        9.640795707702637,
        20.36
    ],
    [
        "0\n",
        9.640838384628296,
        20.36
    ],
    [
        "0\n",
        9.640881538391113,
        20.36
    ],
    [
        "0\n",
        9.640924453735352,
        20.36
    ],
    [
        "0\n",
        9.64096713066101,
        20.36
    ],
    [
        "0\n",
        9.641009092330933,
        20.36
    ],
    [
        "0\n",
        9.641051769256592,
        20.36
    ],
    [
        "0\n",
        9.64109492301941,
        20.36
    ],
    [
        "0\n",
        9.64113736152649,
        20.36
    ],
    [
        "0\n",
        9.641180038452148,
        20.36
    ],
    [
        "0\n",
        9.641222953796387,
        20.36
    ],
    [
        "0\n",
        9.641265630722046,
        20.36
    ],
    [
        "0\n",
        9.641308546066284,
        20.36
    ],
    [
        "0\n",
        9.64135193824768,
        20.36
    ],
    [
        "0\n",
        9.641397476196289,
        20.36
    ],
    [
        "0\n",
        9.641443967819214,
        20.36
    ],
    [
        "0\n",
        9.641488075256348,
        20.36
    ],
    [
        "0\n",
        9.641530752182007,
        20.36
    ],
    [
        "0\n",
        9.641573905944824,
        20.36
    ],
    [
        "0\n",
        9.641616582870483,
        20.36
    ],
    [
        "0\n",
        9.6416597366333,
        20.36
    ],
    [
        "0\n",
        9.641702651977539,
        20.36
    ],
    [
        "0\n",
        9.641745567321777,
        20.36
    ],
    [
        "0\n",
        9.641788482666016,
        20.36
    ],
    [
        "0\n",
        9.641831159591675,
        20.36
    ],
    [
        "0\n",
        9.641874551773071,
        20.36
    ],
    [
        "0\n",
        9.64191722869873,
        20.36
    ],
    [
        "0\n",
        9.641959428787231,
        20.36
    ],
    [
        "0\n",
        9.64200234413147,
        20.36
    ],
    [
        "0\n",
        9.642045497894287,
        20.36
    ],
    [
        "0\n",
        9.642087936401367,
        20.36
    ],
    [
        "0\n",
        9.642131090164185,
        20.36
    ],
    [
        "0\n",
        9.642173528671265,
        20.36
    ],
    [
        "0\n",
        9.642216444015503,
        20.36
    ],
    [
        "0\n",
        9.642259120941162,
        20.36
    ],
    [
        "0\n",
        9.642305374145508,
        20.36
    ],
    [
        "0\n",
        9.642351150512695,
        20.36
    ],
    [
        "0\n",
        9.64239501953125,
        20.36
    ],
    [
        "0\n",
        9.642438411712646,
        20.36
    ],
    [
        "0\n",
        9.642481327056885,
        20.36
    ],
    [
        "0\n",
        9.642528533935547,
        20.36
    ],
    [
        "0\n",
        9.642570972442627,
        20.36
    ],
    [
        "0\n",
        9.642613172531128,
        20.36
    ],
    [
        "0\n",
        9.64266037940979,
        20.36
    ],
    [
        "0\n",
        9.64270281791687,
        20.36
    ],
    [
        "0\n",
        9.64274549484253,
        20.36
    ],
    [
        "0\n",
        9.642788171768188,
        20.36
    ],
    [
        "0\n",
        9.64283037185669,
        20.36
    ],
    [
        "0\n",
        9.64287257194519,
        20.36
    ],
    [
        "0\n",
        9.64291524887085,
        20.36
    ],
    [
        "0\n",
        9.642958402633667,
        20.36
    ],
    [
        "0\n",
        9.643001317977905,
        20.36
    ],
    [
        "0\n",
        9.643043994903564,
        20.36
    ],
    [
        "0\n",
        9.643104076385498,
        20.36
    ],
    [
        "0\n",
        9.643149375915527,
        20.36
    ],
    [
        "0\n",
        9.643194675445557,
        20.36
    ],
    [
        "0\n",
        9.64324164390564,
        20.36
    ],
    [
        "0\n",
        9.643289566040039,
        20.36
    ],
    [
        "0\n",
        9.643333196640015,
        20.36
    ],
    [
        "0\n",
        9.64337706565857,
        20.36
    ],
    [
        "0\n",
        9.643420457839966,
        20.36
    ],
    [
        "0\n",
        9.643462896347046,
        20.36
    ],
    [
        "0\n",
        9.643506050109863,
        20.36
    ],
    [
        "0\n",
        9.643549680709839,
        20.36
    ],
    [
        "0\n",
        9.643605947494507,
        20.36
    ],
    [
        "0\n",
        9.643651723861694,
        20.36
    ],
    [
        "0\n",
        9.643695831298828,
        20.36
    ],
    [
        "0\n",
        9.643739461898804,
        20.36
    ],
    [
        "0\n",
        9.643782615661621,
        20.36
    ],
    [
        "0\n",
        9.64382553100586,
        20.36
    ],
    [
        "0\n",
        9.643869400024414,
        20.36
    ],
    [
        "0\n",
        9.643913269042969,
        20.36
    ],
    [
        "0\n",
        9.643956661224365,
        20.36
    ],
    [
        "105\n",
        9.643999814987183,
        20.36
    ],
    [
        "30\n",
        9.64404296875,
        20.36
    ],
    [
        "177\n",
        9.644087791442871,
        20.36
    ],
    [
        "105\n",
        9.644131422042847,
        20.36
    ],
    [
        "94\n",
        9.644177675247192,
        20.36
    ],
    [
        "153\n",
        9.644224405288696,
        20.36
    ],
    [
        "62\n",
        9.644268035888672,
        20.36
    ],
    [
        "35\n",
        9.644310712814331,
        20.36
    ],
    [
        "140\n",
        9.644354343414307,
        20.36
    ],
    [
        "138\n",
        9.644397258758545,
        20.36
    ],
    [
        "205\n",
        9.644440412521362,
        20.36
    ],
    [
        "35\n",
        9.6444833278656,
        20.36
    ],
    [
        "167\n",
        9.644526243209839,
        20.36
    ],
    [
        "72\n",
        9.644569396972656,
        20.36
    ],
    [
        "229\n",
        9.644612312316895,
        20.36
    ],
    [
        "215\n",
        9.644654512405396,
        20.36
    ],
    [
        "119\n",
        9.644697904586792,
        20.36
    ],
    [
        "248\n",
        9.644740581512451,
        20.36
    ],
    [
        "39\n",
        9.64478325843811,
        20.36
    ],
    [
        "180\n",
        9.644826889038086,
        20.36
    ],
    [
        "27\n",
        9.644869565963745,
        20.36
    ],
    [
        "73\n",
        9.644912958145142,
        20.36
    ],
    [
        "183\n",
        9.644955158233643,
        20.36
    ],
    [
        "117\n",
        9.644997835159302,
        20.36
    ],
    [
        "73\n",
        9.64504098892212,
        20.36
    ],
    [
        "73\n",
        9.645086526870728,
        20.36
    ],
    [
        "139\n",
        9.645133018493652,
        20.36
    ],
    [
        "68\n",
        9.645177125930786,
        20.36
    ],
    [
        "164\n",
        9.645220279693604,
        20.36
    ],
    [
        "102\n",
        9.645263671875,
        20.36
    ],
    [
        "78\n",
        9.645306825637817,
        20.36
    ],
    [
        "225\n",
        9.645349979400635,
        20.36
    ],
    [
        "155\n",
        9.645392417907715,
        20.36
    ],
    [
        "173\n",
        9.645435094833374,
        20.36
    ],
    [
        "10\n",
        9.645478010177612,
        20.36
    ],
    [
        "125\n",
        9.64552116394043,
        20.36
    ],
    [
        "97\n",
        9.645564317703247,
        20.36
    ],
    [
        "115\n",
        9.645607709884644,
        20.36
    ],
    [
        "100\n",
        9.645657062530518,
        20.36
    ],
    [
        "102\n",
        9.645700693130493,
        20.36
    ],
    [
        "103\n",
        9.64574384689331,
        20.36
    ],
    [
        "Done",
        10.14277458190918,
        20.36
    ],
    [
        "Reset time counters for profiling\n",
        10.148427724838257,
        20.36
    ],
    [
        "Verifying proof...\n",
        10.149225234985352,
        20.36
    ],
    [
        "files/verify.efd38532172335dcc3793adb9e7357dad388c435b04ad883afc451f50e2f0702.1.bin\n",
        10.149950981140137,
        20.36
    ],
    [
        "(enter) Parsing and Evaluating the circuit \t[             ]\t(0.0007s x1.00 from start)\n",
        10.15065884590149,
        20.36
    ],
    [
        "(leave) Parsing and Evaluating the circuit \t[6.1375s x1.00]\t(6.1382s x1.00 from start)\n",
        16.285911321640015,
        26.49
    ],
    [
        "Translating Constraints ... \n",
        16.287651300430298,
        26.49
    ],
    [
        "\tConstraint translation done\n",
        34.73618841171265,
        44.69
    ],
    [
        "\tMemory usage for constraint translation: 1889 MB\n",
        34.76798486709595,
        44.69
    ],
    [
        "Note: Protoboard Not Satisfied .. \n",
        34.80598163604736,
        44.730000000000004
    ],
    [
        "Assignment of values done .. \n",
        34.847201108932495,
        44.769999999999996
    ],
    [
        "Example created!\n",
        34.88518261909485,
        44.81
    ],
    [
        "Reading verification key (preprocessed)...\n",
        34.92648196220398,
        44.85
    ],
    [
        "Reading proof...\n",
        34.961055278778076,
        44.870000000000005
    ],
    [
        "(enter) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[             ]\t(24.6157s x0.99 from start)\n",
        34.99494123458862,
        44.9
    ],
    [
        "  (enter) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[             ]\t(24.6157s x0.99 from start)\n",
        35.02912139892578,
        44.94
    ],
    [
        "    (enter) Accumulate input                   \t[             ]\t(24.6157s x0.99 from start)\n",
        35.06358981132507,
        44.97
    ],
    [
        "    (leave) Accumulate input                   \t[0.0002s x1.00]\t(24.6159s x0.99 from start)\n",
        35.098557233810425,
        45.0
    ],
    [
        "    (enter) Check if the proof is well-formed  \t[             ]\t(24.6159s x0.99 from start)\n",
        35.13831067085266,
        45.04
    ],
    [
        "    (leave) Check if the proof is well-formed  \t[0.0000s x1.11]\t(24.6159s x0.99 from start)\n",
        35.175305128097534,
        45.08
    ],
    [
        "    (enter) Online pairing computations        \t[             ]\t(24.6159s x0.99 from start)\n",
        35.21323037147522,
        45.120000000000005
    ],
    [
        "      (enter) Check QAP divisibility             \t[             ]\t(24.6159s x0.99 from start)\n",
        35.24779438972473,
        45.16
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(24.6159s x0.99 from start)\n",
        35.276697635650635,
        45.17
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.09]\t(24.6159s x0.99 from start)\n",
        35.30350399017334,
        45.17
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G2    \t[             ]\t(24.6159s x0.99 from start)\n",
        35.33005666732788,
        45.18
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G2    \t[0.0001s x1.01]\t(24.6160s x0.99 from start)\n",
        35.35842418670654,
        45.18
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(24.6160s x0.99 from start)\n",
        35.389349937438965,
        45.2
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.12]\t(24.6160s x0.99 from start)\n",
        35.42137813568115,
        45.239999999999995
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(24.6160s x0.99 from start)\n",
        35.45270299911499,
        45.269999999999996
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.02]\t(24.6160s x0.99 from start)\n",
        35.48406910896301,
        45.3
    ],
    [
        "        (enter) Call to miller_loop<bn128_pp>      \t[             ]\t(24.6160s x0.99 from start)\n",
        35.51623725891113,
        45.33
    ],
    [
        "        (leave) Call to miller_loop<bn128_pp>      \t[0.0001s x1.00]\t(24.6161s x0.99 from start)\n",
        35.54930329322815,
        45.39
    ],
    [
        "        (enter) Call to double_miller_loop<bn128_pp>\t[             ]\t(24.6161s x0.99 from start)\n",
        35.581881523132324,
        45.4
    ],
    [
        "        (leave) Call to double_miller_loop<bn128_pp>\t[0.0002s x1.00]\t(24.6163s x0.99 from start)\n",
        35.613853931427,
        45.43
    ],
    [
        "        (enter) Call to bn128_final_exponentiation \t[             ]\t(24.6163s x0.99 from start)\n",
        35.64562225341797,
        45.46
    ],
    [
        "        (leave) Call to bn128_final_exponentiation \t[0.0002s x1.00]\t(24.6165s x0.99 from start)\n",
        35.67688226699829,
        45.489999999999995
    ],
    [
        "      (leave) Check QAP divisibility             \t[0.0007s x1.00]\t(24.6165s x0.99 from start)\n",
        35.70805883407593,
        45.519999999999996
    ],
    [
        "    (leave) Online pairing computations        \t[0.0007s x1.00]\t(24.6166s x0.99 from start)\n",
        35.73988747596741,
        45.56
    ],
    [
        "  (leave) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[0.0009s x1.00]\t(24.6166s x0.99 from start)\n",
        35.773449182510376,
        45.59
    ],
    [
        "(leave) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[0.0009s x1.00]\t(24.6166s x0.99 from start)\n",
        35.80405592918396,
        45.620000000000005
    ],
    [
        "PASS",
        36.50444746017456,
        46.32
    ],
    [
        "Done",
        36.57685399055481,
        46.32
    ]
]