[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.3708155155181885
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1000640392303467
    ],
    [
        "Num of variable reads = 1480\n",
        1.1105597019195557
    ],
    [
        "Num of conditional writes = 0\n",
        1.121978521347046
    ],
    [
        "Num of words per element = 1\n",
        1.1333346366882324
    ],
    [
        "Num of variable writes = 0\n",
        1.1444170475006104
    ],
    [
        "num of accesses = 1480\n",
        1.155674934387207
    ],
    [
        "Packing Option = 1\n",
        1.1669340133666992
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1782684326171875
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.189868688583374
    ],
    [
        "done with read only memory solutions!\n",
        2.253382921218872
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.2786591053009033
    ],
    [
        "Num of variable reads = 128\n",
        2.2942047119140625
    ],
    [
        "Num of conditional writes = 0\n",
        2.3084945678710938
    ],
    [
        "Num of words per element = 1\n",
        2.323948621749878
    ],
    [
        "Num of variable writes = 0\n",
        2.3388988971710205
    ],
    [
        "num of accesses = 128\n",
        2.3541228771209717
    ],
    [
        "Packing Option = 1\n",
        2.3700296878814697
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.385625123977661
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.4009058475494385
    ],
    [
        "Num of variable reads = 520\n",
        2.4164068698883057
    ],
    [
        "Num of conditional writes = 0\n",
        2.435131788253784
    ],
    [
        "Num of words per element = 1\n",
        2.4501893520355225
    ],
    [
        "Num of variable writes = 0\n",
        2.46579647064209
    ],
    [
        "num of accesses = 520\n",
        2.4814305305480957
    ],
    [
        "Packing Option = 1\n",
        2.4968032836914062
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.512336492538452
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.528176784515381
    ],
    [
        "done with read only memory solutions!\n",
        3.0721309185028076
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.0871763229370117
    ],
    [
        "Num of variable reads = 128\n",
        3.1017744541168213
    ],
    [
        "Num of conditional writes = 0\n",
        3.120772361755371
    ],
    [
        "Num of words per element = 1\n",
        3.1356441974639893
    ],
    [
        "Num of variable writes = 0\n",
        3.150789737701416
    ],
    [
        "num of accesses = 128\n",
        3.165987014770508
    ],
    [
        "Packing Option = 1\n",
        3.184751510620117
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.200314521789551
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.2156662940979004
    ],
    [
        "Num of variable reads = 71\n",
        3.2311010360717773
    ],
    [
        "Num of conditional writes = 0\n",
        3.2471201419830322
    ],
    [
        "Num of words per element = 1\n",
        3.262936592102051
    ],
    [
        "Num of variable writes = 0\n",
        3.27860426902771
    ],
    [
        "num of accesses = 71\n",
        3.294165849685669
    ],
    [
        "Packing Option = 1\n",
        3.3097317218780518
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.325477361679077
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.3421993255615234
    ],
    [
        "Num of variable reads = 128\n",
        3.3584485054016113
    ],
    [
        "Num of conditional writes = 0\n",
        3.374267339706421
    ],
    [
        "Num of words per element = 1\n",
        3.3900647163391113
    ],
    [
        "Num of variable writes = 0\n",
        3.4058218002319336
    ],
    [
        "num of accesses = 128\n",
        3.4215314388275146
    ],
    [
        "Packing Option = 0\n",
        3.43735408782959
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.4532809257507324
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.4690093994140625
    ],
    [
        "Num of variable reads = 71\n",
        3.4846174716949463
    ],
    [
        "Num of conditional writes = 0\n",
        3.5034940242767334
    ],
    [
        "Num of words per element = 1\n",
        3.518786668777466
    ],
    [
        "Num of variable writes = 0\n",
        3.5338430404663086
    ],
    [
        "num of accesses = 71\n",
        3.5492959022521973
    ],
    [
        "Packing Option = 1\n",
        3.564356565475464
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.5795490741729736
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.595444917678833
    ],
    [
        "Num of variable reads = 128\n",
        3.6110281944274902
    ],
    [
        "Num of conditional writes = 0\n",
        3.626600503921509
    ],
    [
        "Num of words per element = 1\n",
        3.642270088195801
    ],
    [
        "Num of variable writes = 0\n",
        3.6576809883117676
    ],
    [
        "num of accesses = 128\n",
        3.67295503616333
    ],
    [
        "Packing Option = 0\n",
        3.6889259815216064
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.70462703704834
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.7202725410461426
    ],
    [
        "Num of variable reads = 0\n",
        3.736859083175659
    ],
    [
        "Num of conditional writes = 0\n",
        3.7535083293914795
    ],
    [
        "Num of words per element = 1\n",
        3.7698934078216553
    ],
    [
        "Num of variable writes = 0\n",
        3.786877393722534
    ],
    [
        "num of accesses = 0\n",
        3.8056564331054688
    ],
    [
        "Packing Option = 0\n",
        3.8238353729248047
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.8398241996765137
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.8552799224853516
    ],
    [
        "Num of variable reads = 5160\n",
        3.8704848289489746
    ],
    [
        "Num of conditional writes = 0\n",
        3.8872578144073486
    ],
    [
        "Num of words per element = 1\n",
        3.9035544395446777
    ],
    [
        "Num of variable writes = 0\n",
        3.919374465942383
    ],
    [
        "num of accesses = 5160\n",
        3.9354896545410156
    ],
    [
        "Packing Option = 1\n",
        3.9516055583953857
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        3.967667579650879
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        3.9834177494049072
    ],
    [
        "done with read only memory solutions!\n",
        4.032369375228882
    ],
    [
        "Phase 1: Analysis Completed!\n",
        4.048598766326904
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        4.06536340713501
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        9.55282211303711
    ],
    [
        " \t Total Number of Constraints :  1783271\n",
        9.593085527420044
    ],
    [
        "\n",
        9.631055355072021
    ],
    [
        "Instruction queue size: 5722532\n",
        9.66571307182312
    ],
    [
        "Normal execution\n",
        18.00509214401245
    ],
    [
        "Running Sample Run: run61\n",
        18.039023876190186
    ],
    [
        "tls_data.txt\n",
        18.07141900062561
    ],
    [
        "files/proof_6.txt\n",
        18.105622053146362
    ],
    [
        "Url assignment done\n",
        18.14825201034546
    ],
    [
        "Evaluating Input on the circuit \n",
        18.177172422409058
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        18.203410148620605
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        18.229955196380615
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        18.257675647735596
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        18.287282466888428
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        18.317220449447632
    ],
    [
        "\t[input] Value of Wire # 22 :: 1628d468a9bfe89d40b736883a16b8e74300b0f293733a9a35e4ba2d3777b894\n",
        18.34764337539673
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        18.379143238067627
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        18.410837650299072
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        18.442932844161987
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        18.47461438179016
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        18.505841732025146
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        18.537418842315674
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        18.56745171546936
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        18.598658323287964
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        18.627700090408325
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        18.659462451934814
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        18.690114736557007
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        18.721163511276245
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        18.752153396606445
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        18.782092809677124
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        18.812172412872314
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        18.842247486114502
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        18.87248992919922
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        18.92879605293274
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        18.979528427124023
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        19.007097244262695
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        19.03549313545227
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        19.06522560119629
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        19.095284700393677
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        19.126229763031006
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        19.158484935760498
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        19.18991756439209
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        19.253204107284546
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        19.311604022979736
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        19.34020757675171
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        19.369394302368164
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        19.39998722076416
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        19.432239770889282
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        19.46491837501526
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        19.50186586380005
    ],
    [
        "\t[input] Value of Wire # 329 :: 2f\n",
        19.538777351379395
    ],
    [
        "\t[input] Value of Wire # 338 :: d4\n",
        19.742847681045532
    ],
    [
        "\t[input] Value of Wire # 347 :: 0\n",
        19.742958784103394
    ],
    [
        "\t[input] Value of Wire # 356 :: 0\n",
        19.74301242828369
    ],
    [
        "\t[input] Value of Wire # 365 :: 0\n",
        19.743061780929565
    ],
    [
        "\t[input] Value of Wire # 374 :: 0\n",
        19.743107080459595
    ],
    [
        "\t[input] Value of Wire # 383 :: 0\n",
        19.743151664733887
    ],
    [
        "\t[input] Value of Wire # 392 :: 0\n",
        19.7431960105896
    ],
    [
        "\t[input] Value of Wire # 401 :: 0\n",
        19.743240118026733
    ],
    [
        "\t[input] Value of Wire # 410 :: 0\n",
        19.74328351020813
    ],
    [
        "\t[input] Value of Wire # 419 :: 0\n",
        19.743327617645264
    ],
    [
        "\t[input] Value of Wire # 428 :: 0\n",
        19.74337124824524
    ],
    [
        "\t[input] Value of Wire # 437 :: 0\n",
        19.74341583251953
    ],
    [
        "\t[input] Value of Wire # 446 :: 0\n",
        19.743460655212402
    ],
    [
        "\t[input] Value of Wire # 455 :: 0\n",
        19.74350595474243
    ],
    [
        "\t[input] Value of Wire # 464 :: 0\n",
        19.7435519695282
    ],
    [
        "\t[input] Value of Wire # 473 :: 0\n",
        19.743603467941284
    ],
    [
        "\t[input] Value of Wire # 482 :: 0\n",
        19.74365258216858
    ],
    [
        "\t[input] Value of Wire # 491 :: 0\n",
        19.74369788169861
    ],
    [
        "\t[input] Value of Wire # 500 :: 0\n",
        19.7437424659729
    ],
    [
        "\t[input] Value of Wire # 509 :: 0\n",
        19.743788480758667
    ],
    [
        "\t[input] Value of Wire # 518 :: 0\n",
        19.74383807182312
    ],
    [
        "\t[input] Value of Wire # 527 :: 0\n",
        19.743887186050415
    ],
    [
        "\t[input] Value of Wire # 536 :: 0\n",
        19.743932723999023
    ],
    [
        "\t[input] Value of Wire # 545 :: 0\n",
        19.743984699249268
    ],
    [
        "\t[input] Value of Wire # 554 :: 0\n",
        19.744041681289673
    ],
    [
        "\t[input] Value of Wire # 563 :: 0\n",
        19.74409246444702
    ],
    [
        "\t[input] Value of Wire # 572 :: 0\n",
        19.744141817092896
    ],
    [
        "\t[input] Value of Wire # 581 :: 0\n",
        19.74419355392456
    ],
    [
        "\t[input] Value of Wire # 590 :: 0\n",
        19.744240760803223
    ],
    [
        "\t[input] Value of Wire # 599 :: 0\n",
        19.744286060333252
    ],
    [
        "\t[input] Value of Wire # 608 :: 0\n",
        19.744331121444702
    ],
    [
        "\t[input] Value of Wire # 617 :: 0\n",
        19.744376182556152
    ],
    [
        "\t[input] Value of Wire # 626 :: 0\n",
        19.74442148208618
    ],
    [
        "\t[input] Value of Wire # 635 :: 0\n",
        19.744470596313477
    ],
    [
        "\t[input] Value of Wire # 644 :: 0\n",
        19.744518756866455
    ],
    [
        "\t[input] Value of Wire # 653 :: 0\n",
        19.744564533233643
    ],
    [
        "\t[input] Value of Wire # 662 :: 0\n",
        19.74461030960083
    ],
    [
        "\t[input] Value of Wire # 671 :: 0\n",
        19.744657278060913
    ],
    [
        "\t[input] Value of Wire # 680 :: 0\n",
        19.744704723358154
    ],
    [
        "\t[input] Value of Wire # 689 :: 0\n",
        19.744750261306763
    ],
    [
        "\t[input] Value of Wire # 698 :: 0\n",
        19.744798183441162
    ],
    [
        "\t[input] Value of Wire # 707 :: 0\n",
        19.74484372138977
    ],
    [
        "\t[input] Value of Wire # 716 :: 0\n",
        19.74488854408264
    ],
    [
        "\t[input] Value of Wire # 725 :: 0\n",
        19.74493408203125
    ],
    [
        "\t[input] Value of Wire # 734 :: 0\n",
        19.744983911514282
    ],
    [
        "\t[input] Value of Wire # 743 :: 0\n",
        19.745031118392944
    ],
    [
        "\t[input] Value of Wire # 752 :: 0\n",
        19.74508810043335
    ],
    [
        "\t[input] Value of Wire # 761 :: 0\n",
        19.745134353637695
    ],
    [
        "\t[input] Value of Wire # 770 :: 0\n",
        19.745179414749146
    ],
    [
        "\t[input] Value of Wire # 779 :: 0\n",
        19.745224237442017
    ],
    [
        "\t[input] Value of Wire # 788 :: 0\n",
        19.74526882171631
    ],
    [
        "\t[input] Value of Wire # 797 :: 0\n",
        19.745314121246338
    ],
    [
        "\t[input] Value of Wire # 806 :: 0\n",
        19.745362043380737
    ],
    [
        "\t[input] Value of Wire # 815 :: 0\n",
        19.745408058166504
    ],
    [
        "\t[input] Value of Wire # 824 :: 0\n",
        19.745453596115112
    ],
    [
        "\t[input] Value of Wire # 833 :: 0\n",
        19.745498418807983
    ],
    [
        "\t[input] Value of Wire # 842 :: 0\n",
        19.75108027458191
    ],
    [
        "\t[input] Value of Wire # 851 :: 0\n",
        19.7511465549469
    ],
    [
        "\t[input] Value of Wire # 860 :: 0\n",
        19.751205921173096
    ],
    [
        "\t[input] Value of Wire # 869 :: 0\n",
        19.75127077102661
    ],
    [
        "\t[input] Value of Wire # 878 :: 0\n",
        19.75132465362549
    ],
    [
        "\t[input] Value of Wire # 887 :: 0\n",
        19.75137710571289
    ],
    [
        "\t[input] Value of Wire # 896 :: 0\n",
        19.751425981521606
    ],
    [
        "\t[input] Value of Wire # 905 :: 0\n",
        19.751471281051636
    ],
    [
        "\t[input] Value of Wire # 914 :: 0\n",
        19.751516342163086
    ],
    [
        "\t[input] Value of Wire # 923 :: 0\n",
        19.751562356948853
    ],
    [
        "\t[input] Value of Wire # 932 :: 0\n",
        19.751607418060303
    ],
    [
        "\t[input] Value of Wire # 941 :: 0\n",
        19.751657247543335
    ],
    [
        "\t[input] Value of Wire # 950 :: 0\n",
        19.751704454421997
    ],
    [
        "\t[input] Value of Wire # 959 :: 0\n",
        19.751749277114868
    ],
    [
        "\t[input] Value of Wire # 968 :: 0\n",
        19.751794815063477
    ],
    [
        "\t[input] Value of Wire # 977 :: 0\n",
        19.75183916091919
    ],
    [
        "\t[input] Value of Wire # 986 :: 0\n",
        19.75188374519348
    ],
    [
        "\t[input] Value of Wire # 995 :: 0\n",
        19.751928329467773
    ],
    [
        "\t[input] Value of Wire # 1004 :: 0\n",
        19.75198221206665
    ],
    [
        "\t[input] Value of Wire # 1013 :: 0\n",
        19.75203585624695
    ],
    [
        "\t[input] Value of Wire # 1022 :: 0\n",
        19.752084255218506
    ],
    [
        "\t[input] Value of Wire # 1031 :: 0\n",
        19.752130031585693
    ],
    [
        "\t[input] Value of Wire # 1040 :: 0\n",
        19.752176523208618
    ],
    [
        "\t[input] Value of Wire # 1049 :: 0\n",
        19.752227306365967
    ],
    [
        "\t[input] Value of Wire # 1058 :: 0\n",
        19.752275943756104
    ],
    [
        "\t[input] Value of Wire # 1067 :: 0\n",
        19.75232172012329
    ],
    [
        "\t[input] Value of Wire # 1076 :: 0\n",
        19.7523672580719
    ],
    [
        "\t[input] Value of Wire # 1085 :: 0\n",
        19.75241208076477
    ],
    [
        "\t[input] Value of Wire # 1094 :: 0\n",
        19.75245714187622
    ],
    [
        "\t[input] Value of Wire # 1103 :: 0\n",
        19.75250220298767
    ],
    [
        "\t[input] Value of Wire # 1112 :: 0\n",
        19.752547025680542
    ],
    [
        "\t[input] Value of Wire # 1121 :: 0\n",
        19.752592086791992
    ],
    [
        "\t[input] Value of Wire # 1130 :: 0\n",
        19.75263810157776
    ],
    [
        "\t[input] Value of Wire # 1139 :: 0\n",
        19.75268268585205
    ],
    [
        "\t[input] Value of Wire # 1148 :: 0\n",
        19.75273299217224
    ],
    [
        "\t[input] Value of Wire # 1157 :: 0\n",
        19.75278091430664
    ],
    [
        "\t[input] Value of Wire # 1166 :: 0\n",
        19.752826690673828
    ],
    [
        "\t[input] Value of Wire # 1175 :: 0\n",
        19.75287127494812
    ],
    [
        "\t[input] Value of Wire # 1184 :: 0\n",
        19.75291681289673
    ],
    [
        "\t[input] Value of Wire # 1193 :: 0\n",
        19.75296640396118
    ],
    [
        "\t[input] Value of Wire # 1202 :: 0\n",
        19.753014087677002
    ],
    [
        "\t[input] Value of Wire # 1211 :: 0\n",
        19.75307059288025
    ],
    [
        "\t[input] Value of Wire # 1220 :: 0\n",
        19.753122091293335
    ],
    [
        "\t[input] Value of Wire # 1229 :: 0\n",
        19.75317144393921
    ],
    [
        "\t[input] Value of Wire # 1238 :: 0\n",
        19.753222465515137
    ],
    [
        "\t[input] Value of Wire # 1247 :: 0\n",
        19.75327205657959
    ],
    [
        "\t[input] Value of Wire # 1256 :: 0\n",
        19.75334906578064
    ],
    [
        "\t[input] Value of Wire # 1265 :: 0\n",
        19.75340223312378
    ],
    [
        "\t[input] Value of Wire # 1274 :: 0\n",
        19.753453016281128
    ],
    [
        "\t[input] Value of Wire # 1283 :: 0\n",
        19.75350332260132
    ],
    [
        "\t[input] Value of Wire # 1292 :: 0\n",
        19.75355052947998
    ],
    [
        "\t[input] Value of Wire # 1301 :: 0\n",
        19.7535982131958
    ],
    [
        "\t[input] Value of Wire # 1310 :: 0\n",
        19.753644227981567
    ],
    [
        "\t[input] Value of Wire # 1319 :: 0\n",
        19.753690719604492
    ],
    [
        "\t[input] Value of Wire # 1328 :: 0\n",
        19.753740787506104
    ],
    [
        "\t[input] Value of Wire # 1337 :: 0\n",
        19.753791570663452
    ],
    [
        "\t[input] Value of Wire # 1346 :: 0\n",
        19.753841638565063
    ],
    [
        "\t[input] Value of Wire # 1355 :: 0\n",
        19.75389075279236
    ],
    [
        "\t[input] Value of Wire # 1364 :: 0\n",
        19.75394034385681
    ],
    [
        "\t[input] Value of Wire # 1373 :: 0\n",
        19.753989934921265
    ],
    [
        "\t[input] Value of Wire # 1382 :: 0\n",
        19.754037380218506
    ],
    [
        "\t[input] Value of Wire # 1391 :: 0\n",
        19.75408387184143
    ],
    [
        "\t[input] Value of Wire # 1400 :: 0\n",
        19.754129886627197
    ],
    [
        "\t[input] Value of Wire # 1409 :: 0\n",
        19.754178762435913
    ],
    [
        "\t[input] Value of Wire # 1418 :: 0\n",
        19.75422954559326
    ],
    [
        "\t[input] Value of Wire # 1427 :: 0\n",
        19.754278898239136
    ],
    [
        "\t[input] Value of Wire # 1436 :: 0\n",
        19.754327535629272
    ],
    [
        "\t[input] Value of Wire # 1445 :: 0\n",
        19.754376888275146
    ],
    [
        "\t[input] Value of Wire # 1454 :: 0\n",
        19.754428148269653
    ],
    [
        "\t[input] Value of Wire # 1463 :: 86\n",
        19.754478454589844
    ],
    [
        "\t[input] Value of Wire # 1472 :: 18\n",
        19.75452709197998
    ],
    [
        "\t[input] Value of Wire # 1481 :: 1e\n",
        19.754576206207275
    ],
    [
        "\t[input] Value of Wire # 1490 :: b4\n",
        19.754624605178833
    ],
    [
        "\t[input] Value of Wire # 1499 :: c8\n",
        19.75467300415039
    ],
    [
        "\t[input] Value of Wire # 1508 :: 95\n",
        19.754718542099
    ],
    [
        "\t[input] Value of Wire # 1517 :: dd\n",
        19.754767417907715
    ],
    [
        "\t[input] Value of Wire # 1526 :: 89\n",
        19.75481605529785
    ],
    [
        "\t[input] Value of Wire # 1535 :: e0\n",
        19.754864931106567
    ],
    [
        "\t[input] Value of Wire # 1544 :: 23\n",
        19.75491428375244
    ],
    [
        "\t[input] Value of Wire # 1553 :: bf\n",
        19.754962682724
    ],
    [
        "\t[input] Value of Wire # 1562 :: 41\n",
        19.75500750541687
    ],
    [
        "\t[input] Value of Wire # 1571 :: ab\n",
        19.755057096481323
    ],
    [
        "\t[input] Value of Wire # 1580 :: 54\n",
        19.755104064941406
    ],
    [
        "\t[input] Value of Wire # 1589 :: e1\n",
        19.755155324935913
    ],
    [
        "\t[input] Value of Wire # 1598 :: c4\n",
        19.75520372390747
    ],
    [
        "\t[input] Value of Wire # 1607 :: 3d\n",
        19.755257606506348
    ],
    [
        "\t[input] Value of Wire # 1616 :: 77\n",
        19.75530505180359
    ],
    [
        "\t[input] Value of Wire # 1625 :: d4\n",
        19.755351543426514
    ],
    [
        "\t[input] Value of Wire # 1634 :: 28\n",
        19.755398988723755
    ],
    [
        "\t[input] Value of Wire # 1643 :: b0\n",
        19.755444765090942
    ],
    [
        "\t[input] Value of Wire # 1652 :: 99\n",
        19.75549030303955
    ],
    [
        "\t[input] Value of Wire # 1661 :: 6a\n",
        19.75553560256958
    ],
    [
        "\t[input] Value of Wire # 1670 :: 46\n",
        19.75558090209961
    ],
    [
        "\t[input] Value of Wire # 1679 :: 28\n",
        19.755627393722534
    ],
    [
        "\t[input] Value of Wire # 1688 :: 27\n",
        19.755675077438354
    ],
    [
        "\t[input] Value of Wire # 1697 :: 62\n",
        19.75572633743286
    ],
    [
        "\t[input] Value of Wire # 1706 :: 5e\n",
        19.755774974822998
    ],
    [
        "\t[input] Value of Wire # 1715 :: 12\n",
        19.755821466445923
    ],
    [
        "\t[input] Value of Wire # 1724 :: 3b\n",
        19.755867958068848
    ],
    [
        "\t[input] Value of Wire # 1733 :: 1c\n",
        19.75591516494751
    ],
    [
        "\t[input] Value of Wire # 1742 :: dd\n",
        19.75596523284912
    ],
    [
        "\t[input] Value of Wire # 1751 :: b\n",
        19.756011962890625
    ],
    [
        "\t[input] Value of Wire # 1760 :: 3b\n",
        19.756073474884033
    ],
    [
        "\t[input] Value of Wire # 1769 :: 89\n",
        19.756130933761597
    ],
    [
        "\t[input] Value of Wire # 1778 :: 30\n",
        19.75618052482605
    ],
    [
        "\t[input] Value of Wire # 1787 :: 2f\n",
        19.756226301193237
    ],
    [
        "\t[input] Value of Wire # 1788 :: 70\n",
        19.756271839141846
    ],
    [
        "\t[input] Value of Wire # 1789 :: 69\n",
        19.756317615509033
    ],
    [
        "\t[input] Value of Wire # 1790 :: 70\n",
        19.756362676620483
    ],
    [
        "\t[input] Value of Wire # 1791 :: 70\n",
        19.756407499313354
    ],
    [
        "\t[input] Value of Wire # 1792 :: 6f\n",
        19.756452560424805
    ],
    [
        "\t[input] Value of Wire # 1793 :: d\n",
        19.756497621536255
    ],
    [
        "\t[input] Value of Wire # 1794 :: a\n",
        19.75657296180725
    ],
    [
        "\t[input] Value of Wire # 1795 :: 0\n",
        19.756617784500122
    ],
    [
        "\t[input] Value of Wire # 1796 :: 0\n",
        19.7566659450531
    ],
    [
        "\t[input] Value of Wire # 1797 :: 0\n",
        19.75671124458313
    ],
    [
        "\t[input] Value of Wire # 1798 :: 0\n",
        19.756758451461792
    ],
    [
        "\t[input] Value of Wire # 1799 :: 0\n",
        19.756804943084717
    ],
    [
        "\t[input] Value of Wire # 1800 :: 0\n",
        19.756852626800537
    ],
    [
        "\t[input] Value of Wire # 1801 :: 0\n",
        19.75690197944641
    ],
    [
        "\t[input] Value of Wire # 1802 :: 0\n",
        19.75695276260376
    ],
    [
        "\t[input] Value of Wire # 1803 :: 0\n",
        19.757002115249634
    ],
    [
        "\t[input] Value of Wire # 1804 :: 0\n",
        19.757057428359985
    ],
    [
        "\t[input] Value of Wire # 1805 :: 0\n",
        19.75710439682007
    ],
    [
        "\t[input] Value of Wire # 1806 :: 0\n",
        19.75714921951294
    ],
    [
        "Circuit Output: \n",
        19.757205963134766
    ],
    [
        "474554202f66756e6374696f6e2f72756e20485454502f312e310d0a436c69656e742d546f6b656e3a20617364666768630d0a486f73743a206f6f0d0a4163636570742d456e636f64696e673a20746578742f706c61696e0d0a0d0a6a2cd70f3a7fae8e64992972fe37365e6fa984b739c17d6bd67c08208153a16441758ff00c1dc5ef45df3fa6056c4f46a7cba6cd932b141d3ecb5787b209beb52a39a93c14d0ee892867d3eaff1f6faf71670b52c50226b994165215bab03e5c42bdc48c078a79bd2927aeee9d9d4eca9f7b9a6c088ee5a52e07b5a89db8aeb1a95de741894a8597028511301a59eee62bc3f81daa8c39b6573ee578f1e062c7ef193246d7fc29985886e66f3631b5d43364a98c9800d6f5d110256921a659da801b5ebdc6909b306a09153e93974b6ed2352a983b0b2d5ff751555e3ddc8e9072ae1ef067f9349373047b007206b7a3338e1098cf9eea08c36548dd098d30e52d5b4ed8771997afe84af42c116ebe7e9ed6cd0b13b410cfebab424d1ca1846e423cfa244b68a532a9d4492c39ed09e3dc8cd6393afd83bcf6ab6d5d432cbb9a044896206c0addfae190999ac0478b4c0a75112f9140f5b5ab6ab8e275c3f029a997b7655ff4ad3524773d96d45527a0f7e63502a3fbe7298598b022897a7c35cebd27e3a3008d3e7a63b0bb62c2ce23792d211adbb1a7c7\n",
        19.757263898849487
    ],
    [
        "e61ff9ed60a98adb2d0ac1aabfa8bf2f\n",
        19.75731372833252
    ],
    [
        "819d6f7e7b13c771d0810f7a\n",
        19.757363319396973
    ],
    [
        "1ee3a591c338ecc081ff11ceceeac3d0\n",
        19.757412672042847
    ],
    [
        "1031a2b92f7229c40fe8a4a7\n",
        19.75745940208435
    ],
    [
        "98aae47690ba155be22f5379aee364324cc38ed446475d4d970508993d7f541d\n",
        19.757509469985962
    ],
    [
        "b236b52ef42c913c13d0bbf126b9a63d8c911ad0e8c1594a73a60b63a0e46cae\n",
        19.757556915283203
    ],
    [
        "Evaluation Done \n",
        19.757601737976074
    ],
    [
        "Sample Run: run61 finished!\n",
        19.757651329040527
    ],
    [
        "Done",
        19.784157752990723
    ]
]