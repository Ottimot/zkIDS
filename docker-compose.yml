services:
    serverprover:
        image: serverprover
        build:
            context: ./
            dockerfile: serverprover.Dockerfile
        working_dir: /home/ServerProver
        env_file: 
            - vars.env
        command: bash -c "python init_serverp.py"
        cap_add:
            - NET_ADMIN
        stdin_open: true   # docker run -i
        tty: true          # docker run -t
        sysctls:
            - net.ipv4.tcp_timestamps=0
        networks:
            default:
                ipv4_address: 172.19.0.5
        volumes:
            - tests:/home/Tests
   
    middlebox:
        image: middlebox
        build: 
            context: ./
            dockerfile: middlebox.Dockerfile
        working_dir: /home/Middlebox
        env_file: 
            - vars.env
        #change the eth0 interface in case of differences
        command: bash -c "python capture.py eth0 &! python init_mb$${TEST}.py $${MB_ARGS}"
        cap_add:
            - NET_ADMIN
            - NET_RAW
        stdin_open: true # docker run -i
        tty: true        # docker run -t
        sysctls:
            - net.ipv4.ip_forward=1
            - net.ipv4.tcp_timestamps=0
        networks:
            default:
                ipv4_address: 172.19.0.2
        volumes:
            - tests:/home/Tests

    client:
        image: client
        build: 
            context: ./
            dockerfile: client.Dockerfile
        working_dir: /home/Client
        env_file: 
            - vars.env
        #forward traffic via the middlebox
        command: bash -c "ip route add 172.19.0.4 via 172.19.0.2 dev eth0 src 172.19.0.3 && python init_cli$${TEST}.py $${RUN} docker"
        stdin_open: true # docker run -i
        tty: true        # docker run -t
        cap_add:
            - NET_ADMIN
        networks:   
            default:
                ipv4_address: 172.19.0.3
        volumes:
            - tests:/home/Tests
    server:
        image: server
        build: 
            context: ./
            dockerfile: server.Dockerfile
        stdin_open: true
        tty: true
        #forward traffic via the middlebox
        command: bash -c "ip route add 172.19.0.3 via 172.19.0.2 dev eth0 src 172.19.0.4 && nginx -g 'daemon off;'"
        cap_add:
            - NET_ADMIN
        networks:
            default:
                ipv4_address: 172.19.0.4
        
networks:
    default:
        ipam:
            config:
                - subnet: 172.19.0.0/16
volumes:
    tests:
    
