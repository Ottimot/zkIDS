[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle_Token >\n",
        0.025014877319335938,
        0.02
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.5742743015289307,
        2.16
    ],
    [
        "Num of variable reads = 1480\n",
        0.581423282623291,
        2.19
    ],
    [
        "Num of conditional writes = 0\n",
        0.5867269039154053,
        2.2
    ],
    [
        "Num of words per element = 1\n",
        0.5908405780792236,
        2.22
    ],
    [
        "Num of variable writes = 0\n",
        0.5943818092346191,
        2.23
    ],
    [
        "num of accesses = 1480\n",
        0.5975551605224609,
        2.24
    ],
    [
        "Packing Option = 1\n",
        0.6003868579864502,
        2.2600000000000002
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.6031100749969482,
        2.2600000000000002
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.6058952808380127,
        2.2800000000000002
    ],
    [
        "done with read only memory solutions!\n",
        1.2363026142120361,
        3.35
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.2485637664794922,
        3.37
    ],
    [
        "Num of variable reads = 128\n",
        1.2581815719604492,
        3.38
    ],
    [
        "Num of conditional writes = 0\n",
        1.2666516304016113,
        3.39
    ],
    [
        "Num of words per element = 1\n",
        1.2739615440368652,
        3.39
    ],
    [
        "Num of variable writes = 0\n",
        1.2812089920043945,
        3.4
    ],
    [
        "num of accesses = 128\n",
        1.2887818813323975,
        3.41
    ],
    [
        "Packing Option = 1\n",
        1.2978301048278809,
        3.43
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.3075025081634521,
        3.43
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.316643238067627,
        3.45
    ],
    [
        "Num of variable reads = 520\n",
        1.3256843090057373,
        3.45
    ],
    [
        "Num of conditional writes = 0\n",
        1.3343665599822998,
        3.46
    ],
    [
        "Num of words per element = 1\n",
        1.342926025390625,
        3.47
    ],
    [
        "Num of variable writes = 0\n",
        1.3513102531433105,
        3.48
    ],
    [
        "num of accesses = 520\n",
        1.3595914840698242,
        3.4899999999999998
    ],
    [
        "Packing Option = 1\n",
        1.3676655292510986,
        3.4899999999999998
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.3758134841918945,
        3.5
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.3842206001281738,
        3.51
    ],
    [
        "done with read only memory solutions!\n",
        1.721944808959961,
        3.88
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.735304594039917,
        3.9
    ],
    [
        "Num of variable reads = 128\n",
        1.7453889846801758,
        3.91
    ],
    [
        "Num of conditional writes = 0\n",
        1.7543911933898926,
        3.92
    ],
    [
        "Num of words per element = 1\n",
        1.7630717754364014,
        3.93
    ],
    [
        "Num of variable writes = 0\n",
        1.771660327911377,
        3.94
    ],
    [
        "num of accesses = 128\n",
        1.7801907062530518,
        3.95
    ],
    [
        "Packing Option = 1\n",
        1.7883780002593994,
        3.96
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.7966063022613525,
        3.96
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8049492835998535,
        3.97
    ],
    [
        "Num of variable reads = 71\n",
        1.814363718032837,
        3.9899999999999998
    ],
    [
        "Num of conditional writes = 0\n",
        1.8243160247802734,
        4.0
    ],
    [
        "Num of words per element = 1\n",
        1.8339636325836182,
        4.01
    ],
    [
        "Num of variable writes = 0\n",
        1.8432238101959229,
        4.0200000000000005
    ],
    [
        "num of accesses = 71\n",
        1.8520476818084717,
        4.03
    ],
    [
        "Packing Option = 1\n",
        1.8617873191833496,
        4.04
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.8704452514648438,
        4.05
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8789699077606201,
        4.05
    ],
    [
        "Num of variable reads = 128\n",
        1.8873679637908936,
        4.0600000000000005
    ],
    [
        "Num of conditional writes = 0\n",
        1.8957369327545166,
        4.07
    ],
    [
        "Num of words per element = 1\n",
        1.9040493965148926,
        4.08
    ],
    [
        "Num of variable writes = 0\n",
        1.9123172760009766,
        4.09
    ],
    [
        "num of accesses = 128\n",
        1.9205350875854492,
        4.1000000000000005
    ],
    [
        "Packing Option = 0\n",
        1.9286978244781494,
        4.11
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.9367921352386475,
        4.11
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9460563659667969,
        4.15
    ],
    [
        "Num of variable reads = 71\n",
        1.9569673538208008,
        4.17
    ],
    [
        "Num of conditional writes = 0\n",
        1.9676058292388916,
        4.19
    ],
    [
        "Num of words per element = 1\n",
        1.9780032634735107,
        4.21
    ],
    [
        "Num of variable writes = 0\n",
        1.9880785942077637,
        4.22
    ],
    [
        "num of accesses = 71\n",
        1.9977684020996094,
        4.23
    ],
    [
        "Packing Option = 1\n",
        2.007371425628662,
        4.24
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.017343521118164,
        4.26
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.029228448867798,
        4.2700000000000005
    ],
    [
        "Num of variable reads = 128\n",
        2.0387141704559326,
        4.28
    ],
    [
        "Num of conditional writes = 0\n",
        2.047355890274048,
        4.29
    ],
    [
        "Num of words per element = 1\n",
        2.0557703971862793,
        4.3
    ],
    [
        "Num of variable writes = 0\n",
        2.0641119480133057,
        4.3100000000000005
    ],
    [
        "num of accesses = 128\n",
        2.073223352432251,
        4.33
    ],
    [
        "Packing Option = 0\n",
        2.082893133163452,
        4.34
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.0922553539276123,
        4.3500000000000005
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.1015679836273193,
        4.36
    ],
    [
        "Num of variable reads = 0\n",
        2.11112904548645,
        4.38
    ],
    [
        "Num of conditional writes = 0\n",
        2.120551824569702,
        4.4
    ],
    [
        "Num of words per element = 1\n",
        2.129899263381958,
        4.41
    ],
    [
        "Num of variable writes = 0\n",
        2.1394882202148438,
        4.430000000000001
    ],
    [
        "num of accesses = 0\n",
        2.1490402221679688,
        4.45
    ],
    [
        "Packing Option = 0\n",
        2.158778667449951,
        4.46
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.168879985809326,
        4.49
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.1788313388824463,
        4.5
    ],
    [
        "Num of variable reads = 15080\n",
        2.1890945434570312,
        4.53
    ],
    [
        "Num of conditional writes = 0\n",
        2.1996943950653076,
        4.55
    ],
    [
        "Num of words per element = 1\n",
        2.209792375564575,
        4.5600000000000005
    ],
    [
        "Num of variable writes = 0\n",
        2.219564914703369,
        4.58
    ],
    [
        "num of accesses = 15080\n",
        2.2281486988067627,
        4.59
    ],
    [
        "Packing Option = 1\n",
        2.236485004425049,
        4.61
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.244765043258667,
        4.62
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.252973794937134,
        4.63
    ],
    [
        "done with read only memory solutions!\n",
        2.2628536224365234,
        4.68
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.2762842178344727,
        4.72
    ],
    [
        "Num of variable reads = 5\n",
        2.2903239727020264,
        4.77
    ],
    [
        "Num of conditional writes = 0\n",
        2.3003668785095215,
        4.79
    ],
    [
        "Num of words per element = 1\n",
        2.310964584350586,
        4.82
    ],
    [
        "Num of variable writes = 0\n",
        2.321791648864746,
        4.87
    ],
    [
        "num of accesses = 5\n",
        2.332807779312134,
        4.92
    ],
    [
        "Packing Option = 1\n",
        2.3439292907714844,
        4.95
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.355062484741211,
        4.98
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.366563320159912,
        5.03
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle_Token >\n",
        2.3781750202178955,
        5.07
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle_Token >  \n",
        6.9335057735443115,
        31.7
    ],
    [
        " \t Total Number of Constraints :  2539752\n",
        6.97062611579895,
        31.939999999999998
    ],
    [
        "\n",
        7.0082032680511475,
        32.2
    ],
    [
        "Instruction queue size: 11500133\n",
        7.048783540725708,
        32.49
    ],
    [
        "Normal execution\n",
        17.238062143325806,
        43.68
    ],
    [
        "Running Sample Run: run15001\n",
        17.26546597480774,
        43.69
    ],
    [
        "tls_data.txt\n",
        17.289395093917847,
        43.7
    ],
    [
        "merkle_data.txt\n",
        17.31315016746521,
        43.71
    ],
    [
        "asdfghc\n",
        17.337708711624146,
        43.76
    ],
    [
        "97\n",
        17.36520290374756,
        43.870000000000005
    ],
    [
        "115\n",
        17.391991138458252,
        43.92
    ],
    [
        "100\n",
        17.41911554336548,
        44.0
    ],
    [
        "102\n",
        17.44463586807251,
        44.0
    ],
    [
        "103\n",
        17.472564458847046,
        44.03
    ],
    [
        "7\n",
        17.500527143478394,
        44.050000000000004
    ],
    [
        "Evaluating Input on the circuit \n",
        17.527483463287354,
        44.08
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        17.55461621284485,
        44.11
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        17.582417488098145,
        44.14
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        17.611814737319946,
        44.18
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        17.642415285110474,
        44.26
    ],
    [
        "\t[input] Value of Wire # 21 :: 7\n",
        17.67321252822876,
        44.33
    ],
    [
        "\t[input] Value of Wire # 22 :: 297ca9c14951fbaad217dc76566893385ae3ed90b54baf41c6ba205e35a0b646\n",
        17.705706357955933,
        44.410000000000004
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        17.77902841567993,
        45.06
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        17.809142112731934,
        45.09
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        17.839849948883057,
        45.120000000000005
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        17.86907124519348,
        45.160000000000004
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        17.897217512130737,
        45.2
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        17.974153995513916,
        45.85
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        18.00315284729004,
        45.88
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        18.041610956192017,
        46.03
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        18.07777714729309,
        46.18
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        18.105325937271118,
        46.21
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        18.13272261619568,
        46.24
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        18.178200006484985,
        46.47
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        18.20524525642395,
        46.5
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        18.232481002807617,
        46.53
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        18.268386125564575,
        46.660000000000004
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        18.306894063949585,
        46.82
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        18.334948301315308,
        46.85
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        18.362470626831055,
        46.88
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        18.38982367515564,
        46.900000000000006
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        18.439721822738647,
        47.2
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        18.46762776374817,
        47.24
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        18.493794918060303,
        47.26
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        18.51996421813965,
        47.3
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        18.54503560066223,
        47.33
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        18.56962251663208,
        47.38
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        18.59690570831299,
        47.47
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        18.626012563705444,
        47.55
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        18.655372142791748,
        47.64
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        18.685624599456787,
        47.739999999999995
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        18.713217973709106,
        47.78
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        18.739131689071655,
        47.79
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        18.766388654708862,
        47.809999999999995
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        18.790671348571777,
        47.82
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        18.81512761116028,
        47.82
    ],
    [
        "\t[input] Value of Wire # 329 :: 2f\n",
        18.839680671691895,
        47.82
    ],
    [
        "\t[input] Value of Wire # 338 :: d4\n",
        18.865591526031494,
        47.839999999999996
    ],
    [
        "\t[input] Value of Wire # 347 :: 0\n",
        18.889642477035522,
        47.85
    ],
    [
        "\t[input] Value of Wire # 356 :: 0\n",
        18.913737058639526,
        47.85
    ],
    [
        "\t[input] Value of Wire # 365 :: 0\n",
        18.938243865966797,
        47.85
    ],
    [
        "\t[input] Value of Wire # 374 :: 0\n",
        18.962520837783813,
        47.86
    ],
    [
        "\t[input] Value of Wire # 383 :: 0\n",
        18.986875295639038,
        47.86
    ],
    [
        "\t[input] Value of Wire # 392 :: 0\n",
        19.01200795173645,
        47.87
    ],
    [
        "\t[input] Value of Wire # 401 :: 0\n",
        19.036197900772095,
        47.879999999999995
    ],
    [
        "\t[input] Value of Wire # 410 :: 0\n",
        19.060941219329834,
        47.879999999999995
    ],
    [
        "\t[input] Value of Wire # 419 :: 0\n",
        19.08543300628662,
        47.879999999999995
    ],
    [
        "\t[input] Value of Wire # 428 :: 0\n",
        19.109727144241333,
        47.879999999999995
    ],
    [
        "\t[input] Value of Wire # 437 :: 0\n",
        19.134127140045166,
        47.89
    ],
    [
        "\t[input] Value of Wire # 446 :: 0\n",
        19.159417867660522,
        47.89
    ],
    [
        "\t[input] Value of Wire # 455 :: 0\n",
        19.184906482696533,
        47.91
    ],
    [
        "\t[input] Value of Wire # 464 :: 0\n",
        19.209407091140747,
        47.91
    ],
    [
        "\t[input] Value of Wire # 473 :: 0\n",
        19.236042737960815,
        47.94
    ],
    [
        "\t[input] Value of Wire # 482 :: 0\n",
        19.2630672454834,
        47.97
    ],
    [
        "\t[input] Value of Wire # 491 :: 0\n",
        19.292683839797974,
        48.07
    ],
    [
        "\t[input] Value of Wire # 500 :: 0\n",
        19.320276975631714,
        48.11
    ],
    [
        "\t[input] Value of Wire # 509 :: 0\n",
        19.34767174720764,
        48.129999999999995
    ],
    [
        "Done",
        19.542238235473633,
        48.16
    ]
]