[
    [
        "Verification starts now",
        2.384185791015625e-07
    ],
    [
        "Proof received",
        0.00036597251892089844
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < HTTP_Merkle >\n",
        0.0259244441986084,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.4471092224121094,
        1.65
    ],
    [
        "Num of variable reads = 1480\n",
        0.4536263942718506,
        1.68
    ],
    [
        "Num of conditional writes = 0\n",
        0.45940184593200684,
        1.7
    ],
    [
        "Num of words per element = 1\n",
        0.46430182456970215,
        1.72
    ],
    [
        "Num of variable writes = 0\n",
        0.46840620040893555,
        1.73
    ],
    [
        "num of accesses = 1480\n",
        0.4721951484680176,
        1.74
    ],
    [
        "Packing Option = 1\n",
        0.47585368156433105,
        1.77
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.47870397567749023,
        1.78
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.482372522354126,
        1.7899999999999998
    ],
    [
        "done with read only memory solutions!\n",
        1.0881750583648682,
        2.83
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.0954279899597168,
        2.8499999999999996
    ],
    [
        "Num of variable reads = 128\n",
        1.1011793613433838,
        2.8600000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.106619119644165,
        2.8600000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.1121103763580322,
        2.8600000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.1172425746917725,
        2.87
    ],
    [
        "num of accesses = 128\n",
        1.1222357749938965,
        2.88
    ],
    [
        "Packing Option = 1\n",
        1.1272315979003906,
        2.88
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.1322474479675293,
        2.88
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1373162269592285,
        2.8899999999999997
    ],
    [
        "Num of variable reads = 520\n",
        1.1423168182373047,
        2.9000000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        1.1472859382629395,
        2.9000000000000004
    ],
    [
        "Num of words per element = 1\n",
        1.1521849632263184,
        2.9000000000000004
    ],
    [
        "Num of variable writes = 0\n",
        1.157135009765625,
        2.91
    ],
    [
        "num of accesses = 520\n",
        1.1622462272644043,
        2.92
    ],
    [
        "Packing Option = 1\n",
        1.1675260066986084,
        2.92
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1724960803985596,
        2.92
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.1774697303771973,
        2.9299999999999997
    ],
    [
        "done with read only memory solutions!\n",
        1.573695182800293,
        3.36
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5807774066925049,
        3.37
    ],
    [
        "Num of variable reads = 128\n",
        1.5865774154663086,
        3.38
    ],
    [
        "Num of conditional writes = 0\n",
        1.5916357040405273,
        3.38
    ],
    [
        "Num of words per element = 1\n",
        1.596595048904419,
        3.38
    ],
    [
        "Num of variable writes = 0\n",
        1.601583480834961,
        3.39
    ],
    [
        "num of accesses = 128\n",
        1.6066482067108154,
        3.4
    ],
    [
        "Packing Option = 1\n",
        1.6118578910827637,
        3.4
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.616727590560913,
        3.4
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6216068267822266,
        3.41
    ],
    [
        "Num of variable reads = 71\n",
        1.6265008449554443,
        3.42
    ],
    [
        "Num of conditional writes = 0\n",
        1.631397008895874,
        3.42
    ],
    [
        "Num of words per element = 1\n",
        1.6364636421203613,
        3.42
    ],
    [
        "Num of variable writes = 0\n",
        1.6413803100585938,
        3.43
    ],
    [
        "num of accesses = 71\n",
        1.6463298797607422,
        3.43
    ],
    [
        "Packing Option = 1\n",
        1.6512668132781982,
        3.44
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.6561203002929688,
        3.44
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.660965919494629,
        3.45
    ],
    [
        "Num of variable reads = 128\n",
        1.6658284664154053,
        3.45
    ],
    [
        "Num of conditional writes = 0\n",
        1.6706321239471436,
        3.46
    ],
    [
        "Num of words per element = 1\n",
        1.6754775047302246,
        3.46
    ],
    [
        "Num of variable writes = 0\n",
        1.6806261539459229,
        3.47
    ],
    [
        "num of accesses = 128\n",
        1.685997486114502,
        3.47
    ],
    [
        "Packing Option = 0\n",
        1.6908988952636719,
        3.48
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6960117816925049,
        3.48
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7014966011047363,
        3.49
    ],
    [
        "Num of variable reads = 71\n",
        1.7070038318634033,
        3.49
    ],
    [
        "Num of conditional writes = 0\n",
        1.7124886512756348,
        3.5
    ],
    [
        "Num of words per element = 1\n",
        1.7175238132476807,
        3.5100000000000002
    ],
    [
        "Num of variable writes = 0\n",
        1.7224254608154297,
        3.5100000000000002
    ],
    [
        "num of accesses = 71\n",
        1.727311134338379,
        3.5100000000000002
    ],
    [
        "Packing Option = 1\n",
        1.7321183681488037,
        3.52
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.7369492053985596,
        3.52
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7418241500854492,
        3.53
    ],
    [
        "Num of variable reads = 128\n",
        1.746751070022583,
        3.53
    ],
    [
        "Num of conditional writes = 0\n",
        1.7517280578613281,
        3.54
    ],
    [
        "Num of words per element = 1\n",
        1.7566659450531006,
        3.54
    ],
    [
        "Num of variable writes = 0\n",
        1.7615597248077393,
        3.55
    ],
    [
        "num of accesses = 128\n",
        1.766435146331787,
        3.55
    ],
    [
        "Packing Option = 0\n",
        1.7712764739990234,
        3.56
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.776106595993042,
        3.56
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7808997631072998,
        3.57
    ],
    [
        "Num of variable reads = 0\n",
        1.7856762409210205,
        3.57
    ],
    [
        "Num of conditional writes = 0\n",
        1.7905538082122803,
        3.58
    ],
    [
        "Num of words per element = 1\n",
        1.795543909072876,
        3.59
    ],
    [
        "Num of variable writes = 0\n",
        1.8006551265716553,
        3.6
    ],
    [
        "num of accesses = 0\n",
        1.8059039115905762,
        3.61
    ],
    [
        "Packing Option = 0\n",
        1.8113656044006348,
        3.62
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.8168351650238037,
        3.63
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8222365379333496,
        3.64
    ],
    [
        "Num of variable reads = 5160\n",
        1.8275585174560547,
        3.65
    ],
    [
        "Num of conditional writes = 0\n",
        1.8327689170837402,
        3.65
    ],
    [
        "Num of words per element = 1\n",
        1.8379125595092773,
        3.66
    ],
    [
        "Num of variable writes = 0\n",
        1.8429718017578125,
        3.66
    ],
    [
        "num of accesses = 5160\n",
        1.8480398654937744,
        3.67
    ],
    [
        "Packing Option = 1\n",
        1.8530817031860352,
        3.68
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.8581738471984863,
        3.69
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.8634655475616455,
        3.7
    ],
    [
        "done with read only memory solutions!\n",
        2.065171241760254,
        4.04
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.0732412338256836,
        4.06
    ],
    [
        "[2nd Phase] Running Circuit Generator for < HTTP_Merkle >\n",
        2.0804388523101807,
        4.08
    ],
    [
        "Circuit Generation Done for < HTTP_Merkle >  \n",
        4.620057821273804,
        19.09
    ],
    [
        " \t Total Number of Constraints :  1782787\n",
        4.635273694992065,
        19.150000000000002
    ],
    [
        "\n",
        4.647851943969727,
        19.17
    ],
    [
        "Instruction queue size: 5719702\n",
        4.660786151885986,
        19.21
    ],
    [
        "Generate public inputs only\n",
        9.451341152191162,
        23.86
    ],
    [
        "Generating public parameters for: 7f7313b6ce64dac54edd6b82ba04cb138fced30758e9a375cbe04888d95a23361\n",
        9.462475538253784,
        23.87
    ],
    [
        "../Middlebox/files/transcript_7f7313b6ce64dac54edd6b82ba04cb138fced30758e9a375cbe04888d95a23361.txt\n",
        9.470979690551758,
        23.880000000000003
    ],
    [
        "../Middlebox/files/merkle_proof_pub.txt\n",
        9.479222297668457,
        23.89
    ],
    [
        "Url assignment done\n",
        9.487390756607056,
        23.89
    ],
    [
        "Sample Run: 7f7313b6ce64dac54edd6b82ba04cb138fced30758e9a375cbe04888d95a23361 finished!\n",
        9.495546579360962,
        23.900000000000002
    ],
    [
        "1\n",
        9.50398302078247,
        23.92
    ],
    [
        "1768\n",
        9.513657331466675,
        23.94
    ],
    [
        "264\n",
        9.523024320602417,
        23.950000000000003
    ],
    [
        "4\n",
        9.533640146255493,
        23.96
    ],
    [
        "11\n",
        9.54328989982605,
        23.970000000000002
    ],
    [
        "18765087434070279118326479840333070550893160322590316806400066067763149452870\n",
        9.552757978439331,
        23.98
    ],
    [
        "76\n",
        9.562696695327759,
        23.990000000000002
    ],
    [
        "5\n",
        9.572081565856934,
        24.0
    ],
    [
        "131\n",
        9.581417083740234,
        24.01
    ],
    [
        "9\n",
        9.590323209762573,
        24.02
    ],
    [
        "135\n",
        9.598968267440796,
        24.03
    ],
    [
        "4\n",
        9.663551807403564,
        24.03
    ],
    [
        "162\n",
        9.663707733154297,
        24.03
    ],
    [
        "102\n",
        9.663785219192505,
        24.03
    ],
    [
        "210\n",
        9.66385531425476,
        24.03
    ],
    [
        "97\n",
        9.6639244556427,
        24.03
    ],
    [
        "142\n",
        9.663989543914795,
        24.03
    ],
    [
        "198\n",
        9.66404104232788,
        24.03
    ],
    [
        "66\n",
        9.664100885391235,
        24.03
    ],
    [
        "107\n",
        9.664153814315796,
        24.03
    ],
    [
        "12\n",
        9.664206743240356,
        24.03
    ],
    [
        "79\n",
        9.664257764816284,
        24.03
    ],
    [
        "70\n",
        9.664309024810791,
        24.03
    ],
    [
        "217\n",
        9.664357662200928,
        24.03
    ],
    [
        "174\n",
        9.664407014846802,
        24.03
    ],
    [
        "236\n",
        9.664457321166992,
        24.03
    ],
    [
        "217\n",
        9.664507627487183,
        24.03
    ],
    [
        "1\n",
        9.664556503295898,
        24.03
    ],
    [
        "249\n",
        9.664605140686035,
        24.03
    ],
    [
        "29\n",
        9.664654016494751,
        24.03
    ],
    [
        "13\n",
        9.664779901504517,
        24.03
    ],
    [
        "142\n",
        9.664839744567871,
        24.03
    ],
    [
        "26\n",
        9.66489291191101,
        24.03
    ],
    [
        "232\n",
        9.664944171905518,
        24.03
    ],
    [
        "193\n",
        9.664995431900024,
        24.03
    ],
    [
        "69\n",
        9.665053129196167,
        24.03
    ],
    [
        "234\n",
        9.665105819702148,
        24.03
    ],
    [
        "183\n",
        9.665157794952393,
        24.03
    ],
    [
        "244\n",
        9.665208101272583,
        24.03
    ],
    [
        "79\n",
        9.665257692337036,
        24.03
    ],
    [
        "88\n",
        9.665307760238647,
        24.03
    ],
    [
        "119\n",
        9.66535758972168,
        24.03
    ],
    [
        "0\n",
        9.665407180786133,
        24.03
    ],
    [
        "0\n",
        9.665456056594849,
        24.03
    ],
    [
        "0\n",
        9.665504932403564,
        24.03
    ],
    [
        "0\n",
        9.665554523468018,
        24.03
    ],
    [
        "0\n",
        9.665603399276733,
        24.03
    ],
    [
        "0\n",
        9.665652751922607,
        24.03
    ],
    [
        "0\n",
        9.66570258140564,
        24.03
    ],
    [
        "0\n",
        9.665751457214355,
        24.03
    ],
    [
        "0\n",
        9.665802001953125,
        24.03
    ],
    [
        "0\n",
        9.665852785110474,
        24.03
    ],
    [
        "0\n",
        9.665906429290771,
        24.03
    ],
    [
        "0\n",
        9.665955305099487,
        24.03
    ],
    [
        "0\n",
        9.666004657745361,
        24.03
    ],
    [
        "0\n",
        9.666053771972656,
        24.03
    ],
    [
        "0\n",
        9.666103839874268,
        24.03
    ],
    [
        "0\n",
        9.66615343093872,
        24.03
    ],
    [
        "0\n",
        9.666203260421753,
        24.03
    ],
    [
        "0\n",
        9.666252613067627,
        24.03
    ],
    [
        "0\n",
        9.666306734085083,
        24.03
    ],
    [
        "0\n",
        9.666358470916748,
        24.03
    ],
    [
        "0\n",
        9.66640853881836,
        24.03
    ],
    [
        "0\n",
        9.666458368301392,
        24.03
    ],
    [
        "0\n",
        9.666507959365845,
        24.03
    ],
    [
        "0\n",
        9.66655707359314,
        24.03
    ],
    [
        "0\n",
        9.666606664657593,
        24.03
    ],
    [
        "0\n",
        9.666656494140625,
        24.03
    ],
    [
        "0\n",
        9.66670560836792,
        24.03
    ],
    [
        "0\n",
        9.666754245758057,
        24.03
    ],
    [
        "0\n",
        9.666802644729614,
        24.03
    ],
    [
        "0\n",
        9.666851282119751,
        24.03
    ],
    [
        "0\n",
        9.666901350021362,
        24.03
    ],
    [
        "0\n",
        9.66695523262024,
        24.03
    ],
    [
        "0\n",
        9.66700553894043,
        24.03
    ],
    [
        "0\n",
        9.667056322097778,
        24.03
    ],
    [
        "0\n",
        9.66710615158081,
        24.03
    ],
    [
        "0\n",
        9.667156219482422,
        24.03
    ],
    [
        "0\n",
        9.667206764221191,
        24.03
    ],
    [
        "0\n",
        9.667256355285645,
        24.03
    ],
    [
        "0\n",
        9.66730546951294,
        24.03
    ],
    [
        "0\n",
        9.667358636856079,
        24.03
    ],
    [
        "0\n",
        9.667409181594849,
        24.03
    ],
    [
        "0\n",
        9.667458534240723,
        24.03
    ],
    [
        "0\n",
        9.667508363723755,
        24.03
    ],
    [
        "0\n",
        9.667557954788208,
        24.03
    ],
    [
        "0\n",
        9.66760802268982,
        24.03
    ],
    [
        "0\n",
        9.667657852172852,
        24.03
    ],
    [
        "0\n",
        9.667707681655884,
        24.03
    ],
    [
        "0\n",
        9.667757034301758,
        24.03
    ],
    [
        "0\n",
        9.667806148529053,
        24.03
    ],
    [
        "0\n",
        9.66785478591919,
        24.03
    ],
    [
        "0\n",
        9.667903184890747,
        24.03
    ],
    [
        "0\n",
        9.667954683303833,
        24.03
    ],
    [
        "0\n",
        9.668009996414185,
        24.03
    ],
    [
        "0\n",
        9.668061017990112,
        24.03
    ],
    [
        "0\n",
        9.66811227798462,
        24.03
    ],
    [
        "0\n",
        9.668161869049072,
        24.03
    ],
    [
        "0\n",
        9.668210983276367,
        24.03
    ],
    [
        "0\n",
        9.668260097503662,
        24.03
    ],
    [
        "0\n",
        9.668309450149536,
        24.03
    ],
    [
        "0\n",
        9.66835904121399,
        24.03
    ],
    [
        "0\n",
        9.668440580368042,
        24.03
    ],
    [
        "0\n",
        9.668513774871826,
        24.03
    ],
    [
        "0\n",
        9.668586015701294,
        24.03
    ],
    [
        "0\n",
        9.668657064437866,
        24.03
    ],
    [
        "0\n",
        9.668728590011597,
        24.03
    ],
    [
        "0\n",
        9.66879940032959,
        24.03
    ],
    [
        "0\n",
        9.668869495391846,
        24.03
    ],
    [
        "0\n",
        9.668939590454102,
        24.03
    ],
    [
        "0\n",
        9.669009923934937,
        24.03
    ],
    [
        "0\n",
        9.669087409973145,
        24.03
    ],
    [
        "0\n",
        9.669161319732666,
        24.03
    ],
    [
        "0\n",
        9.669231653213501,
        24.03
    ],
    [
        "0\n",
        9.669301271438599,
        24.03
    ],
    [
        "0\n",
        9.669378519058228,
        24.03
    ],
    [
        "0\n",
        9.669429779052734,
        24.03
    ],
    [
        "0\n",
        9.669480085372925,
        24.03
    ],
    [
        "0\n",
        9.669530868530273,
        24.03
    ],
    [
        "0\n",
        9.669580459594727,
        24.03
    ],
    [
        "0\n",
        9.669629096984863,
        24.03
    ],
    [
        "0\n",
        9.669677972793579,
        24.03
    ],
    [
        "0\n",
        9.669727325439453,
        24.03
    ],
    [
        "0\n",
        9.66978144645691,
        24.03
    ],
    [
        "0\n",
        9.669833183288574,
        24.03
    ],
    [
        "0\n",
        9.669882774353027,
        24.03
    ],
    [
        "0\n",
        9.669932126998901,
        24.03
    ],
    [
        "0\n",
        9.669981002807617,
        24.03
    ],
    [
        "0\n",
        9.670029640197754,
        24.03
    ],
    [
        "0\n",
        9.67007827758789,
        24.03
    ],
    [
        "0\n",
        9.670127630233765,
        24.03
    ],
    [
        "0\n",
        9.670175552368164,
        24.03
    ],
    [
        "0\n",
        9.670225620269775,
        24.03
    ],
    [
        "0\n",
        9.67027473449707,
        24.03
    ],
    [
        "0\n",
        9.670323610305786,
        24.03
    ],
    [
        "0\n",
        9.670373439788818,
        24.03
    ],
    [
        "0\n",
        9.670426607131958,
        24.03
    ],
    [
        "0\n",
        9.670476198196411,
        24.03
    ],
    [
        "0\n",
        9.670525074005127,
        24.03
    ],
    [
        "0\n",
        9.670573711395264,
        24.03
    ],
    [
        "0\n",
        9.670622110366821,
        24.03
    ],
    [
        "0\n",
        9.670670509338379,
        24.03
    ],
    [
        "0\n",
        9.670719623565674,
        24.03
    ],
    [
        "0\n",
        9.67076849937439,
        24.03
    ],
    [
        "0\n",
        9.67082166671753,
        24.03
    ],
    [
        "0\n",
        9.670871496200562,
        24.03
    ],
    [
        "0\n",
        9.670920610427856,
        24.03
    ],
    [
        "0\n",
        9.670969009399414,
        24.03
    ],
    [
        "0\n",
        9.671017169952393,
        24.03
    ],
    [
        "0\n",
        9.67106556892395,
        24.03
    ],
    [
        "0\n",
        9.671114206314087,
        24.03
    ],
    [
        "0\n",
        9.671162605285645,
        24.03
    ],
    [
        "0\n",
        9.67121171951294,
        24.03
    ],
    [
        "0\n",
        9.671260833740234,
        24.03
    ],
    [
        "0\n",
        9.671309471130371,
        24.03
    ],
    [
        "0\n",
        9.671359062194824,
        24.03
    ],
    [
        "0\n",
        9.671408653259277,
        24.03
    ],
    [
        "0\n",
        9.67146110534668,
        24.03
    ],
    [
        "0\n",
        9.671510696411133,
        24.03
    ],
    [
        "0\n",
        9.67155933380127,
        24.03
    ],
    [
        "0\n",
        9.671608686447144,
        24.03
    ],
    [
        "0\n",
        9.67165756225586,
        24.03
    ],
    [
        "0\n",
        9.671706199645996,
        24.03
    ],
    [
        "0\n",
        9.671754837036133,
        24.03
    ],
    [
        "0\n",
        9.671804189682007,
        24.03
    ],
    [
        "0\n",
        9.671857357025146,
        24.03
    ],
    [
        "97\n",
        9.671907663345337,
        24.03
    ],
    [
        "195\n",
        9.671957015991211,
        24.03
    ],
    [
        "215\n",
        9.672006607055664,
        24.03
    ],
    [
        "8\n",
        9.67205548286438,
        24.03
    ],
    [
        "102\n",
        9.672104597091675,
        24.03
    ],
    [
        "228\n",
        9.67215371131897,
        24.03
    ],
    [
        "222\n",
        9.672203302383423,
        24.03
    ],
    [
        "219\n",
        9.67225193977356,
        24.03
    ],
    [
        "124\n",
        9.672301054000854,
        24.03
    ],
    [
        "254\n",
        9.67234992980957,
        24.03
    ],
    [
        "207\n",
        9.67239785194397,
        24.03
    ],
    [
        "215\n",
        9.672446966171265,
        24.03
    ],
    [
        "231\n",
        9.672498941421509,
        24.03
    ],
    [
        "202\n",
        9.672548294067383,
        24.03
    ],
    [
        "75\n",
        9.672597646713257,
        24.03
    ],
    [
        "59\n",
        9.67264699935913,
        24.03
    ],
    [
        "230\n",
        9.672696828842163,
        24.03
    ],
    [
        "175\n",
        9.672745943069458,
        24.03
    ],
    [
        "165\n",
        9.672794818878174,
        24.03
    ],
    [
        "204\n",
        9.672844409942627,
        24.03
    ],
    [
        "65\n",
        9.672897100448608,
        24.03
    ],
    [
        "251\n",
        9.67294716835022,
        24.03
    ],
    [
        "218\n",
        9.672995805740356,
        24.03
    ],
    [
        "167\n",
        9.67305850982666,
        24.03
    ],
    [
        "237\n",
        9.673113107681274,
        24.03
    ],
    [
        "36\n",
        9.673162937164307,
        24.03
    ],
    [
        "135\n",
        9.67321228981018,
        24.03
    ],
    [
        "191\n",
        9.673262357711792,
        24.03
    ],
    [
        "152\n",
        9.673311948776245,
        24.03
    ],
    [
        "202\n",
        9.673361539840698,
        24.03
    ],
    [
        "165\n",
        9.67341160774231,
        24.03
    ],
    [
        "108\n",
        9.673461198806763,
        24.03
    ],
    [
        "146\n",
        9.673510789871216,
        24.03
    ],
    [
        "220\n",
        9.673564672470093,
        24.03
    ],
    [
        "109\n",
        9.673614978790283,
        24.03
    ],
    [
        "50\n",
        9.673664093017578,
        24.03
    ],
    [
        "112\n",
        9.67371392250061,
        24.03
    ],
    [
        "108\n",
        9.673763036727905,
        24.03
    ],
    [
        "97\n",
        9.673811912536621,
        24.03
    ],
    [
        "99\n",
        9.673860788345337,
        24.03
    ],
    [
        "101\n",
        9.673909902572632,
        24.03
    ],
    [
        "104\n",
        9.673962831497192,
        24.03
    ],
    [
        "111\n",
        9.674014329910278,
        24.03
    ],
    [
        "108\n",
        9.67406439781189,
        24.03
    ],
    [
        "100\n",
        9.674113750457764,
        24.03
    ],
    [
        "101\n",
        9.674163579940796,
        24.03
    ],
    [
        "114\n",
        9.674214363098145,
        24.03
    ],
    [
        "13\n",
        9.674264192581177,
        24.03
    ],
    [
        "10\n",
        9.67431354522705,
        24.03
    ],
    [
        "0\n",
        9.67436408996582,
        24.03
    ],
    [
        "0\n",
        9.674413204193115,
        24.03
    ],
    [
        "0\n",
        9.674463510513306,
        24.03
    ],
    [
        "0\n",
        9.67451286315918,
        24.03
    ],
    [
        "0\n",
        9.674561977386475,
        24.03
    ],
    [
        "0\n",
        9.674614191055298,
        24.03
    ],
    [
        "0\n",
        9.674663782119751,
        24.03
    ],
    [
        "Done",
        10.105506181716919,
        24.03
    ],
    [
        "Reset time counters for profiling\n",
        10.109997749328613,
        24.03
    ],
    [
        "Verifying proof...\n",
        10.110865116119385,
        24.03
    ],
    [
        "files/verify.7f7313b6ce64dac54edd6b82ba04cb138fced30758e9a375cbe04888d95a2336.1.bin\n",
        10.111633777618408,
        24.03
    ],
    [
        "(enter) Parsing and Evaluating the circuit \t[             ]\t(0.0008s x1.00 from start)\n",
        10.112403869628906,
        24.03
    ],
    [
        "(leave) Parsing and Evaluating the circuit \t[6.1946s x1.00]\t(6.1954s x1.00 from start)\n",
        16.30464267730713,
        30.22
    ],
    [
        "Translating Constraints ... \n",
        16.307047128677368,
        30.22
    ],
    [
        "\tConstraint translation done\n",
        33.21284866333008,
        46.97
    ],
    [
        "\tMemory usage for constraint translation: 1758 MB\n",
        33.23483347892761,
        46.97
    ],
    [
        "Note: Protoboard Not Satisfied .. \n",
        33.254432916641235,
        47.04
    ],
    [
        "Assignment of values done .. \n",
        33.273709774017334,
        47.11
    ],
    [
        "Example created!\n",
        33.297667026519775,
        47.129999999999995
    ],
    [
        "Reading verification key (preprocessed)...\n",
        33.32477068901062,
        47.16
    ],
    [
        "Reading proof...\n",
        33.348050117492676,
        47.2
    ],
    [
        "(enter) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[             ]\t(23.1054s x0.99 from start)\n",
        33.370397329330444,
        47.21
    ],
    [
        "  (enter) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[             ]\t(23.1054s x0.99 from start)\n",
        33.393590450286865,
        47.230000000000004
    ],
    [
        "    (enter) Accumulate input                   \t[             ]\t(23.1054s x0.99 from start)\n",
        33.41947054862976,
        47.25
    ],
    [
        "    (leave) Accumulate input                   \t[0.0424s x2.50]\t(23.1478s x1.00 from start)\n",
        33.443973779678345,
        47.28
    ],
    [
        "    (enter) Check if the proof is well-formed  \t[             ]\t(23.1479s x1.00 from start)\n",
        33.46221899986267,
        47.28
    ],
    [
        "    (leave) Check if the proof is well-formed  \t[0.0000s x0.99]\t(23.1479s x1.00 from start)\n",
        33.48201894760132,
        47.3
    ],
    [
        "    (enter) Online pairing computations        \t[             ]\t(23.1479s x1.00 from start)\n",
        33.5017192363739,
        47.32
    ],
    [
        "      (enter) Check QAP divisibility             \t[             ]\t(23.1479s x1.00 from start)\n",
        33.521220445632935,
        47.34
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(23.1479s x1.00 from start)\n",
        33.54058909416199,
        47.36
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.05]\t(23.1479s x1.00 from start)\n",
        33.55992031097412,
        47.379999999999995
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G2    \t[             ]\t(23.1479s x1.00 from start)\n",
        33.57970333099365,
        47.4
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G2    \t[0.0001s x1.01]\t(23.1479s x1.00 from start)\n",
        33.599650144577026,
        47.42
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(23.1480s x1.00 from start)\n",
        33.62103605270386,
        47.44
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.07]\t(23.1480s x1.00 from start)\n",
        33.644266843795776,
        47.46
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(23.1480s x1.00 from start)\n",
        33.66742253303528,
        47.489999999999995
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.02]\t(23.1480s x1.00 from start)\n",
        33.68942093849182,
        47.51
    ],
    [
        "        (enter) Call to miller_loop<bn128_pp>      \t[             ]\t(23.1480s x1.00 from start)\n",
        33.711907625198364,
        47.53
    ],
    [
        "        (leave) Call to miller_loop<bn128_pp>      \t[0.0001s x1.00]\t(23.1481s x1.00 from start)\n",
        33.73278284072876,
        47.55
    ],
    [
        "        (enter) Call to double_miller_loop<bn128_pp>\t[             ]\t(23.1481s x1.00 from start)\n",
        33.753814697265625,
        47.57
    ],
    [
        "        (leave) Call to double_miller_loop<bn128_pp>\t[0.0002s x1.00]\t(23.1484s x1.00 from start)\n",
        33.774877071380615,
        47.59
    ],
    [
        "        (enter) Call to bn128_final_exponentiation \t[             ]\t(23.1484s x1.00 from start)\n",
        33.79134726524353,
        47.6
    ],
    [
        "        (leave) Call to bn128_final_exponentiation \t[0.0002s x1.00]\t(23.1486s x1.00 from start)\n",
        33.8090934753418,
        47.61
    ],
    [
        "        QAP divisibility check failed.\n",
        33.825467586517334,
        47.620000000000005
    ],
    [
        "      (leave) Check QAP divisibility             \t[0.0007s x1.00]\t(23.1486s x1.00 from start)\n",
        33.84234261512756,
        47.64
    ],
    [
        "    (leave) Online pairing computations        \t[0.0007s x1.00]\t(23.1486s x1.00 from start)\n",
        33.85906672477722,
        47.650000000000006
    ],
    [
        "  (leave) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[0.0432s x2.48]\t(23.1486s x1.00 from start)\n",
        33.87570381164551,
        47.67
    ],
    [
        "(leave) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[0.0432s x2.48]\t(23.1486s x1.00 from start)\n",
        33.89186406135559,
        47.68000000000001
    ],
    [
        "FAIL",
        34.897367000579834,
        48.69
    ],
    [
        "Done",
        35.38398003578186,
        48.69
    ]
]