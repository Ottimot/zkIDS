[
    [
        "Merkle Computation starts now",
        0,
        0
    ],
    [
        "Merkle Proof Computed",
        3.814697265625e-06,
        0
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.02445220947265625,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.4596378803253174,
        1.77
    ],
    [
        "Num of variable reads = 1480\n",
        0.46613359451293945,
        1.8099999999999998
    ],
    [
        "Num of conditional writes = 0\n",
        0.47135448455810547,
        1.8199999999999998
    ],
    [
        "Num of words per element = 1\n",
        0.47597599029541016,
        1.8399999999999999
    ],
    [
        "Num of variable writes = 0\n",
        0.48053550720214844,
        1.8599999999999999
    ],
    [
        "num of accesses = 1480\n",
        0.48503613471984863,
        1.8699999999999999
    ],
    [
        "Packing Option = 1\n",
        0.48949241638183594,
        1.89
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.49382734298706055,
        1.92
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.498241662979126,
        1.94
    ],
    [
        "done with read only memory solutions!\n",
        1.0801482200622559,
        2.9200000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.0911829471588135,
        2.9400000000000004
    ],
    [
        "Num of variable reads = 128\n",
        1.0995824337005615,
        2.9400000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        1.107558012008667,
        2.95
    ],
    [
        "Num of words per element = 1\n",
        1.115192174911499,
        2.9600000000000004
    ],
    [
        "Num of variable writes = 0\n",
        1.1228280067443848,
        2.97
    ],
    [
        "num of accesses = 128\n",
        1.1303536891937256,
        2.98
    ],
    [
        "Packing Option = 1\n",
        1.1377484798431396,
        2.98
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.1451420783996582,
        2.99
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.152911901473999,
        3.0
    ],
    [
        "Num of variable reads = 520\n",
        1.1607260704040527,
        3.0100000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        1.1689238548278809,
        3.02
    ],
    [
        "Num of words per element = 1\n",
        1.176604986190796,
        3.0300000000000002
    ],
    [
        "Num of variable writes = 0\n",
        1.184171199798584,
        3.04
    ],
    [
        "num of accesses = 520\n",
        1.1915462017059326,
        3.04
    ],
    [
        "Packing Option = 1\n",
        1.19877290725708,
        3.0500000000000003
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.20578932762146,
        3.06
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.2128541469573975,
        3.06
    ],
    [
        "done with read only memory solutions!\n",
        1.5724809169769287,
        3.45
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.583202600479126,
        3.47
    ],
    [
        "Num of variable reads = 128\n",
        1.5914318561553955,
        3.48
    ],
    [
        "Num of conditional writes = 0\n",
        1.5985486507415771,
        3.49
    ],
    [
        "Num of words per element = 1\n",
        1.6042916774749756,
        3.49
    ],
    [
        "Num of variable writes = 0\n",
        1.6097416877746582,
        3.49
    ],
    [
        "num of accesses = 128\n",
        1.614988088607788,
        3.5
    ],
    [
        "Packing Option = 1\n",
        1.6199965476989746,
        3.5100000000000002
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6249330043792725,
        3.5100000000000002
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6309311389923096,
        3.52
    ],
    [
        "Num of variable reads = 71\n",
        1.636857271194458,
        3.52
    ],
    [
        "Num of conditional writes = 0\n",
        1.6428563594818115,
        3.5300000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.649371862411499,
        3.54
    ],
    [
        "Num of variable writes = 0\n",
        1.657196283340454,
        3.5500000000000003
    ],
    [
        "num of accesses = 71\n",
        1.6648378372192383,
        3.56
    ],
    [
        "Packing Option = 1\n",
        1.6721885204315186,
        3.56
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.67934250831604,
        3.5700000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6863253116607666,
        3.58
    ],
    [
        "Num of variable reads = 128\n",
        1.6931970119476318,
        3.58
    ],
    [
        "Num of conditional writes = 0\n",
        1.7011353969573975,
        3.5900000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.708085298538208,
        3.6
    ],
    [
        "Num of variable writes = 0\n",
        1.7144525051116943,
        3.6100000000000003
    ],
    [
        "num of accesses = 128\n",
        1.720940113067627,
        3.6100000000000003
    ],
    [
        "Packing Option = 0\n",
        1.7274649143218994,
        3.62
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.734032154083252,
        3.6300000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7406058311462402,
        3.6300000000000003
    ],
    [
        "Num of variable reads = 71\n",
        1.7472341060638428,
        3.64
    ],
    [
        "Num of conditional writes = 0\n",
        1.754488468170166,
        3.6500000000000004
    ],
    [
        "Num of words per element = 1\n",
        1.7618451118469238,
        3.66
    ],
    [
        "Num of variable writes = 0\n",
        1.7689695358276367,
        3.66
    ],
    [
        "num of accesses = 71\n",
        1.7763748168945312,
        3.68
    ],
    [
        "Packing Option = 1\n",
        1.7835068702697754,
        3.68
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.790616512298584,
        3.6900000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7976229190826416,
        3.7
    ],
    [
        "Num of variable reads = 128\n",
        1.805140495300293,
        3.7100000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        1.8128337860107422,
        3.73
    ],
    [
        "Num of words per element = 1\n",
        1.820878028869629,
        3.74
    ],
    [
        "Num of variable writes = 0\n",
        1.8294670581817627,
        3.7600000000000002
    ],
    [
        "num of accesses = 128\n",
        1.837862253189087,
        3.7800000000000002
    ],
    [
        "Packing Option = 0\n",
        1.8459200859069824,
        3.7800000000000002
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.8549926280975342,
        3.79
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.863304615020752,
        3.81
    ],
    [
        "Num of variable reads = 0\n",
        1.8715028762817383,
        3.8200000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.8794398307800293,
        3.83
    ],
    [
        "Num of words per element = 1\n",
        1.887131929397583,
        3.8400000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.8948585987091064,
        3.85
    ],
    [
        "num of accesses = 0\n",
        1.902446985244751,
        3.8600000000000003
    ],
    [
        "Packing Option = 0\n",
        1.909820795059204,
        3.87
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.9169447422027588,
        3.87
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9239649772644043,
        3.8800000000000003
    ],
    [
        "Num of variable reads = 5160\n",
        1.930905818939209,
        3.89
    ],
    [
        "Num of conditional writes = 0\n",
        1.937711238861084,
        3.89
    ],
    [
        "Num of words per element = 1\n",
        1.9444568157196045,
        3.9000000000000004
    ],
    [
        "Num of variable writes = 0\n",
        1.9520368576049805,
        3.91
    ],
    [
        "num of accesses = 5160\n",
        1.9604930877685547,
        3.93
    ],
    [
        "Packing Option = 1\n",
        1.9688055515289307,
        3.9400000000000004
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.97682785987854,
        3.95
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.9851100444793701,
        3.9600000000000004
    ],
    [
        "done with read only memory solutions!\n",
        2.0668747425079346,
        4.12
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.0764553546905518,
        4.14
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.0849127769470215,
        4.16
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        4.52099609375,
        16.85
    ],
    [
        " \t Total Number of Constraints :  1784239\n",
        4.545468330383301,
        16.95
    ],
    [
        "\n",
        4.564723491668701,
        17.01
    ],
    [
        "Instruction queue size: 5728192\n",
        4.58214807510376,
        17.05
    ],
    [
        "Normal execution\n",
        9.334256887435913,
        23.400000000000002
    ],
    [
        "Running Sample Run: run101\n",
        9.35439682006836,
        23.400000000000002
    ],
    [
        "tls_data.txt\n",
        9.369639158248901,
        23.41
    ],
    [
        "files/proof_10.txt\n",
        9.385234832763672,
        23.42
    ],
    [
        "Url assignment done\n",
        9.401360511779785,
        23.450000000000003
    ],
    [
        "Evaluating Input on the circuit \n",
        9.419422149658203,
        23.51
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        9.437883377075195,
        23.57
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        9.45598840713501,
        23.610000000000003
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        9.475215673446655,
        23.66
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        9.493697166442871,
        23.67
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        9.51275897026062,
        23.700000000000003
    ],
    [
        "\t[input] Value of Wire # 22 :: 11418fd811c07f8f7635ee5b9df4d57f47f79218d21e011f380f91daa7aa9e80\n",
        9.531211614608765,
        23.720000000000002
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        9.549246072769165,
        23.740000000000002
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        9.567784309387207,
        23.76
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        9.585943222045898,
        23.78
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        9.604698657989502,
        23.8
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        9.65642261505127,
        24.319999999999997
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        9.676846265792847,
        24.34
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        9.696988821029663,
        24.369999999999997
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        9.717081546783447,
        24.389999999999997
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        9.737234354019165,
        24.41
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        9.757768392562866,
        24.45
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        9.778843641281128,
        24.49
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        9.799460887908936,
        24.529999999999998
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        9.820516109466553,
        24.569999999999997
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        9.840754508972168,
        24.59
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        9.861602783203125,
        24.63
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        9.881227731704712,
        24.65
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        9.898231983184814,
        24.669999999999998
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        9.916752815246582,
        24.7
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        9.93396782875061,
        24.72
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        9.950149297714233,
        24.75
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        9.96796202659607,
        24.779999999999998
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        9.986529350280762,
        24.819999999999997
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        10.005526304244995,
        24.849999999999998
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        10.02406096458435,
        24.869999999999997
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        10.041850328445435,
        24.889999999999997
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        10.059715509414673,
        24.9
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        10.076649188995361,
        24.91
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        10.16342043876648,
        24.91
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        10.163540363311768,
        24.91
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        10.163591623306274,
        24.91
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        10.163640022277832,
        24.91
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        10.16368556022644,
        24.91
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        10.163729906082153,
        24.91
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        10.163774490356445,
        24.91
    ],
    [
        "\t[input] Value of Wire # 329 :: 2f\n",
        10.163820028305054,
        24.91
    ],
    [
        "\t[input] Value of Wire # 338 :: d4\n",
        10.163864135742188,
        24.91
    ],
    [
        "\t[input] Value of Wire # 347 :: 0\n",
        10.163907527923584,
        24.91
    ],
    [
        "\t[input] Value of Wire # 356 :: 0\n",
        10.163950681686401,
        24.91
    ],
    [
        "\t[input] Value of Wire # 365 :: 0\n",
        10.164000034332275,
        24.91
    ],
    [
        "\t[input] Value of Wire # 374 :: 0\n",
        10.164043188095093,
        24.91
    ],
    [
        "\t[input] Value of Wire # 383 :: 0\n",
        10.164089441299438,
        24.91
    ],
    [
        "\t[input] Value of Wire # 392 :: 0\n",
        10.164132833480835,
        24.91
    ],
    [
        "\t[input] Value of Wire # 401 :: 0\n",
        10.164178133010864,
        24.91
    ],
    [
        "\t[input] Value of Wire # 410 :: 0\n",
        10.164222478866577,
        24.91
    ],
    [
        "\t[input] Value of Wire # 419 :: 0\n",
        10.16426682472229,
        24.91
    ],
    [
        "\t[input] Value of Wire # 428 :: 0\n",
        10.16431188583374,
        24.91
    ],
    [
        "\t[input] Value of Wire # 437 :: 0\n",
        10.164355278015137,
        24.91
    ],
    [
        "\t[input] Value of Wire # 446 :: 0\n",
        10.164399147033691,
        24.91
    ],
    [
        "\t[input] Value of Wire # 455 :: 0\n",
        10.164442539215088,
        24.91
    ],
    [
        "\t[input] Value of Wire # 464 :: 0\n",
        10.164486169815063,
        24.91
    ],
    [
        "\t[input] Value of Wire # 473 :: 0\n",
        10.164528846740723,
        24.91
    ],
    [
        "\t[input] Value of Wire # 482 :: 0\n",
        10.164571523666382,
        24.91
    ],
    [
        "\t[input] Value of Wire # 491 :: 0\n",
        10.164613962173462,
        24.91
    ],
    [
        "\t[input] Value of Wire # 500 :: 0\n",
        10.164656639099121,
        24.91
    ],
    [
        "\t[input] Value of Wire # 509 :: 0\n",
        10.164700746536255,
        24.91
    ],
    [
        "\t[input] Value of Wire # 518 :: 0\n",
        10.164743661880493,
        24.91
    ],
    [
        "\t[input] Value of Wire # 527 :: 0\n",
        10.164787292480469,
        24.91
    ],
    [
        "\t[input] Value of Wire # 536 :: 0\n",
        10.164830446243286,
        24.91
    ],
    [
        "\t[input] Value of Wire # 545 :: 0\n",
        10.164874076843262,
        24.91
    ],
    [
        "\t[input] Value of Wire # 554 :: 0\n",
        10.1649169921875,
        24.91
    ],
    [
        "\t[input] Value of Wire # 563 :: 0\n",
        10.164961338043213,
        24.91
    ],
    [
        "\t[input] Value of Wire # 572 :: 0\n",
        10.165004253387451,
        24.91
    ],
    [
        "\t[input] Value of Wire # 581 :: 0\n",
        10.16504693031311,
        24.91
    ],
    [
        "\t[input] Value of Wire # 590 :: 0\n",
        10.16508936882019,
        24.91
    ],
    [
        "\t[input] Value of Wire # 599 :: 0\n",
        10.165131568908691,
        24.91
    ],
    [
        "\t[input] Value of Wire # 608 :: 0\n",
        10.16517424583435,
        24.91
    ],
    [
        "\t[input] Value of Wire # 617 :: 0\n",
        10.16521668434143,
        24.91
    ],
    [
        "\t[input] Value of Wire # 626 :: 0\n",
        10.165259838104248,
        24.91
    ],
    [
        "\t[input] Value of Wire # 635 :: 0\n",
        10.165303230285645,
        24.91
    ],
    [
        "\t[input] Value of Wire # 644 :: 0\n",
        10.165346622467041,
        24.91
    ],
    [
        "\t[input] Value of Wire # 653 :: 0\n",
        10.1653892993927,
        24.91
    ],
    [
        "\t[input] Value of Wire # 662 :: 0\n",
        10.165435314178467,
        24.91
    ],
    [
        "\t[input] Value of Wire # 671 :: 0\n",
        10.16548204421997,
        24.91
    ],
    [
        "\t[input] Value of Wire # 680 :: 0\n",
        10.165527105331421,
        24.91
    ],
    [
        "\t[input] Value of Wire # 689 :: 0\n",
        10.165570735931396,
        24.91
    ],
    [
        "\t[input] Value of Wire # 698 :: 0\n",
        10.165615558624268,
        24.91
    ],
    [
        "\t[input] Value of Wire # 707 :: 0\n",
        10.16565990447998,
        24.91
    ],
    [
        "\t[input] Value of Wire # 716 :: 0\n",
        10.165703773498535,
        24.91
    ],
    [
        "\t[input] Value of Wire # 725 :: 0\n",
        10.165748834609985,
        24.91
    ],
    [
        "\t[input] Value of Wire # 734 :: 0\n",
        10.165793657302856,
        24.91
    ],
    [
        "\t[input] Value of Wire # 743 :: 0\n",
        10.165853023529053,
        24.91
    ],
    [
        "\t[input] Value of Wire # 752 :: 0\n",
        10.165897846221924,
        24.91
    ],
    [
        "\t[input] Value of Wire # 761 :: 0\n",
        10.1659414768219,
        24.91
    ],
    [
        "\t[input] Value of Wire # 770 :: 0\n",
        10.165985107421875,
        24.91
    ],
    [
        "\t[input] Value of Wire # 779 :: 0\n",
        10.166034460067749,
        24.91
    ],
    [
        "\t[input] Value of Wire # 788 :: 0\n",
        10.166078090667725,
        24.91
    ],
    [
        "\t[input] Value of Wire # 797 :: 0\n",
        10.166120529174805,
        24.91
    ],
    [
        "\t[input] Value of Wire # 806 :: 0\n",
        10.166163921356201,
        24.91
    ],
    [
        "\t[input] Value of Wire # 815 :: 0\n",
        10.166207075119019,
        24.91
    ],
    [
        "\t[input] Value of Wire # 824 :: 0\n",
        10.166250228881836,
        24.91
    ],
    [
        "\t[input] Value of Wire # 833 :: 0\n",
        10.166292428970337,
        24.91
    ],
    [
        "\t[input] Value of Wire # 842 :: 0\n",
        10.166335344314575,
        24.91
    ],
    [
        "\t[input] Value of Wire # 851 :: 0\n",
        10.166379451751709,
        24.91
    ],
    [
        "\t[input] Value of Wire # 860 :: 0\n",
        10.166423320770264,
        24.91
    ],
    [
        "\t[input] Value of Wire # 869 :: 0\n",
        10.166466474533081,
        24.91
    ],
    [
        "\t[input] Value of Wire # 878 :: 0\n",
        10.166509866714478,
        24.91
    ],
    [
        "\t[input] Value of Wire # 887 :: 0\n",
        10.166552543640137,
        24.91
    ],
    [
        "\t[input] Value of Wire # 896 :: 0\n",
        10.166603326797485,
        24.91
    ],
    [
        "\t[input] Value of Wire # 905 :: 0\n",
        10.166648387908936,
        24.91
    ],
    [
        "\t[input] Value of Wire # 914 :: 0\n",
        10.166692018508911,
        24.91
    ],
    [
        "\t[input] Value of Wire # 923 :: 0\n",
        10.166735887527466,
        24.91
    ],
    [
        "\t[input] Value of Wire # 932 :: 0\n",
        10.166778802871704,
        24.91
    ],
    [
        "\t[input] Value of Wire # 941 :: 0\n",
        10.166823863983154,
        24.91
    ],
    [
        "\t[input] Value of Wire # 950 :: 0\n",
        10.16686725616455,
        24.91
    ],
    [
        "\t[input] Value of Wire # 959 :: 0\n",
        10.166910648345947,
        24.91
    ],
    [
        "\t[input] Value of Wire # 968 :: 0\n",
        10.166954040527344,
        24.91
    ],
    [
        "\t[input] Value of Wire # 977 :: 0\n",
        10.166998386383057,
        24.91
    ],
    [
        "\t[input] Value of Wire # 986 :: 0\n",
        10.16704249382019,
        24.91
    ],
    [
        "\t[input] Value of Wire # 995 :: 0\n",
        10.167085886001587,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1004 :: 0\n",
        10.167129516601562,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1013 :: 0\n",
        10.167173147201538,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1022 :: 0\n",
        10.167217254638672,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1031 :: 0\n",
        10.16726040840149,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1040 :: 0\n",
        10.167303085327148,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1049 :: 0\n",
        10.167346000671387,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1058 :: 0\n",
        10.167388677597046,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1067 :: 0\n",
        10.167433023452759,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1076 :: 0\n",
        10.16747760772705,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1085 :: 0\n",
        10.167520999908447,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1094 :: 0\n",
        10.167564392089844,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1103 :: 0\n",
        10.16760802268982,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1112 :: 0\n",
        10.167650938034058,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1121 :: 0\n",
        10.167693138122559,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1130 :: 0\n",
        10.167735576629639,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1139 :: 0\n",
        10.167778253555298,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1148 :: 0\n",
        10.167820930480957,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1157 :: 0\n",
        10.167863845825195,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1166 :: 0\n",
        10.167906761169434,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1175 :: 0\n",
        10.167949199676514,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1184 :: 0\n",
        10.167991399765015,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1193 :: 0\n",
        10.168032884597778,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1202 :: 0\n",
        10.1680748462677,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1211 :: 0\n",
        10.168118238449097,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1220 :: 0\n",
        10.168161392211914,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1229 :: 0\n",
        10.16820502281189,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1238 :: 0\n",
        10.168249368667603,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1247 :: 0\n",
        10.16829252243042,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1256 :: 0\n",
        10.168336153030396,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1265 :: 0\n",
        10.168378829956055,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1274 :: 0\n",
        10.168421983718872,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1283 :: 0\n",
        10.16846513748169,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1292 :: 0\n",
        10.168508052825928,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1301 :: 0\n",
        10.168550729751587,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1310 :: 0\n",
        10.168593168258667,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1319 :: 0\n",
        10.16863489151001,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1328 :: 0\n",
        10.16867733001709,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1337 :: 0\n",
        10.16871953010559,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1346 :: 0\n",
        10.16876220703125,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1355 :: 0\n",
        10.168804407119751,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1364 :: 0\n",
        10.168846368789673,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1373 :: 0\n",
        10.168888330459595,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1382 :: 0\n",
        10.168930292129517,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1391 :: 0\n",
        10.168972969055176,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1400 :: 0\n",
        10.169016361236572,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1409 :: 0\n",
        10.169058322906494,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1418 :: 0\n",
        10.169100284576416,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1427 :: 0\n",
        10.169142484664917,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1436 :: 0\n",
        10.169185161590576,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1445 :: 0\n",
        10.169227123260498,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1454 :: 0\n",
        10.169269323348999,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1463 :: 86\n",
        10.169311046600342,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1472 :: 18\n",
        10.16935396194458,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1481 :: 1e\n",
        10.169395923614502,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1490 :: b4\n",
        10.169437646865845,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1499 :: c8\n",
        10.169479846954346,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1508 :: 95\n",
        10.169524192810059,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1517 :: dd\n",
        10.16956615447998,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1526 :: 89\n",
        10.16960883140564,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1535 :: e0\n",
        10.169650793075562,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1544 :: 23\n",
        10.169692277908325,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1553 :: bf\n",
        10.169734001159668,
        24.91
    ],
    [
        "\t[input] Value of Wire # 1562 :: 41\n",
        10.16977572441101,
        24.91
    ],
    [
        "Done",
        10.17434811592102,
        24.91
    ]
]