[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.4209604263305664
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1179819107055664
    ],
    [
        "Num of variable reads = 1480\n",
        1.1288671493530273
    ],
    [
        "Num of conditional writes = 0\n",
        1.1379754543304443
    ],
    [
        "Num of words per element = 1\n",
        1.1484904289245605
    ],
    [
        "Num of variable writes = 0\n",
        1.159243106842041
    ],
    [
        "num of accesses = 1480\n",
        1.1703472137451172
    ],
    [
        "Packing Option = 1\n",
        1.181523084640503
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1957924365997314
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.2069592475891113
    ],
    [
        "done with read only memory solutions!\n",
        2.212174892425537
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.233524799346924
    ],
    [
        "Num of variable reads = 128\n",
        2.2529640197753906
    ],
    [
        "Num of conditional writes = 0\n",
        2.272092342376709
    ],
    [
        "Num of words per element = 1\n",
        2.2861621379852295
    ],
    [
        "Num of variable writes = 0\n",
        2.2993156909942627
    ],
    [
        "num of accesses = 128\n",
        2.3123550415039062
    ],
    [
        "Packing Option = 1\n",
        2.325700044631958
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.3392493724823
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.35292649269104
    ],
    [
        "Num of variable reads = 520\n",
        2.3686392307281494
    ],
    [
        "Num of conditional writes = 0\n",
        2.3846144676208496
    ],
    [
        "Num of words per element = 1\n",
        2.398318290710449
    ],
    [
        "Num of variable writes = 0\n",
        2.412421464920044
    ],
    [
        "num of accesses = 520\n",
        2.426400661468506
    ],
    [
        "Packing Option = 1\n",
        2.440314769744873
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.454139471054077
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.467942476272583
    ],
    [
        "done with read only memory solutions!\n",
        3.0218417644500732
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.035966634750366
    ],
    [
        "Num of variable reads = 128\n",
        3.049278497695923
    ],
    [
        "Num of conditional writes = 0\n",
        3.0624501705169678
    ],
    [
        "Num of words per element = 1\n",
        3.075754165649414
    ],
    [
        "Num of variable writes = 0\n",
        3.089181661605835
    ],
    [
        "num of accesses = 128\n",
        3.1033220291137695
    ],
    [
        "Packing Option = 1\n",
        3.120495557785034
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.1343696117401123
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.148148536682129
    ],
    [
        "Num of variable reads = 71\n",
        3.161987543106079
    ],
    [
        "Num of conditional writes = 0\n",
        3.1758251190185547
    ],
    [
        "Num of words per element = 1\n",
        3.189520835876465
    ],
    [
        "Num of variable writes = 0\n",
        3.203403949737549
    ],
    [
        "num of accesses = 71\n",
        3.2181336879730225
    ],
    [
        "Packing Option = 1\n",
        3.232250452041626
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.2461187839508057
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.259979009628296
    ],
    [
        "Num of variable reads = 128\n",
        3.2739040851593018
    ],
    [
        "Num of conditional writes = 0\n",
        3.2877955436706543
    ],
    [
        "Num of words per element = 1\n",
        3.3015594482421875
    ],
    [
        "Num of variable writes = 0\n",
        3.3152987957000732
    ],
    [
        "num of accesses = 128\n",
        3.329078435897827
    ],
    [
        "Packing Option = 0\n",
        3.342822313308716
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.3565497398376465
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.370267629623413
    ],
    [
        "Num of variable reads = 71\n",
        3.3839733600616455
    ],
    [
        "Num of conditional writes = 0\n",
        3.4011285305023193
    ],
    [
        "Num of words per element = 1\n",
        3.414921522140503
    ],
    [
        "Num of variable writes = 0\n",
        3.4285850524902344
    ],
    [
        "num of accesses = 71\n",
        3.4422829151153564
    ],
    [
        "Packing Option = 1\n",
        3.4559946060180664
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.469801664352417
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.483605146408081
    ],
    [
        "Num of variable reads = 128\n",
        3.4976613521575928
    ],
    [
        "Num of conditional writes = 0\n",
        3.5118777751922607
    ],
    [
        "Num of words per element = 1\n",
        3.526005744934082
    ],
    [
        "Num of variable writes = 0\n",
        3.5398318767547607
    ],
    [
        "num of accesses = 128\n",
        3.5535523891448975
    ],
    [
        "Packing Option = 0\n",
        3.5673277378082275
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.581242561340332
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.595209836959839
    ],
    [
        "Num of variable reads = 0\n",
        3.613396406173706
    ],
    [
        "Num of conditional writes = 0\n",
        3.627366304397583
    ],
    [
        "Num of words per element = 1\n",
        3.641251802444458
    ],
    [
        "Num of variable writes = 0\n",
        3.65510892868042
    ],
    [
        "num of accesses = 0\n",
        3.6688880920410156
    ],
    [
        "Packing Option = 0\n",
        3.682622194290161
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.700100898742676
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.7140257358551025
    ],
    [
        "Num of variable reads = 5160\n",
        3.7277204990386963
    ],
    [
        "Num of conditional writes = 0\n",
        3.741434097290039
    ],
    [
        "Num of words per element = 1\n",
        3.7554244995117188
    ],
    [
        "Num of variable writes = 0\n",
        3.7693517208099365
    ],
    [
        "num of accesses = 5160\n",
        3.7831175327301025
    ],
    [
        "Packing Option = 1\n",
        3.7967662811279297
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        3.8107521533966064
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        3.824713706970215
    ],
    [
        "done with read only memory solutions!\n",
        3.9379518032073975
    ],
    [
        "Phase 1: Analysis Completed!\n",
        3.951237916946411
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        3.964517116546631
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        8.092663764953613
    ],
    [
        " \t Total Number of Constraints :  1783029\n",
        8.114781856536865
    ],
    [
        "\n",
        8.138664960861206
    ],
    [
        "Instruction queue size: 5721117\n",
        8.168852806091309
    ],
    [
        "Normal execution\n",
        14.895235776901245
    ],
    [
        "Running Sample Run: run51\n",
        14.922916173934937
    ],
    [
        "tls_data.txt\n",
        14.951908826828003
    ],
    [
        "files/proof_5.txt\n",
        14.981977462768555
    ],
    [
        "Url assignment done\n",
        15.011742115020752
    ],
    [
        "Evaluating Input on the circuit \n",
        15.044398307800293
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        15.071348667144775
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        15.096148252487183
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        15.120970964431763
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        15.146760940551758
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        15.173163652420044
    ],
    [
        "\t[input] Value of Wire # 22 :: 178856da2505a15a1f9f87c13f6858f0e8a41aa07e62a0617745ec67e58c0307\n",
        15.200740814208984
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        15.228647232055664
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        15.257981300354004
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        15.286837100982666
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        15.315573930740356
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        15.34330129623413
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        15.3707857131958
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        15.405759572982788
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        15.44946002960205
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        15.474766731262207
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        15.501875162124634
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        15.528930902481079
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        15.555952310562134
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        15.58324909210205
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        15.610443592071533
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        15.650859594345093
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        15.699082851409912
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        15.724633693695068
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        15.749526977539062
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        15.77562427520752
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        15.803056716918945
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        15.830477952957153
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        15.874083280563354
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        15.900060653686523
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        15.926358699798584
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        15.952923774719238
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        15.979483127593994
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        16.0057852268219
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        16.032981395721436
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        16.072129487991333
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        16.103918075561523
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        16.12955665588379
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        16.156731605529785
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        16.185277223587036
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        16.21408224105835
    ],
    [
        "\t[input] Value of Wire # 329 :: 2f\n",
        16.242915153503418
    ],
    [
        "\t[input] Value of Wire # 338 :: d4\n",
        16.271549224853516
    ],
    [
        "\t[input] Value of Wire # 347 :: 0\n",
        16.302964448928833
    ],
    [
        "\t[input] Value of Wire # 356 :: 0\n",
        16.336883783340454
    ],
    [
        "Done",
        16.57937979698181
    ]
]