[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_String >\n",
        0.019695043563842773,
        0.02
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.26123547554016113,
        1.04
    ],
    [
        "Num of variable reads = 1480\n",
        0.2664306163787842,
        1.06
    ],
    [
        "Num of conditional writes = 0\n",
        0.27089977264404297,
        1.07
    ],
    [
        "Num of words per element = 1\n",
        0.2751028537750244,
        1.1
    ],
    [
        "Num of variable writes = 0\n",
        0.2817394733428955,
        1.1500000000000001
    ],
    [
        "num of accesses = 1480\n",
        0.2858564853668213,
        1.1700000000000002
    ],
    [
        "Packing Option = 1\n",
        0.2905254364013672,
        1.1800000000000002
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.2949047088623047,
        1.2
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.2986423969268799,
        1.21
    ],
    [
        "done with read only memory solutions!\n",
        0.8791615962982178,
        2.3000000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.8846473693847656,
        2.31
    ],
    [
        "Num of variable reads = 128\n",
        0.8883359432220459,
        2.31
    ],
    [
        "Num of conditional writes = 0\n",
        0.8906874656677246,
        2.31
    ],
    [
        "Num of words per element = 1\n",
        0.8926949501037598,
        2.31
    ],
    [
        "Num of variable writes = 0\n",
        0.8946707248687744,
        2.31
    ],
    [
        "num of accesses = 128\n",
        0.8967068195343018,
        2.3200000000000003
    ],
    [
        "Packing Option = 1\n",
        0.8987565040588379,
        2.3200000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        0.9007265567779541,
        2.3200000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.9027886390686035,
        2.3200000000000003
    ],
    [
        "Num of variable reads = 520\n",
        0.9048476219177246,
        2.33
    ],
    [
        "Num of conditional writes = 0\n",
        0.9068605899810791,
        2.33
    ],
    [
        "Num of words per element = 1\n",
        0.9090490341186523,
        2.33
    ],
    [
        "Num of variable writes = 0\n",
        0.9110767841339111,
        2.33
    ],
    [
        "num of accesses = 520\n",
        0.9131383895874023,
        2.3400000000000003
    ],
    [
        "Packing Option = 1\n",
        0.9151673316955566,
        2.3400000000000003
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.9172439575195312,
        2.3400000000000003
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.9192526340484619,
        2.3400000000000003
    ],
    [
        "done with read only memory solutions!\n",
        1.3650391101837158,
        2.8000000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.3693208694458008,
        2.81
    ],
    [
        "Num of variable reads = 128\n",
        1.3729479312896729,
        2.8200000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.3764152526855469,
        2.8200000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.3790264129638672,
        2.83
    ],
    [
        "Num of variable writes = 0\n",
        1.3811564445495605,
        2.83
    ],
    [
        "num of accesses = 128\n",
        1.3831787109375,
        2.83
    ],
    [
        "Packing Option = 1\n",
        1.3851432800292969,
        2.8400000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.387091875076294,
        2.8400000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.389052152633667,
        2.8400000000000003
    ],
    [
        "Num of variable reads = 71\n",
        1.3910298347473145,
        2.8400000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.392995834350586,
        2.85
    ],
    [
        "Num of words per element = 1\n",
        1.3949639797210693,
        2.85
    ],
    [
        "Num of variable writes = 0\n",
        1.396944284439087,
        2.85
    ],
    [
        "num of accesses = 71\n",
        1.3991999626159668,
        2.85
    ],
    [
        "Packing Option = 1\n",
        1.4015371799468994,
        2.85
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.4034931659698486,
        2.85
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4054622650146484,
        2.8600000000000003
    ],
    [
        "Num of variable reads = 128\n",
        1.407654047012329,
        2.8600000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.4098937511444092,
        2.8600000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.4119653701782227,
        2.8600000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.4140045642852783,
        2.87
    ],
    [
        "num of accesses = 128\n",
        1.4160077571868896,
        2.87
    ],
    [
        "Packing Option = 0\n",
        1.4180080890655518,
        2.87
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.419992446899414,
        2.87
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4219768047332764,
        2.87
    ],
    [
        "Num of variable reads = 71\n",
        1.4239532947540283,
        2.87
    ],
    [
        "Num of conditional writes = 0\n",
        1.4259397983551025,
        2.88
    ],
    [
        "Num of words per element = 1\n",
        1.4279053211212158,
        2.88
    ],
    [
        "Num of variable writes = 0\n",
        1.4298808574676514,
        2.88
    ],
    [
        "num of accesses = 71\n",
        1.4318478107452393,
        2.88
    ],
    [
        "Packing Option = 1\n",
        1.4338290691375732,
        2.89
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.4359071254730225,
        2.89
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4379608631134033,
        2.89
    ],
    [
        "Num of variable reads = 128\n",
        1.4399592876434326,
        2.89
    ],
    [
        "Num of conditional writes = 0\n",
        1.4419474601745605,
        2.89
    ],
    [
        "Num of words per element = 1\n",
        1.4439232349395752,
        2.89
    ],
    [
        "Num of variable writes = 0\n",
        1.4459035396575928,
        2.9
    ],
    [
        "num of accesses = 128\n",
        1.4478743076324463,
        2.9
    ],
    [
        "Packing Option = 0\n",
        1.4498515129089355,
        2.9
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.4518203735351562,
        2.9
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.453803300857544,
        2.91
    ],
    [
        "Num of variable reads = 0\n",
        1.455772876739502,
        2.91
    ],
    [
        "Num of conditional writes = 0\n",
        1.4577744007110596,
        2.91
    ],
    [
        "Num of words per element = 1\n",
        1.4597485065460205,
        2.91
    ],
    [
        "Num of variable writes = 0\n",
        1.4617195129394531,
        2.91
    ],
    [
        "num of accesses = 0\n",
        1.4636709690093994,
        2.91
    ],
    [
        "Packing Option = 0\n",
        1.4656331539154053,
        2.92
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.4675796031951904,
        2.92
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4695255756378174,
        2.92
    ],
    [
        "Num of variable reads = 8040\n",
        1.4714651107788086,
        2.92
    ],
    [
        "Num of conditional writes = 0\n",
        1.473405122756958,
        2.93
    ],
    [
        "Num of words per element = 1\n",
        1.4753484725952148,
        2.93
    ],
    [
        "Num of variable writes = 0\n",
        1.4773080348968506,
        2.93
    ],
    [
        "num of accesses = 8040\n",
        1.4792706966400146,
        2.93
    ],
    [
        "Packing Option = 1\n",
        1.4812355041503906,
        2.93
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.4831798076629639,
        2.93
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.4851343631744385,
        2.94
    ],
    [
        "done with read only memory solutions!\n",
        1.8564064502716064,
        3.48
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8615984916687012,
        3.49
    ],
    [
        "Num of variable reads = 0\n",
        1.8651857376098633,
        3.5
    ],
    [
        "Num of conditional writes = 0\n",
        1.8689935207366943,
        3.5100000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.8717854022979736,
        3.52
    ],
    [
        "Num of variable writes = 0\n",
        1.874396800994873,
        3.5300000000000002
    ],
    [
        "num of accesses = 0\n",
        1.876965045928955,
        3.54
    ],
    [
        "Packing Option = 1\n",
        1.8796651363372803,
        3.5500000000000003
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.882411241531372,
        3.56
    ],
    [
        "Phase 1: Analysis Completed!\n",
        1.8852894306182861,
        3.58
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_String >\n",
        1.8883225917816162,
        3.58
    ],
    [
        "Circuit Generation Done for < Test_HTTP_String >  \n",
        4.680137634277344,
        19.06
    ],
    [
        " \t Total Number of Constraints :  1984853\n",
        4.690625429153442,
        19.09
    ],
    [
        "\n",
        4.700380563735962,
        19.12
    ],
    [
        "Instruction queue size: 7086993\n",
        4.710036039352417,
        19.14
    ],
    [
        "Normal execution\n",
        11.11843490600586,
        27.009999999999998
    ],
    [
        "Running Sample Run: run8001\n",
        11.135960578918457,
        27.009999999999998
    ],
    [
        "Url assignment done\n",
        11.164967060089111,
        27.04
    ],
    [
        "Evaluating Input on the circuit \n",
        11.180821418762207,
        27.05
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        11.193229913711548,
        27.07
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        11.206532001495361,
        27.12
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        11.21982455253601,
        27.13
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        11.233799695968628,
        27.2
    ],
    [
        "\t[input] Value of Wire # 21 :: 9\n",
        11.249092817306519,
        27.23
    ],
    [
        "\t[input] Value of Wire # 22 :: e3\n",
        11.263995885848999,
        27.25
    ],
    [
        "\t[input] Value of Wire # 31 :: bf\n",
        11.278831005096436,
        27.28
    ],
    [
        "\t[input] Value of Wire # 40 :: a4\n",
        11.293131828308105,
        27.3
    ],
    [
        "\t[input] Value of Wire # 49 :: 1\n",
        11.307021617889404,
        27.310000000000002
    ],
    [
        "\t[input] Value of Wire # 58 :: a4\n",
        11.32103443145752,
        27.330000000000002
    ],
    [
        "\t[input] Value of Wire # 67 :: 40\n",
        11.335577726364136,
        27.34
    ],
    [
        "\t[input] Value of Wire # 76 :: ed\n",
        11.349883794784546,
        27.36
    ],
    [
        "\t[input] Value of Wire # 85 :: 41\n",
        11.363950729370117,
        27.380000000000003
    ],
    [
        "\t[input] Value of Wire # 94 :: f\n",
        11.378426551818848,
        27.39
    ],
    [
        "\t[input] Value of Wire # 103 :: 3b\n",
        11.392276287078857,
        27.41
    ],
    [
        "\t[input] Value of Wire # 112 :: d0\n",
        11.40618109703064,
        27.42
    ],
    [
        "\t[input] Value of Wire # 121 :: b2\n",
        11.420321702957153,
        27.44
    ],
    [
        "\t[input] Value of Wire # 130 :: 5e\n",
        11.434443473815918,
        27.45
    ],
    [
        "\t[input] Value of Wire # 139 :: 1f\n",
        11.448549032211304,
        27.470000000000002
    ],
    [
        "\t[input] Value of Wire # 148 :: b7\n",
        11.462739706039429,
        27.48
    ],
    [
        "\t[input] Value of Wire # 157 :: 92\n",
        11.477077722549438,
        27.5
    ],
    [
        "\t[input] Value of Wire # 166 :: 9f\n",
        11.491899490356445,
        27.53
    ],
    [
        "\t[input] Value of Wire # 175 :: 37\n",
        11.507723093032837,
        27.580000000000002
    ],
    [
        "\t[input] Value of Wire # 184 :: 6b\n",
        11.523401975631714,
        27.62
    ],
    [
        "\t[input] Value of Wire # 193 :: 74\n",
        11.538520336151123,
        27.650000000000002
    ],
    [
        "\t[input] Value of Wire # 202 :: bb\n",
        11.553635835647583,
        27.69
    ],
    [
        "\t[input] Value of Wire # 211 :: 39\n",
        11.568424940109253,
        27.7
    ],
    [
        "\t[input] Value of Wire # 220 :: 5\n",
        11.582987308502197,
        27.720000000000002
    ],
    [
        "\t[input] Value of Wire # 229 :: 2b\n",
        11.597153425216675,
        27.73
    ],
    [
        "\t[input] Value of Wire # 238 :: 43\n",
        11.61124563217163,
        27.75
    ],
    [
        "\t[input] Value of Wire # 247 :: 1d\n",
        11.625370264053345,
        27.76
    ],
    [
        "\t[input] Value of Wire # 256 :: 93\n",
        11.63953685760498,
        27.78
    ],
    [
        "\t[input] Value of Wire # 265 :: a9\n",
        11.65360140800476,
        27.79
    ],
    [
        "\t[input] Value of Wire # 274 :: b7\n",
        11.683200120925903,
        28.01
    ],
    [
        "\t[input] Value of Wire # 283 :: f2\n",
        11.7340407371521,
        28.520000000000003
    ],
    [
        "\t[input] Value of Wire # 292 :: cb\n",
        11.764267683029175,
        28.73
    ],
    [
        "\t[input] Value of Wire # 301 :: 99\n",
        11.780187368392944,
        28.75
    ],
    [
        "\t[input] Value of Wire # 310 :: cf\n",
        11.795804977416992,
        28.77
    ],
    [
        "\t[input] Value of Wire # 319 :: a3\n",
        11.810481548309326,
        28.78
    ],
    [
        "\t[input] Value of Wire # 328 :: 2f\n",
        11.825665712356567,
        28.8
    ],
    [
        "\t[input] Value of Wire # 337 :: d4\n",
        11.838797330856323,
        28.810000000000002
    ],
    [
        "\t[input] Value of Wire # 346 :: 0\n",
        11.852769613265991,
        28.830000000000002
    ],
    [
        "\t[input] Value of Wire # 355 :: 0\n",
        11.920933723449707,
        29.45
    ],
    [
        "\t[input] Value of Wire # 364 :: 0\n",
        11.936798334121704,
        29.5
    ],
    [
        "\t[input] Value of Wire # 373 :: 0\n",
        11.950499534606934,
        29.52
    ],
    [
        "\t[input] Value of Wire # 382 :: 0\n",
        11.964787244796753,
        29.57
    ],
    [
        "\t[input] Value of Wire # 391 :: 0\n",
        11.980560779571533,
        29.61
    ],
    [
        "\t[input] Value of Wire # 400 :: 0\n",
        11.996432542800903,
        29.650000000000002
    ],
    [
        "\t[input] Value of Wire # 409 :: 0\n",
        12.01250696182251,
        29.7
    ],
    [
        "\t[input] Value of Wire # 418 :: 0\n",
        12.028435945510864,
        29.73
    ],
    [
        "\t[input] Value of Wire # 427 :: 0\n",
        12.045904159545898,
        29.77
    ],
    [
        "\t[input] Value of Wire # 436 :: 0\n",
        12.062037706375122,
        29.8
    ],
    [
        "\t[input] Value of Wire # 445 :: 0\n",
        12.080200672149658,
        29.830000000000002
    ],
    [
        "\t[input] Value of Wire # 454 :: 0\n",
        12.096649408340454,
        29.86
    ],
    [
        "Done",
        12.208945989608765,
        29.880000000000003
    ]
]