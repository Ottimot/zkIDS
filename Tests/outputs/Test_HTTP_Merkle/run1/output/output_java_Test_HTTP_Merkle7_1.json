[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.7513208389282227
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.427391767501831
    ],
    [
        "Num of variable reads = 1480\n",
        1.437063455581665
    ],
    [
        "Num of conditional writes = 0\n",
        1.446364402770996
    ],
    [
        "Num of words per element = 1\n",
        1.4565536975860596
    ],
    [
        "Num of variable writes = 0\n",
        1.467287540435791
    ],
    [
        "num of accesses = 1480\n",
        1.4781785011291504
    ],
    [
        "Packing Option = 1\n",
        1.4888622760772705
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.4999401569366455
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.5124080181121826
    ],
    [
        "done with read only memory solutions!\n",
        2.539867401123047
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.560075044631958
    ],
    [
        "Num of variable reads = 128\n",
        2.5772693157196045
    ],
    [
        "Num of conditional writes = 0\n",
        2.5915682315826416
    ],
    [
        "Num of words per element = 1\n",
        2.6053354740142822
    ],
    [
        "Num of variable writes = 0\n",
        2.619442939758301
    ],
    [
        "num of accesses = 128\n",
        2.6343777179718018
    ],
    [
        "Packing Option = 1\n",
        2.648750066757202
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.6639556884765625
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.6784708499908447
    ],
    [
        "Num of variable reads = 520\n",
        2.69380784034729
    ],
    [
        "Num of conditional writes = 0\n",
        2.708385944366455
    ],
    [
        "Num of words per element = 1\n",
        2.7236642837524414
    ],
    [
        "Num of variable writes = 0\n",
        2.73828387260437
    ],
    [
        "num of accesses = 520\n",
        2.75701642036438
    ],
    [
        "Packing Option = 1\n",
        2.771763801574707
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.787137746810913
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.801605224609375
    ],
    [
        "done with read only memory solutions!\n",
        3.355426788330078
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.370203733444214
    ],
    [
        "Num of variable reads = 128\n",
        3.3840837478637695
    ],
    [
        "Num of conditional writes = 0\n",
        3.400002956390381
    ],
    [
        "Num of words per element = 1\n",
        3.414151668548584
    ],
    [
        "Num of variable writes = 0\n",
        3.429203748703003
    ],
    [
        "num of accesses = 128\n",
        3.4435133934020996
    ],
    [
        "Packing Option = 1\n",
        3.4586949348449707
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.4731879234313965
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.488433361053467
    ],
    [
        "Num of variable reads = 71\n",
        3.502957820892334
    ],
    [
        "Num of conditional writes = 0\n",
        3.5182878971099854
    ],
    [
        "Num of words per element = 1\n",
        3.5400261878967285
    ],
    [
        "Num of variable writes = 0\n",
        3.559081554412842
    ],
    [
        "num of accesses = 71\n",
        3.573971748352051
    ],
    [
        "Packing Option = 1\n",
        3.588245153427124
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.603296995162964
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.6178510189056396
    ],
    [
        "Num of variable reads = 128\n",
        3.6330196857452393
    ],
    [
        "Num of conditional writes = 0\n",
        3.647667169570923
    ],
    [
        "Num of words per element = 1\n",
        3.6626272201538086
    ],
    [
        "Num of variable writes = 0\n",
        3.677669048309326
    ],
    [
        "num of accesses = 128\n",
        3.692291259765625
    ],
    [
        "Packing Option = 0\n",
        3.707672595977783
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.7223012447357178
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.7377336025238037
    ],
    [
        "Num of variable reads = 71\n",
        3.752431631088257
    ],
    [
        "Num of conditional writes = 0\n",
        3.7678914070129395
    ],
    [
        "Num of words per element = 1\n",
        3.783062696456909
    ],
    [
        "Num of variable writes = 0\n",
        3.798281669616699
    ],
    [
        "num of accesses = 71\n",
        3.812851905822754
    ],
    [
        "Packing Option = 1\n",
        3.8283681869506836
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.8463804721832275
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.8610968589782715
    ],
    [
        "Num of variable reads = 128\n",
        3.8752989768981934
    ],
    [
        "Num of conditional writes = 0\n",
        3.890577554702759
    ],
    [
        "Num of words per element = 1\n",
        3.9051198959350586
    ],
    [
        "Num of variable writes = 0\n",
        3.9203994274139404
    ],
    [
        "num of accesses = 128\n",
        3.934713840484619
    ],
    [
        "Packing Option = 0\n",
        3.950237989425659
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.9647185802459717
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.9802820682525635
    ],
    [
        "Num of variable reads = 0\n",
        3.9946682453155518
    ],
    [
        "Num of conditional writes = 0\n",
        4.010082244873047
    ],
    [
        "Num of words per element = 1\n",
        4.0245325565338135
    ],
    [
        "Num of variable writes = 0\n",
        4.03991174697876
    ],
    [
        "num of accesses = 0\n",
        4.054411888122559
    ],
    [
        "Packing Option = 0\n",
        4.069868803024292
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        4.084319114685059
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        4.099570989608765
    ],
    [
        "Num of variable reads = 5160\n",
        4.113903522491455
    ],
    [
        "Num of conditional writes = 0\n",
        4.129230737686157
    ],
    [
        "Num of words per element = 1\n",
        4.147754669189453
    ],
    [
        "Num of variable writes = 0\n",
        4.162420272827148
    ],
    [
        "num of accesses = 5160\n",
        4.176677942276001
    ],
    [
        "Packing Option = 1\n",
        4.191912412643433
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        4.206322908401489
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        4.2220001220703125
    ],
    [
        "done with read only memory solutions!\n",
        4.307267427444458
    ],
    [
        "Phase 1: Analysis Completed!\n",
        4.321443319320679
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        4.3360607624053955
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        9.220568656921387
    ],
    [
        " \t Total Number of Constraints :  1783513\n",
        9.248450517654419
    ],
    [
        "\n",
        9.287600040435791
    ],
    [
        "Instruction queue size: 5723947\n",
        9.326040744781494
    ],
    [
        "Normal execution\n",
        17.42382836341858
    ],
    [
        "Running Sample Run: run71\n",
        17.471623420715332
    ],
    [
        "tls_data.txt\n",
        17.501326084136963
    ],
    [
        "files/proof_7.txt\n",
        17.530673503875732
    ],
    [
        "Url assignment done\n",
        17.561553239822388
    ],
    [
        "Evaluating Input on the circuit \n",
        17.58903932571411
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        17.615291833877563
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        17.641374111175537
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        17.666775465011597
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        17.69261336326599
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        17.71938681602478
    ],
    [
        "\t[input] Value of Wire # 22 :: 1394d7235892198314538ab50701049c72933b32f4e15f197246eaea83b4551a\n",
        17.74622917175293
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        17.77323341369629
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        17.80005979537964
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        17.82721185684204
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        17.854060888290405
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        17.880838871002197
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        17.90784525871277
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        17.934624433517456
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        17.96133804321289
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        17.98793911933899
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        18.01443123817444
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        18.04072618484497
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        18.067223072052002
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        18.094054698944092
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        18.127511262893677
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        18.159039735794067
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        18.18412733078003
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        18.210085153579712
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        18.23666262626648
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        18.263250827789307
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        18.289140224456787
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        18.316516876220703
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        18.34299063682556
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        18.369330644607544
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        18.396082401275635
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        18.422382831573486
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        18.449699640274048
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        18.47811770439148
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        18.504971504211426
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        18.53130006790161
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        18.559564352035522
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        18.587036609649658
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        18.61587905883789
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        18.644479990005493
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        18.672154426574707
    ],
    [
        "\t[input] Value of Wire # 329 :: 2f\n",
        18.701135635375977
    ],
    [
        "\t[input] Value of Wire # 338 :: d4\n",
        18.733436107635498
    ],
    [
        "\t[input] Value of Wire # 347 :: 0\n",
        18.766278505325317
    ],
    [
        "\t[input] Value of Wire # 356 :: 0\n",
        18.945143699645996
    ],
    [
        "\t[input] Value of Wire # 365 :: 0\n",
        18.94525933265686
    ],
    [
        "\t[input] Value of Wire # 374 :: 0\n",
        18.945311784744263
    ],
    [
        "\t[input] Value of Wire # 383 :: 0\n",
        18.94535994529724
    ],
    [
        "\t[input] Value of Wire # 392 :: 0\n",
        18.945406675338745
    ],
    [
        "\t[input] Value of Wire # 401 :: 0\n",
        18.945451974868774
    ],
    [
        "\t[input] Value of Wire # 410 :: 0\n",
        18.945496797561646
    ],
    [
        "\t[input] Value of Wire # 419 :: 0\n",
        18.945542812347412
    ],
    [
        "\t[input] Value of Wire # 428 :: 0\n",
        18.945587158203125
    ],
    [
        "\t[input] Value of Wire # 437 :: 0\n",
        18.945631980895996
    ],
    [
        "\t[input] Value of Wire # 446 :: 0\n",
        18.945677757263184
    ],
    [
        "\t[input] Value of Wire # 455 :: 0\n",
        18.945723295211792
    ],
    [
        "\t[input] Value of Wire # 464 :: 0\n",
        18.94576859474182
    ],
    [
        "\t[input] Value of Wire # 473 :: 0\n",
        18.945814609527588
    ],
    [
        "\t[input] Value of Wire # 482 :: 0\n",
        18.945860385894775
    ],
    [
        "\t[input] Value of Wire # 491 :: 0\n",
        18.945906162261963
    ],
    [
        "\t[input] Value of Wire # 500 :: 0\n",
        18.94595241546631
    ],
    [
        "\t[input] Value of Wire # 509 :: 0\n",
        18.94599747657776
    ],
    [
        "\t[input] Value of Wire # 518 :: 0\n",
        18.946043968200684
    ],
    [
        "\t[input] Value of Wire # 527 :: 0\n",
        18.94608974456787
    ],
    [
        "\t[input] Value of Wire # 536 :: 0\n",
        18.9461350440979
    ],
    [
        "\t[input] Value of Wire # 545 :: 0\n",
        18.946181058883667
    ],
    [
        "\t[input] Value of Wire # 554 :: 0\n",
        18.946226835250854
    ],
    [
        "\t[input] Value of Wire # 563 :: 0\n",
        18.946272373199463
    ],
    [
        "\t[input] Value of Wire # 572 :: 0\n",
        18.94631814956665
    ],
    [
        "\t[input] Value of Wire # 581 :: 0\n",
        18.94636344909668
    ],
    [
        "\t[input] Value of Wire # 590 :: 0\n",
        18.94640874862671
    ],
    [
        "\t[input] Value of Wire # 599 :: 0\n",
        18.946458101272583
    ],
    [
        "\t[input] Value of Wire # 608 :: 0\n",
        18.946505546569824
    ],
    [
        "\t[input] Value of Wire # 617 :: 0\n",
        18.94655132293701
    ],
    [
        "\t[input] Value of Wire # 626 :: 0\n",
        18.94659662246704
    ],
    [
        "\t[input] Value of Wire # 635 :: 0\n",
        18.946642637252808
    ],
    [
        "\t[input] Value of Wire # 644 :: 0\n",
        18.946688652038574
    ],
    [
        "\t[input] Value of Wire # 653 :: 0\n",
        18.946736812591553
    ],
    [
        "\t[input] Value of Wire # 662 :: 0\n",
        18.946786165237427
    ],
    [
        "\t[input] Value of Wire # 671 :: 0\n",
        18.94683599472046
    ],
    [
        "\t[input] Value of Wire # 680 :: 0\n",
        18.946882486343384
    ],
    [
        "\t[input] Value of Wire # 689 :: 0\n",
        18.946930408477783
    ],
    [
        "\t[input] Value of Wire # 698 :: 0\n",
        18.946977376937866
    ],
    [
        "\t[input] Value of Wire # 707 :: 0\n",
        18.947032928466797
    ],
    [
        "\t[input] Value of Wire # 716 :: 0\n",
        18.94708013534546
    ],
    [
        "\t[input] Value of Wire # 725 :: 0\n",
        18.947126626968384
    ],
    [
        "\t[input] Value of Wire # 734 :: 0\n",
        18.94717311859131
    ],
    [
        "\t[input] Value of Wire # 743 :: 0\n",
        18.947219610214233
    ],
    [
        "\t[input] Value of Wire # 752 :: 0\n",
        18.947266340255737
    ],
    [
        "\t[input] Value of Wire # 761 :: 0\n",
        18.947312355041504
    ],
    [
        "\t[input] Value of Wire # 770 :: 0\n",
        18.94735813140869
    ],
    [
        "\t[input] Value of Wire # 779 :: 0\n",
        18.9474036693573
    ],
    [
        "\t[input] Value of Wire # 788 :: 0\n",
        18.947449445724487
    ],
    [
        "\t[input] Value of Wire # 797 :: 0\n",
        18.947495460510254
    ],
    [
        "\t[input] Value of Wire # 806 :: 0\n",
        18.9475417137146
    ],
    [
        "\t[input] Value of Wire # 815 :: 0\n",
        18.947587490081787
    ],
    [
        "\t[input] Value of Wire # 824 :: 0\n",
        18.947633743286133
    ],
    [
        "\t[input] Value of Wire # 833 :: 0\n",
        18.94767999649048
    ],
    [
        "\t[input] Value of Wire # 842 :: 0\n",
        18.947726249694824
    ],
    [
        "\t[input] Value of Wire # 851 :: 0\n",
        18.94777274131775
    ],
    [
        "\t[input] Value of Wire # 860 :: 0\n",
        18.947818279266357
    ],
    [
        "\t[input] Value of Wire # 869 :: 0\n",
        18.947863578796387
    ],
    [
        "\t[input] Value of Wire # 878 :: 0\n",
        18.947909355163574
    ],
    [
        "\t[input] Value of Wire # 887 :: 0\n",
        18.947956085205078
    ],
    [
        "\t[input] Value of Wire # 896 :: 0\n",
        18.948002099990845
    ],
    [
        "\t[input] Value of Wire # 905 :: 0\n",
        18.94804811477661
    ],
    [
        "\t[input] Value of Wire # 914 :: 0\n",
        18.948094129562378
    ],
    [
        "\t[input] Value of Wire # 923 :: 0\n",
        18.948139667510986
    ],
    [
        "\t[input] Value of Wire # 932 :: 0\n",
        18.948185205459595
    ],
    [
        "\t[input] Value of Wire # 941 :: 0\n",
        18.948230028152466
    ],
    [
        "\t[input] Value of Wire # 950 :: 0\n",
        18.948275804519653
    ],
    [
        "\t[input] Value of Wire # 959 :: 0\n",
        18.94832181930542
    ],
    [
        "\t[input] Value of Wire # 968 :: 0\n",
        18.948368310928345
    ],
    [
        "\t[input] Value of Wire # 977 :: 0\n",
        18.94841432571411
    ],
    [
        "\t[input] Value of Wire # 986 :: 0\n",
        18.9484601020813
    ],
    [
        "\t[input] Value of Wire # 995 :: 0\n",
        18.948505878448486
    ],
    [
        "\t[input] Value of Wire # 1004 :: 0\n",
        18.948551654815674
    ],
    [
        "\t[input] Value of Wire # 1013 :: 0\n",
        18.94859743118286
    ],
    [
        "\t[input] Value of Wire # 1022 :: 0\n",
        18.948643684387207
    ],
    [
        "\t[input] Value of Wire # 1031 :: 0\n",
        18.94869112968445
    ],
    [
        "\t[input] Value of Wire # 1040 :: 0\n",
        18.948737859725952
    ],
    [
        "\t[input] Value of Wire # 1049 :: 0\n",
        18.94878625869751
    ],
    [
        "\t[input] Value of Wire # 1058 :: 0\n",
        18.948832273483276
    ],
    [
        "\t[input] Value of Wire # 1067 :: 0\n",
        18.948877811431885
    ],
    [
        "\t[input] Value of Wire # 1076 :: 0\n",
        18.948923587799072
    ],
    [
        "\t[input] Value of Wire # 1085 :: 0\n",
        18.9489688873291
    ],
    [
        "\t[input] Value of Wire # 1094 :: 0\n",
        18.94901442527771
    ],
    [
        "\t[input] Value of Wire # 1103 :: 0\n",
        18.949061155319214
    ],
    [
        "\t[input] Value of Wire # 1112 :: 0\n",
        18.949106693267822
    ],
    [
        "\t[input] Value of Wire # 1121 :: 0\n",
        18.94915246963501
    ],
    [
        "\t[input] Value of Wire # 1130 :: 0\n",
        18.94919753074646
    ],
    [
        "\t[input] Value of Wire # 1139 :: 0\n",
        18.94924306869507
    ],
    [
        "\t[input] Value of Wire # 1148 :: 0\n",
        18.949288606643677
    ],
    [
        "\t[input] Value of Wire # 1157 :: 0\n",
        18.949334383010864
    ],
    [
        "\t[input] Value of Wire # 1166 :: 0\n",
        18.949379920959473
    ],
    [
        "\t[input] Value of Wire # 1175 :: 0\n",
        18.949424982070923
    ],
    [
        "\t[input] Value of Wire # 1184 :: 0\n",
        18.949471473693848
    ],
    [
        "\t[input] Value of Wire # 1193 :: 0\n",
        18.949517488479614
    ],
    [
        "\t[input] Value of Wire # 1202 :: 0\n",
        18.949565410614014
    ],
    [
        "\t[input] Value of Wire # 1211 :: 0\n",
        18.949612140655518
    ],
    [
        "\t[input] Value of Wire # 1220 :: 0\n",
        18.949657917022705
    ],
    [
        "\t[input] Value of Wire # 1229 :: 0\n",
        18.949705123901367
    ],
    [
        "\t[input] Value of Wire # 1238 :: 0\n",
        18.949751615524292
    ],
    [
        "\t[input] Value of Wire # 1247 :: 0\n",
        18.949797868728638
    ],
    [
        "\t[input] Value of Wire # 1256 :: 0\n",
        18.949844121932983
    ],
    [
        "\t[input] Value of Wire # 1265 :: 0\n",
        18.94988989830017
    ],
    [
        "\t[input] Value of Wire # 1274 :: 0\n",
        18.949935913085938
    ],
    [
        "\t[input] Value of Wire # 1283 :: 0\n",
        18.949981927871704
    ],
    [
        "\t[input] Value of Wire # 1292 :: 0\n",
        18.950029134750366
    ],
    [
        "\t[input] Value of Wire # 1301 :: 0\n",
        18.950074911117554
    ],
    [
        "\t[input] Value of Wire # 1310 :: 0\n",
        18.95012068748474
    ],
    [
        "\t[input] Value of Wire # 1319 :: 0\n",
        18.95016622543335
    ],
    [
        "\t[input] Value of Wire # 1328 :: 0\n",
        18.950212001800537
    ],
    [
        "\t[input] Value of Wire # 1337 :: 0\n",
        18.950257301330566
    ],
    [
        "\t[input] Value of Wire # 1346 :: 0\n",
        18.950302600860596
    ],
    [
        "\t[input] Value of Wire # 1355 :: 0\n",
        18.950348615646362
    ],
    [
        "\t[input] Value of Wire # 1364 :: 0\n",
        18.95039463043213
    ],
    [
        "\t[input] Value of Wire # 1373 :: 0\n",
        18.95043969154358
    ],
    [
        "\t[input] Value of Wire # 1382 :: 0\n",
        18.950485229492188
    ],
    [
        "\t[input] Value of Wire # 1391 :: 0\n",
        18.950531244277954
    ],
    [
        "\t[input] Value of Wire # 1400 :: 0\n",
        18.9505774974823
    ],
    [
        "\t[input] Value of Wire # 1409 :: 0\n",
        18.95062279701233
    ],
    [
        "\t[input] Value of Wire # 1418 :: 0\n",
        18.95066809654236
    ],
    [
        "\t[input] Value of Wire # 1427 :: 0\n",
        18.950716257095337
    ],
    [
        "\t[input] Value of Wire # 1436 :: 0\n",
        18.950761556625366
    ],
    [
        "\t[input] Value of Wire # 1445 :: 0\n",
        18.950806856155396
    ],
    [
        "\t[input] Value of Wire # 1454 :: 0\n",
        18.950852155685425
    ],
    [
        "\t[input] Value of Wire # 1463 :: 86\n",
        18.950897932052612
    ],
    [
        "\t[input] Value of Wire # 1472 :: 18\n",
        18.95094347000122
    ],
    [
        "\t[input] Value of Wire # 1481 :: 1e\n",
        18.950989246368408
    ],
    [
        "\t[input] Value of Wire # 1490 :: b4\n",
        18.951043128967285
    ],
    [
        "\t[input] Value of Wire # 1499 :: c8\n",
        18.95108914375305
    ],
    [
        "\t[input] Value of Wire # 1508 :: 95\n",
        18.951136827468872
    ],
    [
        "\t[input] Value of Wire # 1517 :: dd\n",
        18.951183319091797
    ],
    [
        "\t[input] Value of Wire # 1526 :: 89\n",
        18.951229333877563
    ],
    [
        "\t[input] Value of Wire # 1535 :: e0\n",
        18.95127511024475
    ],
    [
        "\t[input] Value of Wire # 1544 :: 23\n",
        18.95132040977478
    ],
    [
        "\t[input] Value of Wire # 1553 :: bf\n",
        18.95136547088623
    ],
    [
        "\t[input] Value of Wire # 1562 :: 41\n",
        18.951411485671997
    ],
    [
        "\t[input] Value of Wire # 1571 :: ab\n",
        18.951457023620605
    ],
    [
        "\t[input] Value of Wire # 1580 :: 54\n",
        18.951502084732056
    ],
    [
        "\t[input] Value of Wire # 1589 :: e1\n",
        18.951550006866455
    ],
    [
        "\t[input] Value of Wire # 1598 :: c4\n",
        18.951598167419434
    ],
    [
        "\t[input] Value of Wire # 1607 :: 3d\n",
        18.95164394378662
    ],
    [
        "\t[input] Value of Wire # 1616 :: 77\n",
        18.951690196990967
    ],
    [
        "\t[input] Value of Wire # 1625 :: d4\n",
        18.95173692703247
    ],
    [
        "\t[input] Value of Wire # 1634 :: 28\n",
        18.95178246498108
    ],
    [
        "\t[input] Value of Wire # 1643 :: b0\n",
        18.95182776451111
    ],
    [
        "\t[input] Value of Wire # 1652 :: 99\n",
        18.951873064041138
    ],
    [
        "\t[input] Value of Wire # 1661 :: 6a\n",
        18.951918601989746
    ],
    [
        "\t[input] Value of Wire # 1670 :: 46\n",
        18.951964378356934
    ],
    [
        "\t[input] Value of Wire # 1679 :: 28\n",
        18.952009677886963
    ],
    [
        "\t[input] Value of Wire # 1688 :: 27\n",
        18.952054977416992
    ],
    [
        "\t[input] Value of Wire # 1697 :: 62\n",
        18.95210027694702
    ],
    [
        "\t[input] Value of Wire # 1706 :: 5e\n",
        18.952147245407104
    ],
    [
        "\t[input] Value of Wire # 1715 :: 12\n",
        18.952192783355713
    ],
    [
        "\t[input] Value of Wire # 1724 :: 3b\n",
        18.9522385597229
    ],
    [
        "\t[input] Value of Wire # 1733 :: 1c\n",
        18.952284336090088
    ],
    [
        "\t[input] Value of Wire # 1742 :: dd\n",
        18.952330350875854
    ],
    [
        "\t[input] Value of Wire # 1751 :: b\n",
        18.952377796173096
    ],
    [
        "\t[input] Value of Wire # 1760 :: 3b\n",
        18.952425241470337
    ],
    [
        "\t[input] Value of Wire # 1769 :: 89\n",
        18.952472686767578
    ],
    [
        "\t[input] Value of Wire # 1778 :: 30\n",
        18.952519178390503
    ],
    [
        "\t[input] Value of Wire # 1787 :: 2f\n",
        18.95256519317627
    ],
    [
        "\t[input] Value of Wire # 1788 :: 70\n",
        18.952612161636353
    ],
    [
        "\t[input] Value of Wire # 1789 :: 69\n",
        18.95266056060791
    ],
    [
        "\t[input] Value of Wire # 1790 :: 70\n",
        18.952706575393677
    ],
    [
        "\t[input] Value of Wire # 1791 :: 70\n",
        18.952752351760864
    ],
    [
        "\t[input] Value of Wire # 1792 :: 6f\n",
        18.95279836654663
    ],
    [
        "\t[input] Value of Wire # 1793 :: d\n",
        18.95284414291382
    ],
    [
        "\t[input] Value of Wire # 1794 :: a\n",
        18.952890634536743
    ],
    [
        "\t[input] Value of Wire # 1795 :: 0\n",
        18.952935934066772
    ],
    [
        "\t[input] Value of Wire # 1796 :: 0\n",
        18.952982187271118
    ],
    [
        "\t[input] Value of Wire # 1797 :: 0\n",
        18.953027725219727
    ],
    [
        "\t[input] Value of Wire # 1798 :: 0\n",
        18.953073263168335
    ],
    [
        "\t[input] Value of Wire # 1799 :: 0\n",
        18.953118801116943
    ],
    [
        "\t[input] Value of Wire # 1800 :: 0\n",
        18.953164100646973
    ],
    [
        "\t[input] Value of Wire # 1801 :: 0\n",
        18.953209400177002
    ],
    [
        "\t[input] Value of Wire # 1802 :: 0\n",
        18.95325517654419
    ],
    [
        "\t[input] Value of Wire # 1803 :: 0\n",
        18.953300714492798
    ],
    [
        "\t[input] Value of Wire # 1804 :: 0\n",
        18.953346729278564
    ],
    [
        "\t[input] Value of Wire # 1805 :: 0\n",
        18.953394174575806
    ],
    [
        "\t[input] Value of Wire # 1806 :: 0\n",
        18.95344042778015
    ],
    [
        "Circuit Output: \n",
        18.95349621772766
    ],
    [
        "474554202f66756e6374696f6e2f72756e20485454502f312e310d0a436c69656e742d546f6b656e3a20617364666768630d0a486f73743a206f6f0d0a4163636570742d456e636f64696e673a20746578742f706c61696e0d0a0d0a6a2cd70f3a7fae8e64992972fe37365e6fa984b739c17d6bd67c08208153a16441758ff00c1dc5ef45df3fa6056c4f46a7cba6cd932b141d3ecb5787b209beb52a39a93c14d0ee892867d3eaff1f6faf71670b52c50226b994165215bab03e5c42bdc48c078a79bd2927aeee9d9d4eca9f7b9a6c088ee5a52e07b5a89db8aeb1a95de741894a8597028511301a59eee62bc3f81daa8c39b6573ee578f1e062c7ef193246d7fc29985886e66f3631b5d43364a98c9800d6f5d110256921a659da801b5ebdc6909b306a09153e93974b6ed2352a983b0b2d5ff751555e3ddc8e9072ae1ef067f9349373047b007206b7a3338e1098cf9eea08c36548dd098d30e52d5b4ed8771997afe84af42c116ebe7e9ed6cd0b13b410cfebab424d1ca1846e423cfa244b68a532a9d4492c39ed09e3dc8cd6393afd83bcf6ab6d5d432cbb9a044896206c0addfae190999ac0478b4c0a75112f9140f5b5ab6ab8e275c3f029a997b7655ff4ad3524773d96d45527a0f7e63502a3fbe7298598b022897a7c35cebd27e3a3008d3e7a63b0bb62c2ce23792d211adbb1a7c7\n",
        18.953550577163696
    ],
    [
        "e61ff9ed60a98adb2d0ac1aabfa8bf2f\n",
        18.953598022460938
    ],
    [
        "819d6f7e7b13c771d0810f7a\n",
        18.953644037246704
    ],
    [
        "1ee3a591c338ecc081ff11ceceeac3d0\n",
        18.953689098358154
    ],
    [
        "1031a2b92f7229c40fe8a4a7\n",
        18.953734636306763
    ],
    [
        "98aae47690ba155be22f5379aee364324cc38ed446475d4d970508993d7f541d\n",
        18.95378041267395
    ],
    [
        "b236b52ef42c913c13d0bbf126b9a63d8c911ad0e8c1594a73a60b63a0e46cae\n",
        18.95382595062256
    ],
    [
        "Evaluation Done \n",
        18.953871726989746
    ],
    [
        "Sample Run: run71 finished!\n",
        18.953917026519775
    ],
    [
        "Done",
        19.160828351974487
    ]
]