[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        2.222597360610962
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.930699110031128
    ],
    [
        "Num of variable reads = 1480\n",
        2.9401533603668213
    ],
    [
        "Num of conditional writes = 0\n",
        2.9498023986816406
    ],
    [
        "Num of words per element = 1\n",
        2.960113048553467
    ],
    [
        "Num of variable writes = 0\n",
        2.970431327819824
    ],
    [
        "num of accesses = 1480\n",
        2.979660987854004
    ],
    [
        "Packing Option = 1\n",
        2.9903171062469482
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        3.001293897628784
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        3.012422561645508
    ],
    [
        "done with read only memory solutions!\n",
        4.037976980209351
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        4.0530006885528564
    ],
    [
        "Num of variable reads = 128\n",
        4.0666420459747314
    ],
    [
        "Num of conditional writes = 0\n",
        4.081212043762207
    ],
    [
        "Num of words per element = 1\n",
        4.095296382904053
    ],
    [
        "Num of variable writes = 0\n",
        4.111248970031738
    ],
    [
        "num of accesses = 128\n",
        4.125575065612793
    ],
    [
        "Packing Option = 1\n",
        4.141071557998657
    ],
    [
        "Decision: Using Network mode for this memory\n",
        4.15540337562561
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        4.170640468597412
    ],
    [
        "Num of variable reads = 520\n",
        4.185225009918213
    ],
    [
        "Num of conditional writes = 0\n",
        4.200458526611328
    ],
    [
        "Num of words per element = 1\n",
        4.214872598648071
    ],
    [
        "Num of variable writes = 0\n",
        4.2332658767700195
    ],
    [
        "num of accesses = 520\n",
        4.24745512008667
    ],
    [
        "Packing Option = 1\n",
        4.262283563613892
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        4.276733160018921
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        4.291309356689453
    ],
    [
        "done with read only memory solutions!\n",
        4.827561616897583
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        4.84199333190918
    ],
    [
        "Num of variable reads = 128\n",
        4.856247425079346
    ],
    [
        "Num of conditional writes = 0\n",
        4.870435953140259
    ],
    [
        "Num of words per element = 1\n",
        4.884194850921631
    ],
    [
        "Num of variable writes = 0\n",
        4.899015188217163
    ],
    [
        "num of accesses = 128\n",
        4.913363933563232
    ],
    [
        "Packing Option = 1\n",
        4.928428649902344
    ],
    [
        "Decision: Using Network mode for this memory\n",
        4.942825555801392
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        4.957758665084839
    ],
    [
        "Num of variable reads = 71\n",
        4.975549697875977
    ],
    [
        "Num of conditional writes = 0\n",
        4.991325855255127
    ],
    [
        "Num of words per element = 1\n",
        5.005726099014282
    ],
    [
        "Num of variable writes = 0\n",
        5.020733594894409
    ],
    [
        "num of accesses = 71\n",
        5.0351622104644775
    ],
    [
        "Packing Option = 1\n",
        5.050170421600342
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        5.064659595489502
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        5.079705476760864
    ],
    [
        "Num of variable reads = 128\n",
        5.0942347049713135
    ],
    [
        "Num of conditional writes = 0\n",
        5.109250068664551
    ],
    [
        "Num of words per element = 1\n",
        5.123920202255249
    ],
    [
        "Num of variable writes = 0\n",
        5.139463663101196
    ],
    [
        "num of accesses = 128\n",
        5.155564069747925
    ],
    [
        "Packing Option = 0\n",
        5.17144513130188
    ],
    [
        "Decision: Using Network mode for this memory\n",
        5.187720537185669
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        5.2027037143707275
    ],
    [
        "Num of variable reads = 71\n",
        5.217863321304321
    ],
    [
        "Num of conditional writes = 0\n",
        5.23309326171875
    ],
    [
        "Num of words per element = 1\n",
        5.2478392124176025
    ],
    [
        "Num of variable writes = 0\n",
        5.26322865486145
    ],
    [
        "num of accesses = 71\n",
        5.280818939208984
    ],
    [
        "Packing Option = 1\n",
        5.297576427459717
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        5.311875104904175
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        5.326803207397461
    ],
    [
        "Num of variable reads = 128\n",
        5.341109991073608
    ],
    [
        "Num of conditional writes = 0\n",
        5.355633735656738
    ],
    [
        "Num of words per element = 1\n",
        5.370593547821045
    ],
    [
        "Num of variable writes = 0\n",
        5.385125398635864
    ],
    [
        "num of accesses = 128\n",
        5.399874448776245
    ],
    [
        "Packing Option = 0\n",
        5.414641618728638
    ],
    [
        "Decision: Using Network mode for this memory\n",
        5.4291980266571045
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        5.443662166595459
    ],
    [
        "Num of variable reads = 0\n",
        5.45869255065918
    ],
    [
        "Num of conditional writes = 0\n",
        5.473273038864136
    ],
    [
        "Num of words per element = 1\n",
        5.488384485244751
    ],
    [
        "Num of variable writes = 0\n",
        5.5028510093688965
    ],
    [
        "num of accesses = 0\n",
        5.517971754074097
    ],
    [
        "Packing Option = 0\n",
        5.532561540603638
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        5.547792673110962
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        5.562064170837402
    ],
    [
        "Num of variable reads = 5160\n",
        5.581262111663818
    ],
    [
        "Num of conditional writes = 0\n",
        5.595809459686279
    ],
    [
        "Num of words per element = 1\n",
        5.611147403717041
    ],
    [
        "Num of variable writes = 0\n",
        5.625484943389893
    ],
    [
        "num of accesses = 5160\n",
        5.640872478485107
    ],
    [
        "Packing Option = 1\n",
        5.65527868270874
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        5.671378135681152
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        5.685838937759399
    ],
    [
        "done with read only memory solutions!\n",
        5.742093086242676
    ],
    [
        "Phase 1: Analysis Completed!\n",
        5.75618314743042
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        5.771478176116943
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        10.881429195404053
    ],
    [
        " \t Total Number of Constraints :  1783997\n",
        10.917287349700928
    ],
    [
        "\n",
        10.94539737701416
    ],
    [
        "Instruction queue size: 5726777\n",
        10.970686912536621
    ],
    [
        "Normal execution\n",
        18.89305353164673
    ],
    [
        "Running Sample Run: run91\n",
        18.92713212966919
    ],
    [
        "tls_data.txt\n",
        18.958292722702026
    ],
    [
        "files/proof_9.txt\n",
        18.986640691757202
    ],
    [
        "Url assignment done\n",
        19.01777935028076
    ],
    [
        "Evaluating Input on the circuit \n",
        19.05663752555847
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        19.090946912765503
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        19.125110864639282
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        19.15984606742859
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        19.191842079162598
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        19.215324878692627
    ],
    [
        "\t[input] Value of Wire # 22 :: 821873ff3e7a33e8b5a61d089998c9a82e50bd5a8f722a8c50b187e48860bfd\n",
        19.240101099014282
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        19.265190839767456
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        19.290603637695312
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        19.316445112228394
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        19.342743635177612
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        19.39109516143799
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        19.415055751800537
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        19.44035291671753
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        19.46624994277954
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        19.49312925338745
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        19.54205060005188
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        19.57645893096924
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        19.602340936660767
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        19.628484964370728
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        19.654540538787842
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        19.68783211708069
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        19.729936361312866
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        19.754255294799805
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        19.779908180236816
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        19.805946826934814
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        19.846453189849854
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        19.872461557388306
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        19.89797019958496
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        19.923781156539917
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        19.949870586395264
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        19.99011468887329
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        20.01569676399231
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        20.042434453964233
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        20.070022344589233
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        20.096111536026
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        20.121685028076172
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        20.148749589920044
    ],
    [
        "\t[input] Value of Wire # 302 :: 99\n",
        20.176105260849
    ],
    [
        "\t[input] Value of Wire # 311 :: cf\n",
        20.203044652938843
    ],
    [
        "\t[input] Value of Wire # 320 :: a3\n",
        20.234163284301758
    ],
    [
        "\t[input] Value of Wire # 329 :: 2f\n",
        20.266807556152344
    ],
    [
        "\t[input] Value of Wire # 338 :: d4\n",
        20.29789924621582
    ],
    [
        "\t[input] Value of Wire # 347 :: 0\n",
        20.470661878585815
    ],
    [
        "\t[input] Value of Wire # 356 :: 0\n",
        20.470776796340942
    ],
    [
        "\t[input] Value of Wire # 365 :: 0\n",
        20.470829963684082
    ],
    [
        "\t[input] Value of Wire # 374 :: 0\n",
        20.47087788581848
    ],
    [
        "\t[input] Value of Wire # 383 :: 0\n",
        20.470924615859985
    ],
    [
        "\t[input] Value of Wire # 392 :: 0\n",
        20.470970392227173
    ],
    [
        "\t[input] Value of Wire # 401 :: 0\n",
        20.471015691757202
    ],
    [
        "\t[input] Value of Wire # 410 :: 0\n",
        20.47106099128723
    ],
    [
        "\t[input] Value of Wire # 419 :: 0\n",
        20.471107721328735
    ],
    [
        "\t[input] Value of Wire # 428 :: 0\n",
        20.471152544021606
    ],
    [
        "\t[input] Value of Wire # 437 :: 0\n",
        20.471198081970215
    ],
    [
        "\t[input] Value of Wire # 446 :: 0\n",
        20.47124457359314
    ],
    [
        "\t[input] Value of Wire # 455 :: 0\n",
        20.471291303634644
    ],
    [
        "\t[input] Value of Wire # 464 :: 0\n",
        20.471339464187622
    ],
    [
        "\t[input] Value of Wire # 473 :: 0\n",
        20.47138524055481
    ],
    [
        "\t[input] Value of Wire # 482 :: 0\n",
        20.47143292427063
    ],
    [
        "\t[input] Value of Wire # 491 :: 0\n",
        20.471479415893555
    ],
    [
        "\t[input] Value of Wire # 500 :: 0\n",
        20.471526622772217
    ],
    [
        "\t[input] Value of Wire # 509 :: 0\n",
        20.471572637557983
    ],
    [
        "\t[input] Value of Wire # 518 :: 0\n",
        20.47161841392517
    ],
    [
        "\t[input] Value of Wire # 527 :: 0\n",
        20.47166919708252
    ],
    [
        "\t[input] Value of Wire # 536 :: 0\n",
        20.471725702285767
    ],
    [
        "\t[input] Value of Wire # 545 :: 0\n",
        20.471776247024536
    ],
    [
        "\t[input] Value of Wire # 554 :: 0\n",
        20.47182273864746
    ],
    [
        "\t[input] Value of Wire # 563 :: 0\n",
        20.471869230270386
    ],
    [
        "\t[input] Value of Wire # 572 :: 0\n",
        20.471914768218994
    ],
    [
        "\t[input] Value of Wire # 581 :: 0\n",
        20.471959829330444
    ],
    [
        "\t[input] Value of Wire # 590 :: 0\n",
        20.472005605697632
    ],
    [
        "\t[input] Value of Wire # 599 :: 0\n",
        20.47205138206482
    ],
    [
        "\t[input] Value of Wire # 608 :: 0\n",
        20.472097158432007
    ],
    [
        "\t[input] Value of Wire # 617 :: 0\n",
        20.472142934799194
    ],
    [
        "\t[input] Value of Wire # 626 :: 0\n",
        20.472188711166382
    ],
    [
        "\t[input] Value of Wire # 635 :: 0\n",
        20.47223448753357
    ],
    [
        "\t[input] Value of Wire # 644 :: 0\n",
        20.472280502319336
    ],
    [
        "\t[input] Value of Wire # 653 :: 0\n",
        20.47232961654663
    ],
    [
        "\t[input] Value of Wire # 662 :: 0\n",
        20.472376108169556
    ],
    [
        "\t[input] Value of Wire # 671 :: 0\n",
        20.472421646118164
    ],
    [
        "\t[input] Value of Wire # 680 :: 0\n",
        20.472467184066772
    ],
    [
        "\t[input] Value of Wire # 689 :: 0\n",
        20.47251272201538
    ],
    [
        "\t[input] Value of Wire # 698 :: 0\n",
        20.472557544708252
    ],
    [
        "\t[input] Value of Wire # 707 :: 0\n",
        20.47260308265686
    ],
    [
        "\t[input] Value of Wire # 716 :: 0\n",
        20.47264790534973
    ],
    [
        "\t[input] Value of Wire # 725 :: 0\n",
        20.47269368171692
    ],
    [
        "\t[input] Value of Wire # 734 :: 0\n",
        20.472739696502686
    ],
    [
        "\t[input] Value of Wire # 743 :: 0\n",
        20.472784996032715
    ],
    [
        "\t[input] Value of Wire # 752 :: 0\n",
        20.472830772399902
    ],
    [
        "\t[input] Value of Wire # 761 :: 0\n",
        20.47287607192993
    ],
    [
        "\t[input] Value of Wire # 770 :: 0\n",
        20.472921133041382
    ],
    [
        "\t[input] Value of Wire # 779 :: 0\n",
        20.47296643257141
    ],
    [
        "\t[input] Value of Wire # 788 :: 0\n",
        20.47301197052002
    ],
    [
        "\t[input] Value of Wire # 797 :: 0\n",
        20.47305917739868
    ],
    [
        "\t[input] Value of Wire # 806 :: 0\n",
        20.47310519218445
    ],
    [
        "\t[input] Value of Wire # 815 :: 0\n",
        20.473151683807373
    ],
    [
        "\t[input] Value of Wire # 824 :: 0\n",
        20.47319793701172
    ],
    [
        "\t[input] Value of Wire # 833 :: 0\n",
        20.47324562072754
    ],
    [
        "\t[input] Value of Wire # 842 :: 0\n",
        20.473291158676147
    ],
    [
        "\t[input] Value of Wire # 851 :: 0\n",
        20.473336458206177
    ],
    [
        "\t[input] Value of Wire # 860 :: 0\n",
        20.47338318824768
    ],
    [
        "\t[input] Value of Wire # 869 :: 0\n",
        20.473429441452026
    ],
    [
        "\t[input] Value of Wire # 878 :: 0\n",
        20.47347617149353
    ],
    [
        "\t[input] Value of Wire # 887 :: 0\n",
        20.473522663116455
    ],
    [
        "\t[input] Value of Wire # 896 :: 0\n",
        20.473568201065063
    ],
    [
        "\t[input] Value of Wire # 905 :: 0\n",
        20.473613739013672
    ],
    [
        "\t[input] Value of Wire # 914 :: 0\n",
        20.47365975379944
    ],
    [
        "\t[input] Value of Wire # 923 :: 0\n",
        20.473706007003784
    ],
    [
        "\t[input] Value of Wire # 932 :: 0\n",
        20.47375202178955
    ],
    [
        "\t[input] Value of Wire # 941 :: 0\n",
        20.47379755973816
    ],
    [
        "\t[input] Value of Wire # 950 :: 0\n",
        20.473843336105347
    ],
    [
        "\t[input] Value of Wire # 959 :: 0\n",
        20.473888635635376
    ],
    [
        "\t[input] Value of Wire # 968 :: 0\n",
        20.473934412002563
    ],
    [
        "\t[input] Value of Wire # 977 :: 0\n",
        20.473979949951172
    ],
    [
        "\t[input] Value of Wire # 986 :: 0\n",
        20.47402548789978
    ],
    [
        "\t[input] Value of Wire # 995 :: 0\n",
        20.47407078742981
    ],
    [
        "\t[input] Value of Wire # 1004 :: 0\n",
        20.474116325378418
    ],
    [
        "\t[input] Value of Wire # 1013 :: 0\n",
        20.474162101745605
    ],
    [
        "\t[input] Value of Wire # 1022 :: 0\n",
        20.47420907020569
    ],
    [
        "\t[input] Value of Wire # 1031 :: 0\n",
        20.474257946014404
    ],
    [
        "\t[input] Value of Wire # 1040 :: 0\n",
        20.47430396080017
    ],
    [
        "\t[input] Value of Wire # 1049 :: 0\n",
        20.47434949874878
    ],
    [
        "\t[input] Value of Wire # 1058 :: 0\n",
        20.474395036697388
    ],
    [
        "\t[input] Value of Wire # 1067 :: 0\n",
        20.474440574645996
    ],
    [
        "\t[input] Value of Wire # 1076 :: 0\n",
        20.474486112594604
    ],
    [
        "\t[input] Value of Wire # 1085 :: 0\n",
        20.474531412124634
    ],
    [
        "\t[input] Value of Wire # 1094 :: 0\n",
        20.47457718849182
    ],
    [
        "\t[input] Value of Wire # 1103 :: 0\n",
        20.474623918533325
    ],
    [
        "\t[input] Value of Wire # 1112 :: 0\n",
        20.474669933319092
    ],
    [
        "\t[input] Value of Wire # 1121 :: 0\n",
        20.47471594810486
    ],
    [
        "\t[input] Value of Wire # 1130 :: 0\n",
        20.474761962890625
    ],
    [
        "\t[input] Value of Wire # 1139 :: 0\n",
        20.47480821609497
    ],
    [
        "\t[input] Value of Wire # 1148 :: 0\n",
        20.474854707717896
    ],
    [
        "\t[input] Value of Wire # 1157 :: 0\n",
        20.474902391433716
    ],
    [
        "\t[input] Value of Wire # 1166 :: 0\n",
        20.474948167800903
    ],
    [
        "\t[input] Value of Wire # 1175 :: 0\n",
        20.474994659423828
    ],
    [
        "\t[input] Value of Wire # 1184 :: 0\n",
        20.475040912628174
    ],
    [
        "\t[input] Value of Wire # 1193 :: 0\n",
        20.4750874042511
    ],
    [
        "\t[input] Value of Wire # 1202 :: 0\n",
        20.47513484954834
    ],
    [
        "\t[input] Value of Wire # 1211 :: 0\n",
        20.475181341171265
    ],
    [
        "\t[input] Value of Wire # 1220 :: 0\n",
        20.47522759437561
    ],
    [
        "\t[input] Value of Wire # 1229 :: 0\n",
        20.475273609161377
    ],
    [
        "\t[input] Value of Wire # 1238 :: 0\n",
        20.475319385528564
    ],
    [
        "\t[input] Value of Wire # 1247 :: 0\n",
        20.475364685058594
    ],
    [
        "\t[input] Value of Wire # 1256 :: 0\n",
        20.47541069984436
    ],
    [
        "\t[input] Value of Wire # 1265 :: 0\n",
        20.475456714630127
    ],
    [
        "\t[input] Value of Wire # 1274 :: 0\n",
        20.475502490997314
    ],
    [
        "\t[input] Value of Wire # 1283 :: 0\n",
        20.475548267364502
    ],
    [
        "\t[input] Value of Wire # 1292 :: 0\n",
        20.475594758987427
    ],
    [
        "\t[input] Value of Wire # 1301 :: 0\n",
        20.475640535354614
    ],
    [
        "\t[input] Value of Wire # 1310 :: 0\n",
        20.47568655014038
    ],
    [
        "\t[input] Value of Wire # 1319 :: 0\n",
        20.475741147994995
    ],
    [
        "\t[input] Value of Wire # 1328 :: 0\n",
        20.47578763961792
    ],
    [
        "\t[input] Value of Wire # 1337 :: 0\n",
        20.47583532333374
    ],
    [
        "\t[input] Value of Wire # 1346 :: 0\n",
        20.475881814956665
    ],
    [
        "\t[input] Value of Wire # 1355 :: 0\n",
        20.47592830657959
    ],
    [
        "\t[input] Value of Wire # 1364 :: 0\n",
        20.47597622871399
    ],
    [
        "\t[input] Value of Wire # 1373 :: 0\n",
        20.476022243499756
    ],
    [
        "\t[input] Value of Wire # 1382 :: 0\n",
        20.476068019866943
    ],
    [
        "\t[input] Value of Wire # 1391 :: 0\n",
        20.47611355781555
    ],
    [
        "\t[input] Value of Wire # 1400 :: 0\n",
        20.476160764694214
    ],
    [
        "\t[input] Value of Wire # 1409 :: 0\n",
        20.47620987892151
    ],
    [
        "\t[input] Value of Wire # 1418 :: 0\n",
        20.476255893707275
    ],
    [
        "\t[input] Value of Wire # 1427 :: 0\n",
        20.476301193237305
    ],
    [
        "\t[input] Value of Wire # 1436 :: 0\n",
        20.476346969604492
    ],
    [
        "\t[input] Value of Wire # 1445 :: 0\n",
        20.47639226913452
    ],
    [
        "\t[input] Value of Wire # 1454 :: 0\n",
        20.476438283920288
    ],
    [
        "\t[input] Value of Wire # 1463 :: 86\n",
        20.476483821868896
    ],
    [
        "\t[input] Value of Wire # 1472 :: 18\n",
        20.476529598236084
    ],
    [
        "\t[input] Value of Wire # 1481 :: 1e\n",
        20.47657537460327
    ],
    [
        "\t[input] Value of Wire # 1490 :: b4\n",
        20.47662115097046
    ],
    [
        "\t[input] Value of Wire # 1499 :: c8\n",
        20.476667165756226
    ],
    [
        "\t[input] Value of Wire # 1508 :: 95\n",
        20.47671365737915
    ],
    [
        "\t[input] Value of Wire # 1517 :: dd\n",
        20.476759910583496
    ],
    [
        "\t[input] Value of Wire # 1526 :: 89\n",
        20.476805925369263
    ],
    [
        "\t[input] Value of Wire # 1535 :: e0\n",
        20.47685170173645
    ],
    [
        "\t[input] Value of Wire # 1544 :: 23\n",
        20.47689723968506
    ],
    [
        "\t[input] Value of Wire # 1553 :: bf\n",
        20.476943969726562
    ],
    [
        "\t[input] Value of Wire # 1562 :: 41\n",
        20.47698998451233
    ],
    [
        "\t[input] Value of Wire # 1571 :: ab\n",
        20.477035522460938
    ],
    [
        "\t[input] Value of Wire # 1580 :: 54\n",
        20.477080583572388
    ],
    [
        "\t[input] Value of Wire # 1589 :: e1\n",
        20.477126121520996
    ],
    [
        "\t[input] Value of Wire # 1598 :: c4\n",
        20.477171897888184
    ],
    [
        "\t[input] Value of Wire # 1607 :: 3d\n",
        20.477217435836792
    ],
    [
        "\t[input] Value of Wire # 1616 :: 77\n",
        20.47726321220398
    ],
    [
        "\t[input] Value of Wire # 1625 :: d4\n",
        20.477309703826904
    ],
    [
        "\t[input] Value of Wire # 1634 :: 28\n",
        20.47735619544983
    ],
    [
        "\t[input] Value of Wire # 1643 :: b0\n",
        20.47740364074707
    ],
    [
        "\t[input] Value of Wire # 1652 :: 99\n",
        20.477449417114258
    ],
    [
        "\t[input] Value of Wire # 1661 :: 6a\n",
        20.477495193481445
    ],
    [
        "\t[input] Value of Wire # 1670 :: 46\n",
        20.477541208267212
    ],
    [
        "\t[input] Value of Wire # 1679 :: 28\n",
        20.4775869846344
    ],
    [
        "\t[input] Value of Wire # 1688 :: 27\n",
        20.47763228416443
    ],
    [
        "\t[input] Value of Wire # 1697 :: 62\n",
        20.477678060531616
    ],
    [
        "\t[input] Value of Wire # 1706 :: 5e\n",
        20.477724075317383
    ],
    [
        "\t[input] Value of Wire # 1715 :: 12\n",
        20.47777009010315
    ],
    [
        "\t[input] Value of Wire # 1724 :: 3b\n",
        20.477816581726074
    ],
    [
        "\t[input] Value of Wire # 1733 :: 1c\n",
        20.477862119674683
    ],
    [
        "\t[input] Value of Wire # 1742 :: dd\n",
        20.477907419204712
    ],
    [
        "\t[input] Value of Wire # 1751 :: b\n",
        20.47795271873474
    ],
    [
        "\t[input] Value of Wire # 1760 :: 3b\n",
        20.47799777984619
    ],
    [
        "\t[input] Value of Wire # 1769 :: 89\n",
        20.47804355621338
    ],
    [
        "\t[input] Value of Wire # 1778 :: 30\n",
        20.478090286254883
    ],
    [
        "\t[input] Value of Wire # 1787 :: 2f\n",
        20.478137969970703
    ],
    [
        "\t[input] Value of Wire # 1788 :: 70\n",
        20.47818350791931
    ],
    [
        "\t[input] Value of Wire # 1789 :: 69\n",
        20.478229522705078
    ],
    [
        "\t[input] Value of Wire # 1790 :: 70\n",
        20.478275060653687
    ],
    [
        "\t[input] Value of Wire # 1791 :: 70\n",
        20.478320837020874
    ],
    [
        "\t[input] Value of Wire # 1792 :: 6f\n",
        20.478368282318115
    ],
    [
        "\t[input] Value of Wire # 1793 :: d\n",
        20.478414297103882
    ],
    [
        "\t[input] Value of Wire # 1794 :: a\n",
        20.47846031188965
    ],
    [
        "\t[input] Value of Wire # 1795 :: 0\n",
        20.478505849838257
    ],
    [
        "\t[input] Value of Wire # 1796 :: 0\n",
        20.478553295135498
    ],
    [
        "\t[input] Value of Wire # 1797 :: 0\n",
        20.478599786758423
    ],
    [
        "\t[input] Value of Wire # 1798 :: 0\n",
        20.478646516799927
    ],
    [
        "\t[input] Value of Wire # 1799 :: 0\n",
        20.478692531585693
    ],
    [
        "\t[input] Value of Wire # 1800 :: 0\n",
        20.47873830795288
    ],
    [
        "\t[input] Value of Wire # 1801 :: 0\n",
        20.478784561157227
    ],
    [
        "\t[input] Value of Wire # 1802 :: 0\n",
        20.478830337524414
    ],
    [
        "\t[input] Value of Wire # 1803 :: 0\n",
        20.478875637054443
    ],
    [
        "\t[input] Value of Wire # 1804 :: 0\n",
        20.47892165184021
    ],
    [
        "\t[input] Value of Wire # 1805 :: 0\n",
        20.47896909713745
    ],
    [
        "\t[input] Value of Wire # 1806 :: 0\n",
        20.479015350341797
    ],
    [
        "Circuit Output: \n",
        20.479071378707886
    ],
    [
        "474554202f66756e6374696f6e2f72756e20485454502f312e310d0a436c69656e742d546f6b656e3a20617364666768630d0a486f73743a206f6f0d0a4163636570742d456e636f64696e673a20746578742f706c61696e0d0a0d0a6a2cd70f3a7fae8e64992972fe37365e6fa984b739c17d6bd67c08208153a16441758ff00c1dc5ef45df3fa6056c4f46a7cba6cd932b141d3ecb5787b209beb52a39a93c14d0ee892867d3eaff1f6faf71670b52c50226b994165215bab03e5c42bdc48c078a79bd2927aeee9d9d4eca9f7b9a6c088ee5a52e07b5a89db8aeb1a95de741894a8597028511301a59eee62bc3f81daa8c39b6573ee578f1e062c7ef193246d7fc29985886e66f3631b5d43364a98c9800d6f5d110256921a659da801b5ebdc6909b306a09153e93974b6ed2352a983b0b2d5ff751555e3ddc8e9072ae1ef067f9349373047b007206b7a3338e1098cf9eea08c36548dd098d30e52d5b4ed8771997afe84af42c116ebe7e9ed6cd0b13b410cfebab424d1ca1846e423cfa244b68a532a9d4492c39ed09e3dc8cd6393afd83bcf6ab6d5d432cbb9a044896206c0addfae190999ac0478b4c0a75112f9140f5b5ab6ab8e275c3f029a997b7655ff4ad3524773d96d45527a0f7e63502a3fbe7298598b022897a7c35cebd27e3a3008d3e7a63b0bb62c2ce23792d211adbb1a7c7\n",
        20.47912621498108
    ],
    [
        "e61ff9ed60a98adb2d0ac1aabfa8bf2f\n",
        20.47917342185974
    ],
    [
        "819d6f7e7b13c771d0810f7a\n",
        20.47921872138977
    ],
    [
        "1ee3a591c338ecc081ff11ceceeac3d0\n",
        20.47926425933838
    ],
    [
        "1031a2b92f7229c40fe8a4a7\n",
        20.47930908203125
    ],
    [
        "98aae47690ba155be22f5379aee364324cc38ed446475d4d970508993d7f541d\n",
        20.47935461997986
    ],
    [
        "b236b52ef42c913c13d0bbf126b9a63d8c911ad0e8c1594a73a60b63a0e46cae\n",
        20.479400157928467
    ],
    [
        "Evaluation Done \n",
        20.479445219039917
    ],
    [
        "Sample Run: run91 finished!\n",
        20.479490280151367
    ],
    [
        "Done",
        20.53174090385437
    ]
]