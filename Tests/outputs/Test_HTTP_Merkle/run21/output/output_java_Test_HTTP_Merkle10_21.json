[
    [
        "Merkle Computation starts now",
        0,
        0
    ],
    [
        "Merkle Proof Computed",
        3.0994415283203125e-06,
        0
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_Merkle >\n",
        0.02337336540222168,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.45096540451049805,
        1.77
    ],
    [
        "Num of variable reads = 1480\n",
        0.45977282524108887,
        1.7999999999999998
    ],
    [
        "Num of conditional writes = 0\n",
        0.4662642478942871,
        1.8399999999999999
    ],
    [
        "Num of words per element = 1\n",
        0.47171807289123535,
        1.85
    ],
    [
        "Num of variable writes = 0\n",
        0.4767739772796631,
        1.87
    ],
    [
        "num of accesses = 1480\n",
        0.4813659191131592,
        1.8900000000000001
    ],
    [
        "Packing Option = 1\n",
        0.48603200912475586,
        1.9
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.49063825607299805,
        1.9300000000000002
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.4953799247741699,
        1.9500000000000002
    ],
    [
        "done with read only memory solutions!\n",
        1.0770461559295654,
        2.95
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.0869379043579102,
        2.9600000000000004
    ],
    [
        "Num of variable reads = 128\n",
        1.0937070846557617,
        2.97
    ],
    [
        "Num of conditional writes = 0\n",
        1.0994205474853516,
        2.98
    ],
    [
        "Num of words per element = 1\n",
        1.1049089431762695,
        2.98
    ],
    [
        "Num of variable writes = 0\n",
        1.1098780632019043,
        2.98
    ],
    [
        "num of accesses = 128\n",
        1.1146211624145508,
        2.99
    ],
    [
        "Packing Option = 1\n",
        1.1192660331726074,
        3.0
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.1239111423492432,
        3.0
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.1284611225128174,
        3.0
    ],
    [
        "Num of variable reads = 520\n",
        1.132981300354004,
        3.0100000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        1.1375517845153809,
        3.0100000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.1426317691802979,
        3.02
    ],
    [
        "Num of variable writes = 0\n",
        1.1474056243896484,
        3.02
    ],
    [
        "num of accesses = 520\n",
        1.1519746780395508,
        3.0300000000000002
    ],
    [
        "Packing Option = 1\n",
        1.1565179824829102,
        3.0300000000000002
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1619482040405273,
        3.0500000000000003
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.1679508686065674,
        3.0500000000000003
    ],
    [
        "done with read only memory solutions!\n",
        1.568737268447876,
        3.48
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5777649879455566,
        3.49
    ],
    [
        "Num of variable reads = 128\n",
        1.5843839645385742,
        3.5
    ],
    [
        "Num of conditional writes = 0\n",
        1.5899286270141602,
        3.5
    ],
    [
        "Num of words per element = 1\n",
        1.595078706741333,
        3.5100000000000002
    ],
    [
        "Num of variable writes = 0\n",
        1.6006841659545898,
        3.5100000000000002
    ],
    [
        "num of accesses = 128\n",
        1.6061983108520508,
        3.52
    ],
    [
        "Packing Option = 1\n",
        1.6111700534820557,
        3.5300000000000002
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6158168315887451,
        3.5300000000000002
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6204626560211182,
        3.5300000000000002
    ],
    [
        "Num of variable reads = 71\n",
        1.6252636909484863,
        3.54
    ],
    [
        "Num of conditional writes = 0\n",
        1.6298911571502686,
        3.54
    ],
    [
        "Num of words per element = 1\n",
        1.634516954421997,
        3.5500000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.639172077178955,
        3.5500000000000003
    ],
    [
        "num of accesses = 71\n",
        1.6445393562316895,
        3.5700000000000003
    ],
    [
        "Packing Option = 1\n",
        1.6504836082458496,
        3.5700000000000003
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.6552515029907227,
        3.58
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6599500179290771,
        3.58
    ],
    [
        "Num of variable reads = 128\n",
        1.6646549701690674,
        3.5900000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.669262409210205,
        3.5900000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.6738836765289307,
        3.5900000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.6786131858825684,
        3.6
    ],
    [
        "num of accesses = 128\n",
        1.6833326816558838,
        3.6100000000000003
    ],
    [
        "Packing Option = 0\n",
        1.6879723072052002,
        3.6100000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6927120685577393,
        3.6100000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6980676651000977,
        3.62
    ],
    [
        "Num of variable reads = 71\n",
        1.7042932510375977,
        3.6300000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.7104506492614746,
        3.6300000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.716691493988037,
        3.64
    ],
    [
        "Num of variable writes = 0\n",
        1.7218689918518066,
        3.64
    ],
    [
        "num of accesses = 71\n",
        1.7267107963562012,
        3.6500000000000004
    ],
    [
        "Packing Option = 1\n",
        1.731351613998413,
        3.6500000000000004
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.7360076904296875,
        3.66
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7408087253570557,
        3.66
    ],
    [
        "Num of variable reads = 128\n",
        1.7456316947937012,
        3.6700000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        1.7511672973632812,
        3.6700000000000004
    ],
    [
        "Num of words per element = 1\n",
        1.7571182250976562,
        3.68
    ],
    [
        "Num of variable writes = 0\n",
        1.7634589672088623,
        3.6900000000000004
    ],
    [
        "num of accesses = 128\n",
        1.7701730728149414,
        3.6900000000000004
    ],
    [
        "Packing Option = 0\n",
        1.7766270637512207,
        3.7
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.782799243927002,
        3.7100000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7892699241638184,
        3.72
    ],
    [
        "Num of variable reads = 0\n",
        1.7962396144866943,
        3.73
    ],
    [
        "Num of conditional writes = 0\n",
        1.8049209117889404,
        3.75
    ],
    [
        "Num of words per element = 1\n",
        1.8122055530548096,
        3.7600000000000002
    ],
    [
        "Num of variable writes = 0\n",
        1.8195326328277588,
        3.7800000000000002
    ],
    [
        "num of accesses = 0\n",
        1.826681137084961,
        3.79
    ],
    [
        "Packing Option = 0\n",
        1.8335249423980713,
        3.79
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.8399755954742432,
        3.8000000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.846175193786621,
        3.81
    ],
    [
        "Num of variable reads = 5160\n",
        1.852402925491333,
        3.8200000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.8588171005249023,
        3.83
    ],
    [
        "Num of words per element = 1\n",
        1.8655040264129639,
        3.8400000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.871840238571167,
        3.85
    ],
    [
        "num of accesses = 5160\n",
        1.8779313564300537,
        3.85
    ],
    [
        "Packing Option = 1\n",
        1.884026050567627,
        3.8600000000000003
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.8905174732208252,
        3.8800000000000003
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.8977062702178955,
        3.8800000000000003
    ],
    [
        "done with read only memory solutions!\n",
        2.07071852684021,
        4.17
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.0795328617095947,
        4.18
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_Merkle >\n",
        2.0871541500091553,
        4.19
    ],
    [
        "Circuit Generation Done for < Test_HTTP_Merkle >  \n",
        4.549756288528442,
        17.48
    ],
    [
        " \t Total Number of Constraints :  1784239\n",
        4.564582109451294,
        17.55
    ],
    [
        "\n",
        4.57854962348938,
        17.61
    ],
    [
        "Instruction queue size: 5728192\n",
        4.592499017715454,
        17.66
    ],
    [
        "Normal execution\n",
        9.439306020736694,
        24.11
    ],
    [
        "Running Sample Run: run101\n",
        9.456570386886597,
        24.12
    ],
    [
        "tls_data.txt\n",
        9.469414949417114,
        24.13
    ],
    [
        "files/proof_10.txt\n",
        9.482483148574829,
        24.14
    ],
    [
        "Url assignment done\n",
        9.495707273483276,
        24.17
    ],
    [
        "Evaluating Input on the circuit \n",
        9.5093834400177,
        24.21
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        9.524539709091187,
        24.27
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        9.539937734603882,
        24.310000000000002
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        9.55478549003601,
        24.34
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        9.570783138275146,
        24.37
    ],
    [
        "\t[input] Value of Wire # 21 :: 6\n",
        9.586995601654053,
        24.39
    ],
    [
        "\t[input] Value of Wire # 22 :: 11418fd811c07f8f7635ee5b9df4d57f47f79218d21e011f380f91daa7aa9e80\n",
        9.6029634475708,
        24.41
    ],
    [
        "\t[input] Value of Wire # 23 :: e3\n",
        9.619844913482666,
        24.43
    ],
    [
        "\t[input] Value of Wire # 32 :: bf\n",
        9.636288166046143,
        24.45
    ],
    [
        "\t[input] Value of Wire # 41 :: a4\n",
        9.656670808792114,
        24.52
    ],
    [
        "\t[input] Value of Wire # 50 :: 1\n",
        9.70071029663086,
        24.95
    ],
    [
        "\t[input] Value of Wire # 59 :: a4\n",
        9.71753740310669,
        24.97
    ],
    [
        "\t[input] Value of Wire # 68 :: 40\n",
        9.733484745025635,
        24.99
    ],
    [
        "\t[input] Value of Wire # 77 :: ed\n",
        9.74987506866455,
        25.009999999999998
    ],
    [
        "\t[input] Value of Wire # 86 :: 41\n",
        9.766421556472778,
        25.029999999999998
    ],
    [
        "\t[input] Value of Wire # 95 :: f\n",
        9.784069299697876,
        25.04
    ],
    [
        "\t[input] Value of Wire # 104 :: 3b\n",
        9.800637006759644,
        25.06
    ],
    [
        "\t[input] Value of Wire # 113 :: d0\n",
        9.817176580429077,
        25.08
    ],
    [
        "\t[input] Value of Wire # 122 :: b2\n",
        9.833527565002441,
        25.099999999999998
    ],
    [
        "\t[input] Value of Wire # 131 :: 5e\n",
        9.851668357849121,
        25.16
    ],
    [
        "\t[input] Value of Wire # 140 :: 1f\n",
        9.869612455368042,
        25.2
    ],
    [
        "\t[input] Value of Wire # 149 :: b7\n",
        9.886770248413086,
        25.23
    ],
    [
        "\t[input] Value of Wire # 158 :: 92\n",
        9.903778314590454,
        25.259999999999998
    ],
    [
        "\t[input] Value of Wire # 167 :: 9f\n",
        9.920310020446777,
        25.279999999999998
    ],
    [
        "\t[input] Value of Wire # 176 :: 37\n",
        9.936851263046265,
        25.299999999999997
    ],
    [
        "\t[input] Value of Wire # 185 :: 6b\n",
        9.953629732131958,
        25.31
    ],
    [
        "\t[input] Value of Wire # 194 :: 74\n",
        9.969834566116333,
        25.33
    ],
    [
        "\t[input] Value of Wire # 203 :: bb\n",
        9.984539985656738,
        25.349999999999998
    ],
    [
        "\t[input] Value of Wire # 212 :: 39\n",
        9.999693393707275,
        25.38
    ],
    [
        "\t[input] Value of Wire # 221 :: 5\n",
        10.014721155166626,
        25.41
    ],
    [
        "\t[input] Value of Wire # 230 :: 2b\n",
        10.028520107269287,
        25.43
    ],
    [
        "\t[input] Value of Wire # 239 :: 43\n",
        10.043355941772461,
        25.459999999999997
    ],
    [
        "\t[input] Value of Wire # 248 :: 1d\n",
        10.05887222290039,
        25.49
    ],
    [
        "\t[input] Value of Wire # 257 :: 93\n",
        10.07427167892456,
        25.529999999999998
    ],
    [
        "\t[input] Value of Wire # 266 :: a9\n",
        10.090592384338379,
        25.54
    ],
    [
        "\t[input] Value of Wire # 275 :: b7\n",
        10.106090307235718,
        25.56
    ],
    [
        "\t[input] Value of Wire # 284 :: f2\n",
        10.122037887573242,
        25.57
    ],
    [
        "\t[input] Value of Wire # 293 :: cb\n",
        10.13784646987915,
        25.59
    ],
    [
        "Done",
        10.237433910369873,
        25.59
    ]
]