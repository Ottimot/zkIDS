[
    [
        "Verification starts now",
        2.384185791015625e-07
    ],
    [
        "Proof received",
        0.00026106834411621094
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < HTTP_Merkle >\n",
        0.023542165756225586,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.40527939796447754,
        1.56
    ],
    [
        "Num of variable reads = 1480\n",
        0.4104647636413574,
        1.58
    ],
    [
        "Num of conditional writes = 0\n",
        0.4141695499420166,
        1.59
    ],
    [
        "Num of words per element = 1\n",
        0.41771364212036133,
        1.61
    ],
    [
        "Num of variable writes = 0\n",
        0.4211595058441162,
        1.6400000000000001
    ],
    [
        "num of accesses = 1480\n",
        0.4245476722717285,
        1.6500000000000001
    ],
    [
        "Packing Option = 1\n",
        0.4279818534851074,
        1.6700000000000002
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.43150806427001953,
        1.6700000000000002
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.4349243640899658,
        1.6800000000000002
    ],
    [
        "done with read only memory solutions!\n",
        1.0428292751312256,
        2.8600000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.046633243560791,
        2.87
    ],
    [
        "Num of variable reads = 128\n",
        1.0503716468811035,
        2.8800000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.054069995880127,
        2.89
    ],
    [
        "Num of words per element = 1\n",
        1.057572364807129,
        2.89
    ],
    [
        "Num of variable writes = 0\n",
        1.0609190464019775,
        2.89
    ],
    [
        "num of accesses = 128\n",
        1.0637092590332031,
        2.89
    ],
    [
        "Packing Option = 1\n",
        1.0664598941802979,
        2.9000000000000004
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.0692617893218994,
        2.9000000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.0720269680023193,
        2.91
    ],
    [
        "Num of variable reads = 520\n",
        1.0747642517089844,
        2.91
    ],
    [
        "Num of conditional writes = 0\n",
        1.0775458812713623,
        2.91
    ],
    [
        "Num of words per element = 1\n",
        1.0804781913757324,
        2.91
    ],
    [
        "Num of variable writes = 0\n",
        1.0832693576812744,
        2.91
    ],
    [
        "num of accesses = 520\n",
        1.0860610008239746,
        2.92
    ],
    [
        "Packing Option = 1\n",
        1.0888168811798096,
        2.92
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.091545820236206,
        2.92
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.094336986541748,
        2.93
    ],
    [
        "done with read only memory solutions!\n",
        1.514936923980713,
        3.3600000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5193662643432617,
        3.3600000000000003
    ],
    [
        "Num of variable reads = 128\n",
        1.524623155593872,
        3.3800000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.529165267944336,
        3.3800000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.5321018695831299,
        3.3800000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.534914255142212,
        3.3800000000000003
    ],
    [
        "num of accesses = 128\n",
        1.5376911163330078,
        3.39
    ],
    [
        "Packing Option = 1\n",
        1.540574312210083,
        3.39
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.5440070629119873,
        3.4000000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.546898603439331,
        3.4000000000000004
    ],
    [
        "Num of variable reads = 71\n",
        1.5496714115142822,
        3.4000000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        1.5524437427520752,
        3.4000000000000004
    ],
    [
        "Num of words per element = 1\n",
        1.5552482604980469,
        3.4000000000000004
    ],
    [
        "Num of variable writes = 0\n",
        1.5580744743347168,
        3.41
    ],
    [
        "num of accesses = 71\n",
        1.5608441829681396,
        3.41
    ],
    [
        "Packing Option = 1\n",
        1.5636317729949951,
        3.41
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.5664165019989014,
        3.42
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5691919326782227,
        3.42
    ],
    [
        "Num of variable reads = 128\n",
        1.571984052658081,
        3.42
    ],
    [
        "Num of conditional writes = 0\n",
        1.5749058723449707,
        3.44
    ],
    [
        "Num of words per element = 1\n",
        1.5778229236602783,
        3.44
    ],
    [
        "Num of variable writes = 0\n",
        1.5806348323822021,
        3.44
    ],
    [
        "num of accesses = 128\n",
        1.5833911895751953,
        3.44
    ],
    [
        "Packing Option = 0\n",
        1.5865330696105957,
        3.4499999999999997
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.589691400527954,
        3.4499999999999997
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5925037860870361,
        3.46
    ],
    [
        "Num of variable reads = 71\n",
        1.5952672958374023,
        3.46
    ],
    [
        "Num of conditional writes = 0\n",
        1.5980384349822998,
        3.46
    ],
    [
        "Num of words per element = 1\n",
        1.600797414779663,
        3.46
    ],
    [
        "Num of variable writes = 0\n",
        1.603560447692871,
        3.46
    ],
    [
        "num of accesses = 71\n",
        1.6063978672027588,
        3.4699999999999998
    ],
    [
        "Packing Option = 1\n",
        1.609210729598999,
        3.4699999999999998
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.612011432647705,
        3.48
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6148545742034912,
        3.48
    ],
    [
        "Num of variable reads = 128\n",
        1.6176841259002686,
        3.48
    ],
    [
        "Num of conditional writes = 0\n",
        1.620483636856079,
        3.48
    ],
    [
        "Num of words per element = 1\n",
        1.6233024597167969,
        3.48
    ],
    [
        "Num of variable writes = 0\n",
        1.6261508464813232,
        3.4899999999999998
    ],
    [
        "num of accesses = 128\n",
        1.6289527416229248,
        3.4899999999999998
    ],
    [
        "Packing Option = 0\n",
        1.631751298904419,
        3.4899999999999998
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.634535312652588,
        3.5
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6373093128204346,
        3.5
    ],
    [
        "Num of variable reads = 0\n",
        1.640089988708496,
        3.5
    ],
    [
        "Num of conditional writes = 0\n",
        1.642852544784546,
        3.5
    ],
    [
        "Num of words per element = 1\n",
        1.6456186771392822,
        3.51
    ],
    [
        "Num of variable writes = 0\n",
        1.6483879089355469,
        3.51
    ],
    [
        "num of accesses = 0\n",
        1.651132345199585,
        3.51
    ],
    [
        "Packing Option = 0\n",
        1.6538898944854736,
        3.52
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.6566534042358398,
        3.52
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.659409523010254,
        3.52
    ],
    [
        "Num of variable reads = 5160\n",
        1.6621484756469727,
        3.52
    ],
    [
        "Num of conditional writes = 0\n",
        1.664914608001709,
        3.53
    ],
    [
        "Num of words per element = 1\n",
        1.6676740646362305,
        3.53
    ],
    [
        "Num of variable writes = 0\n",
        1.6704254150390625,
        3.53
    ],
    [
        "num of accesses = 5160\n",
        1.6731743812561035,
        3.54
    ],
    [
        "Packing Option = 1\n",
        1.675920009613037,
        3.54
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.6786675453186035,
        3.54
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.6814069747924805,
        3.54
    ],
    [
        "done with read only memory solutions!\n",
        1.9838778972625732,
        3.9899999999999998
    ],
    [
        "Phase 1: Analysis Completed!\n",
        1.9910001754760742,
        4.01
    ],
    [
        "[2nd Phase] Running Circuit Generator for < HTTP_Merkle >\n",
        1.9954116344451904,
        4.0200000000000005
    ],
    [
        "Circuit Generation Done for < HTTP_Merkle >  \n",
        4.3124871253967285,
        15.37
    ],
    [
        " \t Total Number of Constraints :  1782787\n",
        4.3230907917022705,
        15.39
    ],
    [
        "\n",
        4.3335065841674805,
        15.45
    ],
    [
        "Instruction queue size: 5719702\n",
        4.343844890594482,
        15.469999999999999
    ],
    [
        "Generate public inputs only\n",
        9.491519212722778,
        19.939999999999998
    ],
    [
        "Generating public parameters for: 9f1f958208bf39854b90fcf99d4468f7e7c5bfaddc984bbad91325350cd923ef1\n",
        9.502675771713257,
        19.96
    ],
    [
        "../Middlebox/files/transcript_9f1f958208bf39854b90fcf99d4468f7e7c5bfaddc984bbad91325350cd923ef1.txt\n",
        9.509503841400146,
        19.96
    ],
    [
        "../Middlebox/files/merkle_proof_pub.txt\n",
        9.515904426574707,
        19.97
    ],
    [
        "Url assignment done\n",
        9.522453308105469,
        19.98
    ],
    [
        "Sample Run: 9f1f958208bf39854b90fcf99d4468f7e7c5bfaddc984bbad91325350cd923ef1 finished!\n",
        9.529252767562866,
        20.0
    ],
    [
        "1\n",
        9.53624153137207,
        20.01
    ],
    [
        "1768\n",
        9.543396711349487,
        20.02
    ],
    [
        "264\n",
        9.55071496963501,
        20.04
    ],
    [
        "4\n",
        9.558093309402466,
        20.05
    ],
    [
        "11\n",
        9.565511226654053,
        20.06
    ],
    [
        "18765087434070279118326479840333070550893160322590316806400066067763149452870\n",
        9.572805404663086,
        20.07
    ],
    [
        "221\n",
        9.58010196685791,
        20.080000000000002
    ],
    [
        "147\n",
        9.58737301826477,
        20.080000000000002
    ],
    [
        "246\n",
        9.5946626663208,
        20.09
    ],
    [
        "177\n",
        9.601926326751709,
        20.1
    ],
    [
        "166\n",
        9.609243631362915,
        20.1
    ],
    [
        "190\n",
        9.616611957550049,
        20.11
    ],
    [
        "102\n",
        9.669106483459473,
        20.11
    ],
    [
        "243\n",
        9.669236421585083,
        20.11
    ],
    [
        "7\n",
        9.66929006576538,
        20.11
    ],
    [
        "9\n",
        9.669342994689941,
        20.11
    ],
    [
        "245\n",
        9.66939115524292,
        20.11
    ],
    [
        "37\n",
        9.669438600540161,
        20.11
    ],
    [
        "135\n",
        9.669493436813354,
        20.11
    ],
    [
        "53\n",
        9.669540405273438,
        20.11
    ],
    [
        "148\n",
        9.669586420059204,
        20.11
    ],
    [
        "218\n",
        9.669632196426392,
        20.11
    ],
    [
        "2\n",
        9.669677257537842,
        20.11
    ],
    [
        "80\n",
        9.66972279548645,
        20.11
    ],
    [
        "212\n",
        9.66976809501648,
        20.11
    ],
    [
        "126\n",
        9.669814109802246,
        20.11
    ],
    [
        "192\n",
        9.669858932495117,
        20.11
    ],
    [
        "38\n",
        9.669903755187988,
        20.11
    ],
    [
        "12\n",
        9.669951915740967,
        20.11
    ],
    [
        "127\n",
        9.669998168945312,
        20.11
    ],
    [
        "191\n",
        9.670042991638184,
        20.11
    ],
    [
        "187\n",
        9.670087337493896,
        20.11
    ],
    [
        "226\n",
        9.67013144493103,
        20.11
    ],
    [
        "60\n",
        9.670176029205322,
        20.11
    ],
    [
        "10\n",
        9.670221328735352,
        20.11
    ],
    [
        "140\n",
        9.670269250869751,
        20.11
    ],
    [
        "197\n",
        9.670315980911255,
        20.11
    ],
    [
        "76\n",
        9.670361280441284,
        20.11
    ],
    [
        "61\n",
        9.670405864715576,
        20.11
    ],
    [
        "69\n",
        9.670454025268555,
        20.11
    ],
    [
        "175\n",
        9.670498609542847,
        20.11
    ],
    [
        "159\n",
        9.670543670654297,
        20.11
    ],
    [
        "0\n",
        9.670589208602905,
        20.11
    ],
    [
        "0\n",
        9.670634508132935,
        20.11
    ],
    [
        "0\n",
        9.670678853988647,
        20.11
    ],
    [
        "0\n",
        9.670723915100098,
        20.11
    ],
    [
        "0\n",
        9.670768737792969,
        20.11
    ],
    [
        "0\n",
        9.670813798904419,
        20.11
    ],
    [
        "0\n",
        9.670857667922974,
        20.11
    ],
    [
        "0\n",
        9.670902490615845,
        20.11
    ],
    [
        "0\n",
        9.6709463596344,
        20.11
    ],
    [
        "0\n",
        9.67099118232727,
        20.11
    ],
    [
        "0\n",
        9.671035528182983,
        20.11
    ],
    [
        "0\n",
        9.671080112457275,
        20.11
    ],
    [
        "0\n",
        9.671125173568726,
        20.11
    ],
    [
        "0\n",
        9.671174049377441,
        20.11
    ],
    [
        "0\n",
        9.671221256256104,
        20.11
    ],
    [
        "0\n",
        9.671266317367554,
        20.11
    ],
    [
        "0\n",
        9.671310901641846,
        20.11
    ],
    [
        "0\n",
        9.671355485916138,
        20.11
    ],
    [
        "0\n",
        9.671402931213379,
        20.11
    ],
    [
        "0\n",
        9.671447277069092,
        20.11
    ],
    [
        "0\n",
        9.671491861343384,
        20.11
    ],
    [
        "0\n",
        9.67153525352478,
        20.11
    ],
    [
        "0\n",
        9.671579122543335,
        20.11
    ],
    [
        "0\n",
        9.67162275314331,
        20.11
    ],
    [
        "0\n",
        9.671666860580444,
        20.11
    ],
    [
        "0\n",
        9.671710968017578,
        20.11
    ],
    [
        "0\n",
        9.671755313873291,
        20.11
    ],
    [
        "0\n",
        9.671799659729004,
        20.11
    ],
    [
        "0\n",
        9.671843528747559,
        20.11
    ],
    [
        "0\n",
        9.671887159347534,
        20.11
    ],
    [
        "0\n",
        9.67193055152893,
        20.11
    ],
    [
        "0\n",
        9.671989679336548,
        20.11
    ],
    [
        "0\n",
        9.672040462493896,
        20.11
    ],
    [
        "0\n",
        9.672086715698242,
        20.11
    ],
    [
        "0\n",
        9.672132015228271,
        20.11
    ],
    [
        "0\n",
        9.672180414199829,
        20.11
    ],
    [
        "0\n",
        9.672226667404175,
        20.11
    ],
    [
        "0\n",
        9.672271966934204,
        20.11
    ],
    [
        "0\n",
        9.672316789627075,
        20.11
    ],
    [
        "0\n",
        9.672364234924316,
        20.11
    ],
    [
        "0\n",
        9.67240858078003,
        20.11
    ],
    [
        "0\n",
        9.672452926635742,
        20.11
    ],
    [
        "0\n",
        9.672498226165771,
        20.11
    ],
    [
        "0\n",
        9.672542810440063,
        20.11
    ],
    [
        "0\n",
        9.672587156295776,
        20.11
    ],
    [
        "0\n",
        9.67263150215149,
        20.11
    ],
    [
        "0\n",
        9.672675609588623,
        20.11
    ],
    [
        "0\n",
        9.672719478607178,
        20.11
    ],
    [
        "0\n",
        9.672763586044312,
        20.11
    ],
    [
        "0\n",
        9.672807693481445,
        20.11
    ],
    [
        "0\n",
        9.672852277755737,
        20.11
    ],
    [
        "0\n",
        9.672897100448608,
        20.11
    ],
    [
        "0\n",
        9.672941207885742,
        20.11
    ],
    [
        "0\n",
        9.672985315322876,
        20.11
    ],
    [
        "0\n",
        9.673030376434326,
        20.11
    ],
    [
        "0\n",
        9.673074007034302,
        20.11
    ],
    [
        "0\n",
        9.673120975494385,
        20.11
    ],
    [
        "0\n",
        9.673166036605835,
        20.11
    ],
    [
        "0\n",
        9.673210620880127,
        20.11
    ],
    [
        "0\n",
        9.67325472831726,
        20.11
    ],
    [
        "0\n",
        9.673301219940186,
        20.11
    ],
    [
        "0\n",
        9.673345804214478,
        20.11
    ],
    [
        "0\n",
        9.673389673233032,
        20.11
    ],
    [
        "0\n",
        9.673433542251587,
        20.11
    ],
    [
        "0\n",
        9.673476934432983,
        20.11
    ],
    [
        "0\n",
        9.673520803451538,
        20.11
    ],
    [
        "0\n",
        9.673565864562988,
        20.11
    ],
    [
        "0\n",
        9.67361044883728,
        20.11
    ],
    [
        "0\n",
        9.673654794692993,
        20.11
    ],
    [
        "0\n",
        9.67369818687439,
        20.11
    ],
    [
        "0\n",
        9.673742771148682,
        20.11
    ],
    [
        "0\n",
        9.673787117004395,
        20.11
    ],
    [
        "0\n",
        9.673831701278687,
        20.11
    ],
    [
        "0\n",
        9.6738760471344,
        20.11
    ],
    [
        "0\n",
        9.673919916152954,
        20.11
    ],
    [
        "0\n",
        9.673964262008667,
        20.11
    ],
    [
        "0\n",
        9.674009561538696,
        20.11
    ],
    [
        "0\n",
        9.674057483673096,
        20.11
    ],
    [
        "0\n",
        9.674102544784546,
        20.11
    ],
    [
        "0\n",
        9.674147129058838,
        20.11
    ],
    [
        "0\n",
        9.674192190170288,
        20.11
    ],
    [
        "0\n",
        9.67423939704895,
        20.11
    ],
    [
        "0\n",
        9.674283981323242,
        20.11
    ],
    [
        "0\n",
        9.674328565597534,
        20.11
    ],
    [
        "0\n",
        9.674373626708984,
        20.11
    ],
    [
        "0\n",
        9.674417972564697,
        20.11
    ],
    [
        "0\n",
        9.674462080001831,
        20.11
    ],
    [
        "0\n",
        9.674505949020386,
        20.11
    ],
    [
        "0\n",
        9.674550533294678,
        20.11
    ],
    [
        "0\n",
        9.674594640731812,
        20.11
    ],
    [
        "0\n",
        9.674638748168945,
        20.11
    ],
    [
        "0\n",
        9.674682855606079,
        20.11
    ],
    [
        "0\n",
        9.674726724624634,
        20.11
    ],
    [
        "0\n",
        9.674771070480347,
        20.11
    ],
    [
        "0\n",
        9.67481541633606,
        20.11
    ],
    [
        "0\n",
        9.674859285354614,
        20.11
    ],
    [
        "0\n",
        9.67490291595459,
        20.11
    ],
    [
        "0\n",
        9.674946546554565,
        20.11
    ],
    [
        "0\n",
        9.67499327659607,
        20.11
    ],
    [
        "0\n",
        9.675037860870361,
        20.11
    ],
    [
        "0\n",
        9.675082206726074,
        20.11
    ],
    [
        "0\n",
        9.675127506256104,
        20.11
    ],
    [
        "0\n",
        9.675174474716187,
        20.11
    ],
    [
        "0\n",
        9.6752188205719,
        20.11
    ],
    [
        "0\n",
        9.675262928009033,
        20.11
    ],
    [
        "0\n",
        9.675307035446167,
        20.11
    ],
    [
        "0\n",
        9.675350904464722,
        20.11
    ],
    [
        "0\n",
        9.675394773483276,
        20.11
    ],
    [
        "0\n",
        9.675439596176147,
        20.11
    ],
    [
        "0\n",
        9.675483465194702,
        20.11
    ],
    [
        "0\n",
        9.675527572631836,
        20.11
    ],
    [
        "0\n",
        9.675571918487549,
        20.11
    ],
    [
        "0\n",
        9.67561650276184,
        20.11
    ],
    [
        "0\n",
        9.675660848617554,
        20.11
    ],
    [
        "0\n",
        9.67570447921753,
        20.11
    ],
    [
        "0\n",
        9.675748109817505,
        20.11
    ],
    [
        "0\n",
        9.675792217254639,
        20.11
    ],
    [
        "0\n",
        9.675835609436035,
        20.11
    ],
    [
        "0\n",
        9.675880193710327,
        20.11
    ],
    [
        "0\n",
        9.675928592681885,
        20.11
    ],
    [
        "0\n",
        9.67597770690918,
        20.11
    ],
    [
        "0\n",
        9.67602252960205,
        20.11
    ],
    [
        "0\n",
        9.676067352294922,
        20.11
    ],
    [
        "0\n",
        9.676115274429321,
        20.11
    ],
    [
        "62\n",
        9.676160097122192,
        20.11
    ],
    [
        "80\n",
        9.676205158233643,
        20.11
    ],
    [
        "175\n",
        9.676249504089355,
        20.11
    ],
    [
        "92\n",
        9.676294088363647,
        20.11
    ],
    [
        "43\n",
        9.67633843421936,
        20.11
    ],
    [
        "2\n",
        9.676382303237915,
        20.11
    ],
    [
        "220\n",
        9.676427364349365,
        20.11
    ],
    [
        "176\n",
        9.676471948623657,
        20.11
    ],
    [
        "208\n",
        9.676519393920898,
        20.11
    ],
    [
        "210\n",
        9.676567554473877,
        20.11
    ],
    [
        "11\n",
        9.676611423492432,
        20.11
    ],
    [
        "175\n",
        9.676656246185303,
        20.11
    ],
    [
        "113\n",
        9.676700353622437,
        20.11
    ],
    [
        "121\n",
        9.676744222640991,
        20.11
    ],
    [
        "255\n",
        9.676788091659546,
        20.11
    ],
    [
        "236\n",
        9.676831722259521,
        20.11
    ],
    [
        "159\n",
        9.676877975463867,
        20.11
    ],
    [
        "53\n",
        9.676923513412476,
        20.11
    ],
    [
        "234\n",
        9.676967859268188,
        20.11
    ],
    [
        "108\n",
        9.67701268196106,
        20.11
    ],
    [
        "43\n",
        9.677060604095459,
        20.11
    ],
    [
        "245\n",
        9.67710566520691,
        20.11
    ],
    [
        "144\n",
        9.677149772644043,
        20.11
    ],
    [
        "213\n",
        9.677193641662598,
        20.11
    ],
    [
        "6\n",
        9.677238464355469,
        20.11
    ],
    [
        "249\n",
        9.677282810211182,
        20.11
    ],
    [
        "111\n",
        9.677326440811157,
        20.11
    ],
    [
        "182\n",
        9.67737102508545,
        20.11
    ],
    [
        "231\n",
        9.677415132522583,
        20.11
    ],
    [
        "147\n",
        9.677458763122559,
        20.11
    ],
    [
        "78\n",
        9.677502870559692,
        20.11
    ],
    [
        "167\n",
        9.677546501159668,
        20.11
    ],
    [
        "114\n",
        9.67759084701538,
        20.11
    ],
    [
        "218\n",
        9.677634239196777,
        20.11
    ],
    [
        "211\n",
        9.677678346633911,
        20.11
    ],
    [
        "88\n",
        9.677722215652466,
        20.11
    ],
    [
        "112\n",
        9.677766561508179,
        20.11
    ],
    [
        "108\n",
        9.677813529968262,
        20.11
    ],
    [
        "97\n",
        9.677858114242554,
        20.11
    ],
    [
        "99\n",
        9.677902936935425,
        20.11
    ],
    [
        "101\n",
        9.67794680595398,
        20.11
    ],
    [
        "104\n",
        9.677992820739746,
        20.11
    ],
    [
        "111\n",
        9.678038120269775,
        20.11
    ],
    [
        "108\n",
        9.678082466125488,
        20.11
    ],
    [
        "100\n",
        9.678126335144043,
        20.11
    ],
    [
        "101\n",
        9.678170204162598,
        20.11
    ],
    [
        "114\n",
        9.67821478843689,
        20.11
    ],
    [
        "13\n",
        9.678258657455444,
        20.11
    ],
    [
        "10\n",
        9.678301811218262,
        20.11
    ],
    [
        "0\n",
        9.678346157073975,
        20.11
    ],
    [
        "0\n",
        9.678390741348267,
        20.11
    ],
    [
        "0\n",
        9.678435325622559,
        20.11
    ],
    [
        "0\n",
        9.678479194641113,
        20.11
    ],
    [
        "0\n",
        9.678523540496826,
        20.11
    ],
    [
        "0\n",
        9.67856764793396,
        20.11
    ],
    [
        "0\n",
        9.678611993789673,
        20.11
    ],
    [
        "Done",
        10.09592604637146,
        20.11
    ],
    [
        "Reset time counters for profiling\n",
        10.101002931594849,
        20.11
    ],
    [
        "Verifying proof...\n",
        10.10183310508728,
        20.11
    ],
    [
        "files/verify.9f1f958208bf39854b90fcf99d4468f7e7c5bfaddc984bbad91325350cd923ef.1.bin\n",
        10.10256290435791,
        20.11
    ],
    [
        "(enter) Parsing and Evaluating the circuit \t[             ]\t(0.0007s x1.00 from start)\n",
        10.103267669677734,
        20.11
    ],
    [
        "(leave) Parsing and Evaluating the circuit \t[6.1519s x1.00]\t(6.1526s x1.00 from start)\n",
        16.25287437438965,
        26.25
    ],
    [
        "Translating Constraints ... \n",
        16.25442147254944,
        26.25
    ],
    [
        "\tConstraint translation done\n",
        32.96278119087219,
        42.83
    ],
    [
        "\tMemory usage for constraint translation: 1758 MB\n",
        32.98276734352112,
        42.83
    ],
    [
        "Note: Protoboard Not Satisfied .. \n",
        33.0028817653656,
        42.849999999999994
    ],
    [
        "Assignment of values done .. \n",
        33.026214838027954,
        42.879999999999995
    ],
    [
        "Example created!\n",
        33.04600143432617,
        42.9
    ],
    [
        "Reading verification key (preprocessed)...\n",
        33.06362223625183,
        42.91
    ],
    [
        "Reading proof...\n",
        33.0804967880249,
        42.93
    ],
    [
        "(enter) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[             ]\t(22.8641s x0.99 from start)\n",
        33.097721576690674,
        42.95
    ],
    [
        "  (enter) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[             ]\t(22.8641s x0.99 from start)\n",
        33.11582398414612,
        42.96
    ],
    [
        "    (enter) Accumulate input                   \t[             ]\t(22.8641s x0.99 from start)\n",
        33.13332223892212,
        42.980000000000004
    ],
    [
        "    (leave) Accumulate input                   \t[0.0002s x1.00]\t(22.8643s x0.99 from start)\n",
        33.150251150131226,
        43.0
    ],
    [
        "    (enter) Check if the proof is well-formed  \t[             ]\t(22.8643s x0.99 from start)\n",
        33.16518831253052,
        43.010000000000005
    ],
    [
        "    (leave) Check if the proof is well-formed  \t[0.0000s x1.10]\t(22.8643s x0.99 from start)\n",
        33.18204092979431,
        43.019999999999996
    ],
    [
        "    (enter) Online pairing computations        \t[             ]\t(22.8643s x0.99 from start)\n",
        33.19851732254028,
        43.04
    ],
    [
        "      (enter) Check QAP divisibility             \t[             ]\t(22.8643s x0.99 from start)\n",
        33.21497106552124,
        43.05
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(22.8643s x0.99 from start)\n",
        33.23304224014282,
        43.07
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.18]\t(22.8643s x0.99 from start)\n",
        33.24960422515869,
        43.09
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G2    \t[             ]\t(22.8643s x0.99 from start)\n",
        33.26561260223389,
        43.11
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G2    \t[0.0000s x1.01]\t(22.8644s x0.99 from start)\n",
        33.28136992454529,
        43.120000000000005
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(22.8644s x0.99 from start)\n",
        33.29710292816162,
        43.14
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.15]\t(22.8644s x0.99 from start)\n",
        33.31459903717041,
        43.150000000000006
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(22.8644s x0.99 from start)\n",
        33.33098268508911,
        43.17
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.04]\t(22.8644s x0.99 from start)\n",
        33.35036063194275,
        43.19
    ],
    [
        "        (enter) Call to miller_loop<bn128_pp>      \t[             ]\t(22.8644s x0.99 from start)\n",
        33.37096047401428,
        43.21
    ],
    [
        "        (leave) Call to miller_loop<bn128_pp>      \t[0.0001s x1.00]\t(22.8645s x0.99 from start)\n",
        33.3877592086792,
        43.230000000000004
    ],
    [
        "        (enter) Call to double_miller_loop<bn128_pp>\t[             ]\t(22.8645s x0.99 from start)\n",
        33.40486192703247,
        43.25
    ],
    [
        "        (leave) Call to double_miller_loop<bn128_pp>\t[0.0002s x1.00]\t(22.8647s x0.99 from start)\n",
        33.42213702201843,
        43.260000000000005
    ],
    [
        "        (enter) Call to bn128_final_exponentiation \t[             ]\t(22.8647s x0.99 from start)\n",
        33.437642097473145,
        43.28
    ],
    [
        "        (leave) Call to bn128_final_exponentiation \t[0.0002s x1.00]\t(22.8649s x0.99 from start)\n",
        33.45417833328247,
        43.29
    ],
    [
        "        QAP divisibility check failed.\n",
        33.471317768096924,
        43.31
    ],
    [
        "      (leave) Check QAP divisibility             \t[0.0005s x1.00]\t(22.8649s x0.99 from start)\n",
        33.486295223236084,
        43.31
    ],
    [
        "    (leave) Online pairing computations        \t[0.0005s x1.00]\t(22.8649s x0.99 from start)\n",
        33.50011420249939,
        43.31
    ],
    [
        "  (leave) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[0.0007s x1.00]\t(22.8649s x0.99 from start)\n",
        33.5157253742218,
        43.32
    ],
    [
        "(leave) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[0.0007s x1.00]\t(22.8649s x0.99 from start)\n",
        33.53057885169983,
        43.33
    ],
    [
        "FAIL",
        34.56425070762634,
        44.36
    ],
    [
        "Done",
        35.35006356239319,
        44.36
    ]
]