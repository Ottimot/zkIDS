[
    [
        "Verification starts now",
        2.384185791015625e-07
    ],
    [
        "Proof received",
        0.0005445480346679688
    ],
    [
        "[1st Phase] Running Initial Circuit Analysis for < HTTP_Merkle_Token >\n",
        0.028146982192993164,
        0.02
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.46923208236694336,
        1.75
    ],
    [
        "Num of variable reads = 1480\n",
        0.47609829902648926,
        1.78
    ],
    [
        "Num of conditional writes = 0\n",
        0.48190832138061523,
        1.79
    ],
    [
        "Num of words per element = 1\n",
        0.48712658882141113,
        1.8
    ],
    [
        "Num of variable writes = 0\n",
        0.49218130111694336,
        1.84
    ],
    [
        "num of accesses = 1480\n",
        0.4968574047088623,
        1.85
    ],
    [
        "Packing Option = 1\n",
        0.501624345779419,
        1.87
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.5065586566925049,
        1.8900000000000001
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.5117032527923584,
        1.9200000000000002
    ],
    [
        "done with read only memory solutions!\n",
        1.1387124061584473,
        2.9600000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.151655673980713,
        2.98
    ],
    [
        "Num of variable reads = 128\n",
        1.1634178161621094,
        3.0
    ],
    [
        "Num of conditional writes = 0\n",
        1.1750292778015137,
        3.0
    ],
    [
        "Num of words per element = 1\n",
        1.1866393089294434,
        3.02
    ],
    [
        "Num of variable writes = 0\n",
        1.1984045505523682,
        3.0300000000000002
    ],
    [
        "num of accesses = 128\n",
        1.2107112407684326,
        3.0500000000000003
    ],
    [
        "Packing Option = 1\n",
        1.2224760055541992,
        3.06
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.2341828346252441,
        3.0700000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.245915412902832,
        3.08
    ],
    [
        "Num of variable reads = 520\n",
        1.2575650215148926,
        3.0900000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.268998622894287,
        3.1
    ],
    [
        "Num of words per element = 1\n",
        1.2808027267456055,
        3.12
    ],
    [
        "Num of variable writes = 0\n",
        1.2925865650177002,
        3.1300000000000003
    ],
    [
        "num of accesses = 520\n",
        1.3041324615478516,
        3.14
    ],
    [
        "Packing Option = 1\n",
        1.3157224655151367,
        3.1500000000000004
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.3274190425872803,
        3.1700000000000004
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.3378667831420898,
        3.18
    ],
    [
        "done with read only memory solutions!\n",
        1.6304442882537842,
        3.4899999999999998
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6432533264160156,
        3.5
    ],
    [
        "Num of variable reads = 128\n",
        1.6548423767089844,
        3.51
    ],
    [
        "Num of conditional writes = 0\n",
        1.6664347648620605,
        3.53
    ],
    [
        "Num of words per element = 1\n",
        1.6781582832336426,
        3.54
    ],
    [
        "Num of variable writes = 0\n",
        1.689424991607666,
        3.55
    ],
    [
        "num of accesses = 128\n",
        1.6994850635528564,
        3.57
    ],
    [
        "Packing Option = 1\n",
        1.7092788219451904,
        3.57
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.718904972076416,
        3.58
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7279210090637207,
        3.59
    ],
    [
        "Num of variable reads = 71\n",
        1.738534688949585,
        3.6
    ],
    [
        "Num of conditional writes = 0\n",
        1.7498488426208496,
        3.61
    ],
    [
        "Num of words per element = 1\n",
        1.7609291076660156,
        3.63
    ],
    [
        "Num of variable writes = 0\n",
        1.7721757888793945,
        3.64
    ],
    [
        "num of accesses = 71\n",
        1.7834200859069824,
        3.65
    ],
    [
        "Packing Option = 1\n",
        1.7947642803192139,
        3.66
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.8065519332885742,
        3.67
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.8180832862854004,
        3.69
    ],
    [
        "Num of variable reads = 128\n",
        1.8295567035675049,
        3.7
    ],
    [
        "Num of conditional writes = 0\n",
        1.840965986251831,
        3.71
    ],
    [
        "Num of words per element = 1\n",
        1.852745771408081,
        3.73
    ],
    [
        "Num of variable writes = 0\n",
        1.86448073387146,
        3.75
    ],
    [
        "num of accesses = 128\n",
        1.8765223026275635,
        3.77
    ],
    [
        "Packing Option = 0\n",
        1.888458490371704,
        3.79
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.9002690315246582,
        3.81
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.912240743637085,
        3.82
    ],
    [
        "Num of variable reads = 71\n",
        1.9244017601013184,
        3.85
    ],
    [
        "Num of conditional writes = 0\n",
        1.9362518787384033,
        3.86
    ],
    [
        "Num of words per element = 1\n",
        1.947965383529663,
        3.87
    ],
    [
        "Num of variable writes = 0\n",
        1.9595918655395508,
        3.88
    ],
    [
        "num of accesses = 71\n",
        1.971116304397583,
        3.89
    ],
    [
        "Packing Option = 1\n",
        1.982635736465454,
        3.9
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.994135856628418,
        3.92
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.0058541297912598,
        3.93
    ],
    [
        "Num of variable reads = 128\n",
        2.017679452896118,
        3.96
    ],
    [
        "Num of conditional writes = 0\n",
        2.03222918510437,
        3.98
    ],
    [
        "Num of words per element = 1\n",
        2.0416815280914307,
        3.9899999999999998
    ],
    [
        "Num of variable writes = 0\n",
        2.0512890815734863,
        4.01
    ],
    [
        "num of accesses = 128\n",
        2.0620672702789307,
        4.03
    ],
    [
        "Packing Option = 0\n",
        2.0739755630493164,
        4.0600000000000005
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.0860416889190674,
        4.08
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.0981950759887695,
        4.11
    ],
    [
        "Num of variable reads = 0\n",
        2.1101343631744385,
        4.12
    ],
    [
        "Num of conditional writes = 0\n",
        2.1219167709350586,
        4.13
    ],
    [
        "Num of words per element = 1\n",
        2.1320574283599854,
        4.140000000000001
    ],
    [
        "Num of variable writes = 0\n",
        2.1412315368652344,
        4.16
    ],
    [
        "num of accesses = 0\n",
        2.150024890899658,
        4.180000000000001
    ],
    [
        "Packing Option = 0\n",
        2.1590170860290527,
        4.220000000000001
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.168100357055664,
        4.25
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.1773312091827393,
        4.28
    ],
    [
        "Num of variable reads = 5160\n",
        2.1871094703674316,
        4.3100000000000005
    ],
    [
        "Num of conditional writes = 0\n",
        2.1968207359313965,
        4.340000000000001
    ],
    [
        "Num of words per element = 1\n",
        2.2067623138427734,
        4.37
    ],
    [
        "Num of variable writes = 0\n",
        2.217539072036743,
        4.420000000000001
    ],
    [
        "num of accesses = 5160\n",
        2.2278711795806885,
        4.45
    ],
    [
        "Packing Option = 1\n",
        2.2386701107025146,
        4.470000000000001
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.249274492263794,
        4.49
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.259556770324707,
        4.510000000000001
    ],
    [
        "done with read only memory solutions!\n",
        2.2695369720458984,
        4.5200000000000005
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.2796599864959717,
        4.54
    ],
    [
        "Num of variable reads = 5\n",
        2.290311098098755,
        4.550000000000001
    ],
    [
        "Num of conditional writes = 0\n",
        2.300046920776367,
        4.58
    ],
    [
        "Num of words per element = 1\n",
        2.3095669746398926,
        4.6000000000000005
    ],
    [
        "Num of variable writes = 0\n",
        2.3193111419677734,
        4.62
    ],
    [
        "num of accesses = 5\n",
        2.3403401374816895,
        4.8100000000000005
    ],
    [
        "Packing Option = 1\n",
        2.350996732711792,
        4.83
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.361570119857788,
        4.880000000000001
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.372128486633301,
        4.920000000000001
    ],
    [
        "[2nd Phase] Running Circuit Generator for < HTTP_Merkle_Token >\n",
        2.382533550262451,
        4.95
    ],
    [
        "Circuit Generation Done for < HTTP_Merkle_Token >  \n",
        4.682114601135254,
        18.02
    ],
    [
        " \t Total Number of Constraints :  1792370\n",
        4.706783771514893,
        18.2
    ],
    [
        "\n",
        4.730413913726807,
        18.37
    ],
    [
        "Instruction queue size: 5747712\n",
        4.750313758850098,
        18.51
    ],
    [
        "Generate public inputs only\n",
        9.654716968536377,
        25.830000000000002
    ],
    [
        "Generating public parameters for: 7926dc96aa83420ec42643f2ba769afb0e2599dc7e9c0dff9c0ed93fff1b194c1\n",
        9.673444032669067,
        25.830000000000002
    ],
    [
        "../Middlebox/files/transcript_7926dc96aa83420ec42643f2ba769afb0e2599dc7e9c0dff9c0ed93fff1b194c1.txt\n",
        9.689982175827026,
        25.84
    ],
    [
        "../Middlebox/files/merkle_proof_pub.txt\n",
        9.707402229309082,
        25.85
    ],
    [
        "asdfghc\n",
        9.724961042404175,
        25.88
    ],
    [
        "97\n",
        9.743693351745605,
        25.91
    ],
    [
        "115\n",
        9.761878252029419,
        25.919999999999998
    ],
    [
        "100\n",
        9.780982971191406,
        25.939999999999998
    ],
    [
        "102\n",
        9.800084590911865,
        25.959999999999997
    ],
    [
        "103\n",
        9.818975687026978,
        25.98
    ],
    [
        "7\n",
        9.91241192817688,
        25.98
    ],
    [
        "Sample Run: 7926dc96aa83420ec42643f2ba769afb0e2599dc7e9c0dff9c0ed93fff1b194c1 finished!\n",
        9.912542581558228,
        25.98
    ],
    [
        "1\n",
        9.912602663040161,
        25.98
    ],
    [
        "1768\n",
        9.912657737731934,
        25.98
    ],
    [
        "264\n",
        9.912712574005127,
        25.98
    ],
    [
        "4\n",
        9.91276502609253,
        25.98
    ],
    [
        "7\n",
        9.91281771659851,
        25.98
    ],
    [
        "18765087434070279118326479840333070550893160322590316806400066067763149452870\n",
        9.91287112236023,
        25.98
    ],
    [
        "8\n",
        9.912922620773315,
        25.98
    ],
    [
        "177\n",
        9.91297435760498,
        25.98
    ],
    [
        "254\n",
        9.913026571273804,
        25.98
    ],
    [
        "207\n",
        9.913086652755737,
        25.98
    ],
    [
        "161\n",
        9.913210391998291,
        25.98
    ],
    [
        "52\n",
        9.91326904296875,
        25.98
    ],
    [
        "64\n",
        9.913322448730469,
        25.98
    ],
    [
        "41\n",
        9.91337776184082,
        25.98
    ],
    [
        "182\n",
        9.913432359695435,
        25.98
    ],
    [
        "24\n",
        9.913484573364258,
        25.98
    ],
    [
        "112\n",
        9.913539171218872,
        25.98
    ],
    [
        "48\n",
        9.913590669631958,
        25.98
    ],
    [
        "159\n",
        9.913640975952148,
        25.98
    ],
    [
        "137\n",
        9.913691520690918,
        25.98
    ],
    [
        "182\n",
        9.913742542266846,
        25.98
    ],
    [
        "234\n",
        9.913793325424194,
        25.98
    ],
    [
        "127\n",
        9.913843154907227,
        25.98
    ],
    [
        "86\n",
        9.913893699645996,
        25.98
    ],
    [
        "244\n",
        9.913944005966187,
        25.98
    ],
    [
        "67\n",
        9.913995027542114,
        25.98
    ],
    [
        "165\n",
        9.91404676437378,
        25.98
    ],
    [
        "93\n",
        9.914097547531128,
        25.98
    ],
    [
        "57\n",
        9.914149045944214,
        25.98
    ],
    [
        "177\n",
        9.914201259613037,
        25.98
    ],
    [
        "53\n",
        9.914252519607544,
        25.98
    ],
    [
        "29\n",
        9.91430377960205,
        25.98
    ],
    [
        "4\n",
        9.914354801177979,
        25.98
    ],
    [
        "123\n",
        9.914405107498169,
        25.98
    ],
    [
        "5\n",
        9.914456367492676,
        25.98
    ],
    [
        "35\n",
        9.914507389068604,
        25.98
    ],
    [
        "224\n",
        9.914558172225952,
        25.98
    ],
    [
        "0\n",
        9.914613008499146,
        25.98
    ],
    [
        "106\n",
        9.914664506912231,
        25.98
    ],
    [
        "95\n",
        9.914714813232422,
        25.98
    ],
    [
        "66\n",
        9.914766073226929,
        25.98
    ],
    [
        "88\n",
        9.91481637954712,
        25.98
    ],
    [
        "0\n",
        9.91486644744873,
        25.98
    ],
    [
        "0\n",
        9.914916276931763,
        25.98
    ],
    [
        "0\n",
        9.91496753692627,
        25.98
    ],
    [
        "0\n",
        9.91501760482788,
        25.98
    ],
    [
        "0\n",
        9.915067672729492,
        25.98
    ],
    [
        "0\n",
        9.91511845588684,
        25.98
    ],
    [
        "0\n",
        9.915167808532715,
        25.98
    ],
    [
        "0\n",
        9.915217399597168,
        25.98
    ],
    [
        "0\n",
        9.915271282196045,
        25.98
    ],
    [
        "0\n",
        9.915322065353394,
        25.98
    ],
    [
        "0\n",
        9.915379285812378,
        25.98
    ],
    [
        "0\n",
        9.915432214736938,
        25.98
    ],
    [
        "0\n",
        9.915482759475708,
        25.98
    ],
    [
        "0\n",
        9.91553282737732,
        25.98
    ],
    [
        "0\n",
        9.915583372116089,
        25.98
    ],
    [
        "0\n",
        9.9156334400177,
        25.98
    ],
    [
        "0\n",
        9.915688276290894,
        25.98
    ],
    [
        "0\n",
        9.915740251541138,
        25.98
    ],
    [
        "0\n",
        9.915790557861328,
        25.98
    ],
    [
        "0\n",
        9.915841102600098,
        25.98
    ],
    [
        "0\n",
        9.915891647338867,
        25.98
    ],
    [
        "0\n",
        9.915942192077637,
        25.98
    ],
    [
        "0\n",
        9.915993213653564,
        25.98
    ],
    [
        "0\n",
        9.916043996810913,
        25.98
    ],
    [
        "0\n",
        9.916093826293945,
        25.98
    ],
    [
        "0\n",
        9.916144132614136,
        25.98
    ],
    [
        "0\n",
        9.916194438934326,
        25.98
    ],
    [
        "0\n",
        9.91624402999878,
        25.98
    ],
    [
        "0\n",
        9.91629409790039,
        25.98
    ],
    [
        "0\n",
        9.916370630264282,
        25.98
    ],
    [
        "0\n",
        9.916445970535278,
        25.98
    ],
    [
        "0\n",
        9.916519403457642,
        25.98
    ],
    [
        "0\n",
        9.91659140586853,
        25.98
    ],
    [
        "0\n",
        9.916662216186523,
        25.98
    ],
    [
        "0\n",
        9.916732549667358,
        25.98
    ],
    [
        "0\n",
        9.916802883148193,
        25.98
    ],
    [
        "0\n",
        9.916874170303345,
        25.98
    ],
    [
        "0\n",
        9.916952133178711,
        25.98
    ],
    [
        "0\n",
        9.91700530052185,
        25.98
    ],
    [
        "0\n",
        9.917057991027832,
        25.98
    ],
    [
        "0\n",
        9.917109727859497,
        25.98
    ],
    [
        "0\n",
        9.917161226272583,
        25.98
    ],
    [
        "0\n",
        9.917212963104248,
        25.98
    ],
    [
        "0\n",
        9.917263269424438,
        25.98
    ],
    [
        "0\n",
        9.917315006256104,
        25.98
    ],
    [
        "0\n",
        9.91736650466919,
        25.98
    ],
    [
        "0\n",
        9.917418003082275,
        25.98
    ],
    [
        "0\n",
        9.917468786239624,
        25.98
    ],
    [
        "0\n",
        9.917519569396973,
        25.98
    ],
    [
        "0\n",
        9.91757082939148,
        25.98
    ],
    [
        "0\n",
        9.91762638092041,
        25.98
    ],
    [
        "0\n",
        9.91767930984497,
        25.98
    ],
    [
        "0\n",
        9.917730331420898,
        25.98
    ],
    [
        "0\n",
        9.917781352996826,
        25.98
    ],
    [
        "0\n",
        9.917832374572754,
        25.98
    ],
    [
        "0\n",
        9.917884349822998,
        25.98
    ],
    [
        "0\n",
        9.917935848236084,
        25.98
    ],
    [
        "0\n",
        9.917986631393433,
        25.98
    ],
    [
        "0\n",
        9.918040037155151,
        25.98
    ],
    [
        "0\n",
        9.918090343475342,
        25.98
    ],
    [
        "0\n",
        9.918140172958374,
        25.98
    ],
    [
        "0\n",
        9.918190479278564,
        25.98
    ],
    [
        "0\n",
        9.918241500854492,
        25.98
    ],
    [
        "0\n",
        9.918292045593262,
        25.98
    ],
    [
        "0\n",
        9.918342351913452,
        25.98
    ],
    [
        "0\n",
        9.918391942977905,
        25.98
    ],
    [
        "0\n",
        9.918442010879517,
        25.98
    ],
    [
        "0\n",
        9.918491840362549,
        25.98
    ],
    [
        "0\n",
        9.918542623519897,
        25.98
    ],
    [
        "0\n",
        9.918593406677246,
        25.98
    ],
    [
        "0\n",
        9.9186429977417,
        25.98
    ],
    [
        "0\n",
        9.918696641921997,
        25.98
    ],
    [
        "0\n",
        9.918748617172241,
        25.98
    ],
    [
        "0\n",
        9.918799638748169,
        25.98
    ],
    [
        "0\n",
        9.91884970664978,
        25.98
    ],
    [
        "0\n",
        9.918901205062866,
        25.98
    ],
    [
        "0\n",
        9.918951988220215,
        25.98
    ],
    [
        "0\n",
        9.919003248214722,
        25.98
    ],
    [
        "0\n",
        9.919053554534912,
        25.98
    ],
    [
        "0\n",
        9.91910696029663,
        25.98
    ],
    [
        "0\n",
        9.91915774345398,
        25.98
    ],
    [
        "0\n",
        9.91920804977417,
        25.98
    ],
    [
        "0\n",
        9.919258117675781,
        25.98
    ],
    [
        "0\n",
        9.91930866241455,
        25.98
    ],
    [
        "0\n",
        9.919358730316162,
        25.98
    ],
    [
        "0\n",
        9.919430017471313,
        25.98
    ],
    [
        "0\n",
        9.919482707977295,
        25.98
    ],
    [
        "0\n",
        9.919533014297485,
        25.98
    ],
    [
        "0\n",
        9.919583559036255,
        25.98
    ],
    [
        "0\n",
        9.919634103775024,
        25.98
    ],
    [
        "0\n",
        9.919683933258057,
        25.98
    ],
    [
        "0\n",
        9.919734716415405,
        25.98
    ],
    [
        "0\n",
        9.919789791107178,
        25.98
    ],
    [
        "0\n",
        9.919841766357422,
        25.98
    ],
    [
        "0\n",
        9.91989278793335,
        25.98
    ],
    [
        "0\n",
        9.919943809509277,
        25.98
    ],
    [
        "0\n",
        9.919993877410889,
        25.98
    ],
    [
        "0\n",
        9.920043706893921,
        25.98
    ],
    [
        "0\n",
        9.92009425163269,
        25.98
    ],
    [
        "0\n",
        9.920145511627197,
        25.98
    ],
    [
        "0\n",
        9.920199394226074,
        25.98
    ],
    [
        "0\n",
        9.92025089263916,
        25.98
    ],
    [
        "0\n",
        9.920301675796509,
        25.98
    ],
    [
        "0\n",
        9.920352697372437,
        25.98
    ],
    [
        "0\n",
        9.920403242111206,
        25.98
    ],
    [
        "0\n",
        9.920454025268555,
        25.98
    ],
    [
        "0\n",
        9.920505046844482,
        25.98
    ],
    [
        "0\n",
        9.920555830001831,
        25.98
    ],
    [
        "0\n",
        9.920605659484863,
        25.98
    ],
    [
        "0\n",
        9.920655488967896,
        25.98
    ],
    [
        "0\n",
        9.920707941055298,
        25.98
    ],
    [
        "0\n",
        9.920758247375488,
        25.98
    ],
    [
        "0\n",
        9.920809268951416,
        25.98
    ],
    [
        "0\n",
        9.92086386680603,
        25.98
    ],
    [
        "0\n",
        9.920915126800537,
        25.98
    ],
    [
        "0\n",
        9.920965909957886,
        25.98
    ],
    [
        "0\n",
        9.921016454696655,
        25.98
    ],
    [
        "0\n",
        9.921066522598267,
        25.98
    ],
    [
        "0\n",
        9.921117305755615,
        25.98
    ],
    [
        "0\n",
        9.921167850494385,
        25.98
    ],
    [
        "0\n",
        9.921217918395996,
        25.98
    ],
    [
        "0\n",
        9.921270608901978,
        25.98
    ],
    [
        "0\n",
        9.921321868896484,
        25.98
    ],
    [
        "0\n",
        9.921372652053833,
        25.98
    ],
    [
        "70\n",
        9.921422719955444,
        25.98
    ],
    [
        "196\n",
        9.921473503112793,
        25.98
    ],
    [
        "237\n",
        9.921524047851562,
        25.98
    ],
    [
        "74\n",
        9.921574115753174,
        25.98
    ],
    [
        "61\n",
        9.921624660491943,
        25.98
    ],
    [
        "92\n",
        9.921674966812134,
        25.98
    ],
    [
        "134\n",
        9.921725749969482,
        25.98
    ],
    [
        "209\n",
        9.921776294708252,
        25.98
    ],
    [
        "6\n",
        9.92182731628418,
        25.98
    ],
    [
        "197\n",
        9.92187786102295,
        25.98
    ],
    [
        "220\n",
        9.921931982040405,
        25.98
    ],
    [
        "194\n",
        9.921987533569336,
        25.98
    ],
    [
        "180\n",
        9.922037601470947,
        25.98
    ],
    [
        "134\n",
        9.922086715698242,
        25.98
    ],
    [
        "115\n",
        9.922136783599854,
        25.98
    ],
    [
        "204\n",
        9.922185897827148,
        25.98
    ],
    [
        "79\n",
        9.92223572731018,
        25.98
    ],
    [
        "175\n",
        9.922286987304688,
        25.98
    ],
    [
        "138\n",
        9.922340154647827,
        25.98
    ],
    [
        "229\n",
        9.92238974571228,
        25.98
    ],
    [
        "240\n",
        9.922438859939575,
        25.98
    ],
    [
        "118\n",
        9.922488927841187,
        25.98
    ],
    [
        "92\n",
        9.92253851890564,
        25.98
    ],
    [
        "86\n",
        9.922588586807251,
        25.98
    ],
    [
        "201\n",
        9.922641515731812,
        25.98
    ],
    [
        "129\n",
        9.922691345214844,
        25.98
    ],
    [
        "214\n",
        9.922740936279297,
        25.98
    ],
    [
        "103\n",
        9.922790765762329,
        25.98
    ],
    [
        "241\n",
        9.922839879989624,
        25.98
    ],
    [
        "131\n",
        9.922889232635498,
        25.98
    ],
    [
        "89\n",
        9.922939777374268,
        25.98
    ],
    [
        "154\n",
        9.922992944717407,
        25.98
    ],
    [
        "171\n",
        9.923044443130493,
        25.98
    ],
    [
        "18\n",
        9.923095226287842,
        25.98
    ],
    [
        "46\n",
        9.923144817352295,
        25.98
    ],
    [
        "12\n",
        9.92319393157959,
        25.98
    ],
    [
        "97\n",
        9.923243522644043,
        25.98
    ],
    [
        "115\n",
        9.92329478263855,
        25.98
    ],
    [
        "100\n",
        9.923344373703003,
        25.98
    ],
    [
        "102\n",
        9.923403978347778,
        25.98
    ],
    [
        "103\n",
        9.923455238342285,
        25.98
    ],
    [
        "Done",
        10.169273376464844,
        25.98
    ],
    [
        "Reset time counters for profiling\n",
        10.173670053482056,
        25.98
    ],
    [
        "Verifying proof...\n",
        10.174530029296875,
        25.98
    ],
    [
        "files/verify.7926dc96aa83420ec42643f2ba769afb0e2599dc7e9c0dff9c0ed93fff1b194c.1.bin\n",
        10.175297021865845,
        25.98
    ],
    [
        "(enter) Parsing and Evaluating the circuit \t[             ]\t(0.0008s x1.00 from start)\n",
        10.176069736480713,
        25.98
    ],
    [
        "(leave) Parsing and Evaluating the circuit \t[6.2110s x1.00]\t(6.2118s x1.00 from start)\n",
        16.384714603424072,
        32.19
    ],
    [
        "Translating Constraints ... \n",
        16.38705348968506,
        32.19
    ],
    [
        "\tConstraint translation done\n",
        35.26764416694641,
        50.739999999999995
    ],
    [
        "\tMemory usage for constraint translation: 1889 MB\n",
        35.303776264190674,
        50.739999999999995
    ],
    [
        "Note: Protoboard Not Satisfied .. \n",
        35.33976984024048,
        50.83
    ],
    [
        "Assignment of values done .. \n",
        35.37483191490173,
        50.89
    ],
    [
        "Example created!\n",
        35.42135739326477,
        50.94
    ],
    [
        "Reading verification key (preprocessed)...\n",
        35.46322226524353,
        50.980000000000004
    ],
    [
        "Reading proof...\n",
        35.509732484817505,
        51.03
    ],
    [
        "(enter) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[             ]\t(25.1252s x0.99 from start)\n",
        35.55579948425293,
        51.07
    ],
    [
        "  (enter) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[             ]\t(25.1252s x0.99 from start)\n",
        35.5941379070282,
        51.11
    ],
    [
        "    (enter) Accumulate input                   \t[             ]\t(25.1252s x0.99 from start)\n",
        35.632773876190186,
        51.150000000000006
    ],
    [
        "    (leave) Accumulate input                   \t[0.0432s x2.01]\t(25.1684s x0.99 from start)\n",
        35.67168426513672,
        51.2
    ],
    [
        "    (enter) Check if the proof is well-formed  \t[             ]\t(25.1684s x0.99 from start)\n",
        35.709651470184326,
        51.22
    ],
    [
        "    (leave) Check if the proof is well-formed  \t[0.0000s x1.01]\t(25.1684s x0.99 from start)\n",
        35.75266790390015,
        51.269999999999996
    ],
    [
        "    (enter) Online pairing computations        \t[             ]\t(25.1684s x0.99 from start)\n",
        35.7964301109314,
        51.31
    ],
    [
        "      (enter) Check QAP divisibility             \t[             ]\t(25.1684s x0.99 from start)\n",
        35.83900690078735,
        51.35
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(25.1684s x0.99 from start)\n",
        35.88127160072327,
        51.39
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.08]\t(25.1684s x0.99 from start)\n",
        35.91245365142822,
        51.4
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G2    \t[             ]\t(25.1684s x0.99 from start)\n",
        35.94206666946411,
        51.4
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G2    \t[0.0001s x1.01]\t(25.1685s x0.99 from start)\n",
        35.9757125377655,
        51.43
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(25.1685s x0.99 from start)\n",
        36.010233879089355,
        51.47
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.08]\t(25.1685s x0.99 from start)\n",
        36.04593515396118,
        51.5
    ],
    [
        "        (enter) Call to bn128_ate_precompute_G1    \t[             ]\t(25.1685s x0.99 from start)\n",
        36.08278036117554,
        51.54
    ],
    [
        "        (leave) Call to bn128_ate_precompute_G1    \t[0.0000s x1.03]\t(25.1685s x0.99 from start)\n",
        36.121209383010864,
        51.58
    ],
    [
        "        (enter) Call to miller_loop<bn128_pp>      \t[             ]\t(25.1685s x0.99 from start)\n",
        36.15890717506409,
        51.61
    ],
    [
        "        (leave) Call to miller_loop<bn128_pp>      \t[0.0001s x1.00]\t(25.1687s x0.99 from start)\n",
        36.196675300598145,
        51.65
    ],
    [
        "        (enter) Call to double_miller_loop<bn128_pp>\t[             ]\t(25.1687s x0.99 from start)\n",
        36.234174966812134,
        51.69
    ],
    [
        "        (leave) Call to double_miller_loop<bn128_pp>\t[0.0002s x1.00]\t(25.1689s x0.99 from start)\n",
        36.2708101272583,
        51.730000000000004
    ],
    [
        "        (enter) Call to bn128_final_exponentiation \t[             ]\t(25.1689s x0.99 from start)\n",
        36.307305097579956,
        51.76
    ],
    [
        "        (leave) Call to bn128_final_exponentiation \t[0.0002s x1.00]\t(25.1692s x0.99 from start)\n",
        36.343701124191284,
        51.8
    ],
    [
        "      (leave) Check QAP divisibility             \t[0.0007s x1.00]\t(25.1692s x0.99 from start)\n",
        36.38233494758606,
        51.84
    ],
    [
        "    (leave) Online pairing computations        \t[0.0007s x1.00]\t(25.1692s x0.99 from start)\n",
        36.417683839797974,
        51.87
    ],
    [
        "  (leave) Call to r1cs_gg_ppzksnark_online_verifier_weak_IC\t[0.0440s x2.00]\t(25.1692s x0.99 from start)\n",
        36.45219969749451,
        51.91
    ],
    [
        "(leave) Call to r1cs_gg_ppzksnark_online_verifier_strong_IC\t[0.0440s x2.00]\t(25.1692s x0.99 from start)\n",
        36.48705530166626,
        51.94
    ],
    [
        "PASS",
        37.128249168395996,
        52.59
    ],
    [
        "Done",
        37.728543281555176,
        52.59
    ]
]