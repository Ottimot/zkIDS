[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_String >\n",
        0.021994829177856445,
        0.01
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.2893643379211426,
        1.17
    ],
    [
        "Num of variable reads = 1480\n",
        0.29299378395080566,
        1.19
    ],
    [
        "Num of conditional writes = 0\n",
        0.2955288887023926,
        1.21
    ],
    [
        "Num of words per element = 1\n",
        0.2975912094116211,
        1.21
    ],
    [
        "Num of variable writes = 0\n",
        0.29941320419311523,
        1.22
    ],
    [
        "num of accesses = 1480\n",
        0.3008432388305664,
        1.23
    ],
    [
        "Packing Option = 1\n",
        0.30225443840026855,
        1.23
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.3036684989929199,
        1.24
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.305084228515625,
        1.24
    ],
    [
        "done with read only memory solutions!\n",
        0.9295101165771484,
        2.31
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.9400632381439209,
        2.34
    ],
    [
        "Num of variable reads = 128\n",
        0.9504268169403076,
        2.36
    ],
    [
        "Num of conditional writes = 0\n",
        0.9592568874359131,
        2.3699999999999997
    ],
    [
        "Num of words per element = 1\n",
        0.9648056030273438,
        2.3699999999999997
    ],
    [
        "Num of variable writes = 0\n",
        0.9687573909759521,
        2.38
    ],
    [
        "num of accesses = 128\n",
        0.9736802577972412,
        2.38
    ],
    [
        "Packing Option = 1\n",
        0.9778759479522705,
        2.38
    ],
    [
        "Decision: Using Network mode for this memory\n",
        0.9818134307861328,
        2.3899999999999997
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.9853451251983643,
        2.3899999999999997
    ],
    [
        "Num of variable reads = 520\n",
        0.9887075424194336,
        2.4
    ],
    [
        "Num of conditional writes = 0\n",
        0.9920430183410645,
        2.4
    ],
    [
        "Num of words per element = 1\n",
        0.995427131652832,
        2.4
    ],
    [
        "Num of variable writes = 0\n",
        1.0004024505615234,
        2.4099999999999997
    ],
    [
        "num of accesses = 520\n",
        1.0053870677947998,
        2.4099999999999997
    ],
    [
        "Packing Option = 1\n",
        1.0096871852874756,
        2.42
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.0143623352050781,
        2.42
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.0183420181274414,
        2.42
    ],
    [
        "done with read only memory solutions!\n",
        1.4423713684082031,
        2.91
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.4526045322418213,
        2.93
    ],
    [
        "Num of variable reads = 128\n",
        1.461028814315796,
        2.93
    ],
    [
        "Num of conditional writes = 0\n",
        1.4689321517944336,
        2.94
    ],
    [
        "Num of words per element = 1\n",
        1.4764082431793213,
        2.95
    ],
    [
        "Num of variable writes = 0\n",
        1.4827210903167725,
        2.95
    ],
    [
        "num of accesses = 128\n",
        1.4879064559936523,
        2.96
    ],
    [
        "Packing Option = 1\n",
        1.4924936294555664,
        2.97
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.4968397617340088,
        2.97
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5028481483459473,
        2.99
    ],
    [
        "Num of variable reads = 71\n",
        1.5076019763946533,
        2.99
    ],
    [
        "Num of conditional writes = 0\n",
        1.512073278427124,
        3.0
    ],
    [
        "Num of words per element = 1\n",
        1.516448736190796,
        3.0
    ],
    [
        "Num of variable writes = 0\n",
        1.5207405090332031,
        3.0
    ],
    [
        "num of accesses = 71\n",
        1.5249037742614746,
        3.0100000000000002
    ],
    [
        "Packing Option = 1\n",
        1.5290238857269287,
        3.0100000000000002
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.5331215858459473,
        3.02
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.537182331085205,
        3.02
    ],
    [
        "Num of variable reads = 128\n",
        1.5411465167999268,
        3.02
    ],
    [
        "Num of conditional writes = 0\n",
        1.545128583908081,
        3.0300000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.5492651462554932,
        3.0300000000000002
    ],
    [
        "Num of variable writes = 0\n",
        1.554692029953003,
        3.04
    ],
    [
        "num of accesses = 128\n",
        1.5597999095916748,
        3.04
    ],
    [
        "Packing Option = 0\n",
        1.5644164085388184,
        3.0500000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.5686125755310059,
        3.0500000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5727119445800781,
        3.06
    ],
    [
        "Num of variable reads = 71\n",
        1.5767817497253418,
        3.06
    ],
    [
        "Num of conditional writes = 0\n",
        1.5807647705078125,
        3.06
    ],
    [
        "Num of words per element = 1\n",
        1.5847227573394775,
        3.0700000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.5886681079864502,
        3.0700000000000003
    ],
    [
        "num of accesses = 71\n",
        1.5925695896148682,
        3.08
    ],
    [
        "Packing Option = 1\n",
        1.5964419841766357,
        3.08
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.6002752780914307,
        3.08
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.604065179824829,
        3.0900000000000003
    ],
    [
        "Num of variable reads = 128\n",
        1.6093165874481201,
        3.1
    ],
    [
        "Num of conditional writes = 0\n",
        1.6147377490997314,
        3.1100000000000003
    ],
    [
        "Num of words per element = 1\n",
        1.6197788715362549,
        3.1100000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.6246063709259033,
        3.12
    ],
    [
        "num of accesses = 128\n",
        1.6292457580566406,
        3.12
    ],
    [
        "Packing Option = 0\n",
        1.6337003707885742,
        3.13
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6380212306976318,
        3.13
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6422488689422607,
        3.13
    ],
    [
        "Num of variable reads = 0\n",
        1.6463651657104492,
        3.14
    ],
    [
        "Num of conditional writes = 0\n",
        1.6507291793823242,
        3.14
    ],
    [
        "Num of words per element = 1\n",
        1.6552999019622803,
        3.15
    ],
    [
        "Num of variable writes = 0\n",
        1.659715175628662,
        3.15
    ],
    [
        "num of accesses = 0\n",
        1.6639599800109863,
        3.16
    ],
    [
        "Packing Option = 0\n",
        1.6680881977081299,
        3.16
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.6720962524414062,
        3.17
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6760890483856201,
        3.17
    ],
    [
        "Num of variable reads = 10120\n",
        1.6802856922149658,
        3.18
    ],
    [
        "Num of conditional writes = 0\n",
        1.6847891807556152,
        3.19
    ],
    [
        "Num of words per element = 1\n",
        1.6896395683288574,
        3.19
    ],
    [
        "Num of variable writes = 0\n",
        1.6940937042236328,
        3.2
    ],
    [
        "num of accesses = 10120\n",
        1.6984310150146484,
        3.21
    ],
    [
        "Packing Option = 1\n",
        1.7030470371246338,
        3.22
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.7076115608215332,
        3.23
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.7128527164459229,
        3.25
    ],
    [
        "done with read only memory solutions!\n",
        1.9544031620025635,
        3.65
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.9618628025054932,
        3.66
    ],
    [
        "Num of variable reads = 0\n",
        1.9682872295379639,
        3.68
    ],
    [
        "Num of conditional writes = 0\n",
        1.9728267192840576,
        3.68
    ],
    [
        "Num of words per element = 1\n",
        1.9769785404205322,
        3.69
    ],
    [
        "Num of variable writes = 0\n",
        1.9813783168792725,
        3.71
    ],
    [
        "num of accesses = 0\n",
        1.9859051704406738,
        3.72
    ],
    [
        "Packing Option = 1\n",
        1.990337610244751,
        3.74
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.9950323104858398,
        3.75
    ],
    [
        "Phase 1: Analysis Completed!\n",
        1.999457836151123,
        3.77
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_String >\n",
        2.0043129920959473,
        3.7800000000000002
    ],
    [
        "Circuit Generation Done for < Test_HTTP_String >  \n",
        5.263910293579102,
        22.71
    ],
    [
        " \t Total Number of Constraints :  2137597\n",
        5.274758815765381,
        22.75
    ],
    [
        "\n",
        5.284563779830933,
        22.779999999999998
    ],
    [
        "Instruction queue size: 8281285\n",
        5.294087886810303,
        22.8
    ],
    [
        "Normal execution\n",
        12.911573648452759,
        33.88
    ],
    [
        "Running Sample Run: run10001\n",
        12.930370807647705,
        33.93
    ],
    [
        "Url assignment done\n",
        12.94958758354187,
        34.01
    ],
    [
        "Evaluating Input on the circuit \n",
        12.965197563171387,
        34.08
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        12.979369640350342,
        34.15
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        12.993650674819946,
        34.199999999999996
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        13.009226322174072,
        34.269999999999996
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        13.027992963790894,
        34.37
    ],
    [
        "\t[input] Value of Wire # 21 :: 9\n",
        13.05172848701477,
        34.51
    ],
    [
        "\t[input] Value of Wire # 22 :: e3\n",
        13.070897340774536,
        34.58
    ],
    [
        "\t[input] Value of Wire # 31 :: bf\n",
        13.086428165435791,
        34.65
    ],
    [
        "\t[input] Value of Wire # 40 :: a4\n",
        13.102073669433594,
        34.739999999999995
    ],
    [
        "\t[input] Value of Wire # 49 :: 1\n",
        13.117939949035645,
        34.809999999999995
    ],
    [
        "\t[input] Value of Wire # 58 :: a4\n",
        13.134232759475708,
        34.87
    ],
    [
        "\t[input] Value of Wire # 67 :: 40\n",
        13.14978551864624,
        34.94
    ],
    [
        "\t[input] Value of Wire # 76 :: ed\n",
        13.165311336517334,
        35.01
    ],
    [
        "\t[input] Value of Wire # 85 :: 41\n",
        13.180569648742676,
        35.07
    ],
    [
        "\t[input] Value of Wire # 94 :: f\n",
        13.194862127304077,
        35.14
    ],
    [
        "\t[input] Value of Wire # 103 :: 3b\n",
        13.209434747695923,
        35.190000000000005
    ],
    [
        "\t[input] Value of Wire # 112 :: d0\n",
        13.223931550979614,
        35.260000000000005
    ],
    [
        "\t[input] Value of Wire # 121 :: b2\n",
        13.238601684570312,
        35.300000000000004
    ],
    [
        "\t[input] Value of Wire # 130 :: 5e\n",
        13.253864049911499,
        35.370000000000005
    ],
    [
        "\t[input] Value of Wire # 139 :: 1f\n",
        13.268491268157959,
        35.43
    ],
    [
        "\t[input] Value of Wire # 148 :: b7\n",
        13.28361463546753,
        35.5
    ],
    [
        "\t[input] Value of Wire # 157 :: 92\n",
        13.298765182495117,
        35.550000000000004
    ],
    [
        "\t[input] Value of Wire # 166 :: 9f\n",
        13.31330156326294,
        35.61
    ],
    [
        "\t[input] Value of Wire # 175 :: 37\n",
        13.328154563903809,
        35.68
    ],
    [
        "\t[input] Value of Wire # 184 :: 6b\n",
        13.343336582183838,
        35.74
    ],
    [
        "\t[input] Value of Wire # 193 :: 74\n",
        13.365592002868652,
        35.870000000000005
    ],
    [
        "\t[input] Value of Wire # 202 :: bb\n",
        13.388928890228271,
        36.03
    ],
    [
        "\t[input] Value of Wire # 211 :: 39\n",
        13.404422998428345,
        36.11
    ],
    [
        "\t[input] Value of Wire # 220 :: 5\n",
        13.419881343841553,
        36.17
    ],
    [
        "\t[input] Value of Wire # 229 :: 2b\n",
        13.435405492782593,
        36.24
    ],
    [
        "\t[input] Value of Wire # 238 :: 43\n",
        13.45067811012268,
        36.29
    ],
    [
        "\t[input] Value of Wire # 247 :: 1d\n",
        13.466845512390137,
        36.35
    ],
    [
        "\t[input] Value of Wire # 256 :: 93\n",
        13.48285984992981,
        36.44
    ],
    [
        "\t[input] Value of Wire # 265 :: a9\n",
        13.50023365020752,
        36.52
    ],
    [
        "\t[input] Value of Wire # 274 :: b7\n",
        13.516409158706665,
        36.58
    ],
    [
        "\t[input] Value of Wire # 283 :: f2\n",
        13.532378673553467,
        36.620000000000005
    ],
    [
        "\t[input] Value of Wire # 292 :: cb\n",
        13.547722101211548,
        36.68
    ],
    [
        "\t[input] Value of Wire # 301 :: 99\n",
        13.563219785690308,
        36.75
    ],
    [
        "\t[input] Value of Wire # 310 :: cf\n",
        13.57867169380188,
        36.8
    ],
    [
        "\t[input] Value of Wire # 319 :: a3\n",
        13.59431791305542,
        36.86
    ],
    [
        "\t[input] Value of Wire # 328 :: 2f\n",
        13.610307216644287,
        36.919999999999995
    ],
    [
        "\t[input] Value of Wire # 337 :: d4\n",
        13.626129627227783,
        36.989999999999995
    ],
    [
        "\t[input] Value of Wire # 346 :: 0\n",
        13.64228630065918,
        37.06
    ],
    [
        "\t[input] Value of Wire # 355 :: 0\n",
        13.658388137817383,
        37.120000000000005
    ],
    [
        "\t[input] Value of Wire # 364 :: 0\n",
        13.674964427947998,
        37.19
    ],
    [
        "\t[input] Value of Wire # 373 :: 0\n",
        13.691174030303955,
        37.27
    ],
    [
        "\t[input] Value of Wire # 382 :: 0\n",
        13.707937002182007,
        37.33
    ],
    [
        "\t[input] Value of Wire # 391 :: 0\n",
        13.72440242767334,
        37.4
    ],
    [
        "\t[input] Value of Wire # 400 :: 0\n",
        13.740840911865234,
        37.47
    ],
    [
        "\t[input] Value of Wire # 409 :: 0\n",
        13.75691270828247,
        37.51
    ],
    [
        "\t[input] Value of Wire # 418 :: 0\n",
        13.772639036178589,
        37.57
    ],
    [
        "\t[input] Value of Wire # 427 :: 0\n",
        13.789125204086304,
        37.629999999999995
    ],
    [
        "\t[input] Value of Wire # 436 :: 0\n",
        13.805620908737183,
        37.7
    ],
    [
        "\t[input] Value of Wire # 445 :: 0\n",
        13.824727773666382,
        37.760000000000005
    ],
    [
        "\t[input] Value of Wire # 454 :: 0\n",
        13.840797424316406,
        37.77
    ],
    [
        "\t[input] Value of Wire # 463 :: 0\n",
        13.856439352035522,
        37.79
    ],
    [
        "\t[input] Value of Wire # 472 :: 0\n",
        13.872029066085815,
        37.81
    ],
    [
        "\t[input] Value of Wire # 481 :: 0\n",
        13.887345790863037,
        37.82
    ],
    [
        "\t[input] Value of Wire # 490 :: 0\n",
        13.90096116065979,
        37.83
    ],
    [
        "\t[input] Value of Wire # 499 :: 0\n",
        13.914747953414917,
        37.84
    ],
    [
        "\t[input] Value of Wire # 508 :: 0\n",
        13.929324388504028,
        37.870000000000005
    ],
    [
        "\t[input] Value of Wire # 517 :: 0\n",
        13.94391393661499,
        37.89
    ],
    [
        "\t[input] Value of Wire # 526 :: 0\n",
        13.957508087158203,
        37.910000000000004
    ],
    [
        "\t[input] Value of Wire # 535 :: 0\n",
        13.971153974533081,
        37.940000000000005
    ],
    [
        "\t[input] Value of Wire # 544 :: 0\n",
        13.986014366149902,
        37.97
    ],
    [
        "\t[input] Value of Wire # 553 :: 0\n",
        14.00165843963623,
        38.02
    ],
    [
        "\t[input] Value of Wire # 562 :: 0\n",
        14.017290353775024,
        38.08
    ],
    [
        "\t[input] Value of Wire # 571 :: 0\n",
        14.033372163772583,
        38.11
    ],
    [
        "\t[input] Value of Wire # 580 :: 0\n",
        14.04921293258667,
        38.14
    ],
    [
        "\t[input] Value of Wire # 589 :: 0\n",
        14.065206289291382,
        38.17
    ],
    [
        "\t[input] Value of Wire # 598 :: 0\n",
        14.081945180892944,
        38.21
    ],
    [
        "\t[input] Value of Wire # 607 :: 0\n",
        14.097956657409668,
        38.24
    ],
    [
        "\t[input] Value of Wire # 616 :: 0\n",
        14.11530876159668,
        38.27
    ],
    [
        "\t[input] Value of Wire # 625 :: 0\n",
        14.132376670837402,
        38.300000000000004
    ],
    [
        "\t[input] Value of Wire # 634 :: 0\n",
        14.147939920425415,
        38.32
    ],
    [
        "\t[input] Value of Wire # 643 :: 0\n",
        14.16258978843689,
        38.33
    ],
    [
        "Done",
        14.28869080543518,
        38.35
    ]
]