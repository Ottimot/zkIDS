[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_String >\n",
        0.986478328704834,
        0.1
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.58880615234375,
        2.48
    ],
    [
        "Num of variable reads = 1480\n",
        1.5945689678192139,
        2.51
    ],
    [
        "Num of conditional writes = 0\n",
        1.601151466369629,
        2.52
    ],
    [
        "Num of words per element = 1\n",
        1.6087241172790527,
        2.55
    ],
    [
        "Num of variable writes = 0\n",
        1.6147515773773193,
        2.58
    ],
    [
        "num of accesses = 1480\n",
        1.6233723163604736,
        2.61
    ],
    [
        "Packing Option = 1\n",
        1.6322665214538574,
        2.65
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.6388731002807617,
        2.69
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.645268201828003,
        2.7199999999999998
    ],
    [
        "done with read only memory solutions!\n",
        2.551820993423462,
        4.37
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.5600931644439697,
        4.38
    ],
    [
        "Num of variable reads = 128\n",
        2.5682144165039062,
        4.4
    ],
    [
        "Num of conditional writes = 0\n",
        2.576165199279785,
        4.41
    ],
    [
        "Num of words per element = 1\n",
        2.5837318897247314,
        4.41
    ],
    [
        "Num of variable writes = 0\n",
        2.5911664962768555,
        4.42
    ],
    [
        "num of accesses = 128\n",
        2.598501205444336,
        4.43
    ],
    [
        "Packing Option = 1\n",
        2.605969190597534,
        4.44
    ],
    [
        "Decision: Using Network mode for this memory\n",
        2.613495349884033,
        4.45
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.621039390563965,
        4.45
    ],
    [
        "Num of variable reads = 520\n",
        2.6286182403564453,
        4.46
    ],
    [
        "Num of conditional writes = 0\n",
        2.6363372802734375,
        4.47
    ],
    [
        "Num of words per element = 1\n",
        2.644146680831909,
        4.47
    ],
    [
        "Num of variable writes = 0\n",
        2.6518993377685547,
        4.4799999999999995
    ],
    [
        "num of accesses = 520\n",
        2.659787654876709,
        4.49
    ],
    [
        "Packing Option = 1\n",
        2.6677210330963135,
        4.5
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        2.675497055053711,
        4.51
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        2.683218002319336,
        4.51
    ],
    [
        "done with read only memory solutions!\n",
        3.3029043674468994,
        5.15
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.311108350753784,
        5.16
    ],
    [
        "Num of variable reads = 128\n",
        3.3189446926116943,
        5.16
    ],
    [
        "Num of conditional writes = 0\n",
        3.3264782428741455,
        5.17
    ],
    [
        "Num of words per element = 1\n",
        3.333885669708252,
        5.18
    ],
    [
        "Num of variable writes = 0\n",
        3.341198682785034,
        5.18
    ],
    [
        "num of accesses = 128\n",
        3.3485617637634277,
        5.19
    ],
    [
        "Packing Option = 1\n",
        3.3560991287231445,
        5.2
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.363609790802002,
        5.21
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.3711354732513428,
        5.22
    ],
    [
        "Num of variable reads = 71\n",
        3.3786773681640625,
        5.22
    ],
    [
        "Num of conditional writes = 0\n",
        3.3862311840057373,
        5.2299999999999995
    ],
    [
        "Num of words per element = 1\n",
        3.394036293029785,
        5.24
    ],
    [
        "Num of variable writes = 0\n",
        3.4019644260406494,
        5.25
    ],
    [
        "num of accesses = 71\n",
        3.409863233566284,
        5.26
    ],
    [
        "Packing Option = 1\n",
        3.41776442527771,
        5.26
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.4255733489990234,
        5.27
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.4334025382995605,
        5.28
    ],
    [
        "Num of variable reads = 128\n",
        3.441187858581543,
        5.28
    ],
    [
        "Num of conditional writes = 0\n",
        3.4489521980285645,
        5.29
    ],
    [
        "Num of words per element = 1\n",
        3.456700086593628,
        5.3
    ],
    [
        "Num of variable writes = 0\n",
        3.4644339084625244,
        5.31
    ],
    [
        "num of accesses = 128\n",
        3.4721763134002686,
        5.32
    ],
    [
        "Packing Option = 0\n",
        3.4799187183380127,
        5.32
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.4876646995544434,
        5.33
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.49534010887146,
        5.34
    ],
    [
        "Num of variable reads = 71\n",
        3.5030620098114014,
        5.35
    ],
    [
        "Num of conditional writes = 0\n",
        3.510784149169922,
        5.36
    ],
    [
        "Num of words per element = 1\n",
        3.51874041557312,
        5.37
    ],
    [
        "Num of variable writes = 0\n",
        3.526845932006836,
        5.37
    ],
    [
        "num of accesses = 71\n",
        3.534640073776245,
        5.38
    ],
    [
        "Packing Option = 1\n",
        3.5423381328582764,
        5.39
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.5500545501708984,
        5.4
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.5578010082244873,
        5.41
    ],
    [
        "Num of variable reads = 128\n",
        3.565580129623413,
        5.41
    ],
    [
        "Num of conditional writes = 0\n",
        3.5732693672180176,
        5.42
    ],
    [
        "Num of words per element = 1\n",
        3.581026315689087,
        5.43
    ],
    [
        "Num of variable writes = 0\n",
        3.5887300968170166,
        5.43
    ],
    [
        "num of accesses = 128\n",
        3.596421241760254,
        5.44
    ],
    [
        "Packing Option = 0\n",
        3.604083776473999,
        5.45
    ],
    [
        "Decision: Using Network mode for this memory\n",
        3.6117374897003174,
        5.46
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.619870901107788,
        5.47
    ],
    [
        "Num of variable reads = 0\n",
        3.627958297729492,
        5.47
    ],
    [
        "Num of conditional writes = 0\n",
        3.6360177993774414,
        5.4799999999999995
    ],
    [
        "Num of words per element = 1\n",
        3.644033193588257,
        5.49
    ],
    [
        "Num of variable writes = 0\n",
        3.6522531509399414,
        5.5
    ],
    [
        "num of accesses = 0\n",
        3.6602745056152344,
        5.51
    ],
    [
        "Packing Option = 0\n",
        3.6681487560272217,
        5.51
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        3.67598032951355,
        5.52
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        3.683741569519043,
        5.53
    ],
    [
        "Num of variable reads = 15080\n",
        3.691779375076294,
        5.54
    ],
    [
        "Num of conditional writes = 0\n",
        3.699962854385376,
        5.56
    ],
    [
        "Num of words per element = 1\n",
        3.708042621612549,
        5.57
    ],
    [
        "Num of variable writes = 0\n",
        3.7160520553588867,
        5.59
    ],
    [
        "num of accesses = 15080\n",
        3.7243311405181885,
        5.61
    ],
    [
        "Packing Option = 1\n",
        3.732722520828247,
        5.62
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        3.7409050464630127,
        5.64
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        3.74886417388916,
        5.65
    ],
    [
        "done with read only memory solutions!\n",
        4.1079981327056885,
        6.16
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        4.117165803909302,
        6.17
    ],
    [
        "Num of variable reads = 0\n",
        4.125523090362549,
        6.19
    ],
    [
        "Num of conditional writes = 0\n",
        4.135893821716309,
        6.2
    ],
    [
        "Num of words per element = 1\n",
        4.145205497741699,
        6.22
    ],
    [
        "Num of variable writes = 0\n",
        4.154636383056641,
        6.24
    ],
    [
        "num of accesses = 0\n",
        4.166854381561279,
        6.3
    ],
    [
        "Packing Option = 1\n",
        4.178272485733032,
        6.34
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        4.190838575363159,
        6.38
    ],
    [
        "Phase 1: Analysis Completed!\n",
        4.202500581741333,
        6.41
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_String >\n",
        4.216033697128296,
        6.46
    ],
    [
        "Circuit Generation Done for < Test_HTTP_String >  \n",
        10.8789701461792,
        41.67
    ],
    [
        " \t Total Number of Constraints :  2502225\n",
        10.89920711517334,
        41.74
    ],
    [
        "\n",
        10.92051649093628,
        41.809999999999995
    ],
    [
        "Instruction queue size: 11129423\n",
        10.941806316375732,
        41.89
    ],
    [
        "Normal execution\n",
        33.1897177696228,
        62.42
    ],
    [
        "Running Sample Run: run15001\n",
        33.23274111747742,
        62.45
    ],
    [
        "Url assignment done\n",
        33.27680230140686,
        62.47
    ],
    [
        "Evaluating Input on the circuit \n",
        33.31292676925659,
        62.54
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        33.35296130180359,
        62.67
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        33.392452001571655,
        62.74
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        33.42089223861694,
        62.79
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        33.4516863822937,
        62.85
    ],
    [
        "\t[input] Value of Wire # 21 :: 9\n",
        33.48239850997925,
        62.92
    ],
    [
        "\t[input] Value of Wire # 22 :: e3\n",
        33.51334238052368,
        62.95
    ],
    [
        "\t[input] Value of Wire # 31 :: bf\n",
        33.5449652671814,
        62.98
    ],
    [
        "\t[input] Value of Wire # 40 :: a4\n",
        33.57634997367859,
        63.02
    ],
    [
        "\t[input] Value of Wire # 49 :: 1\n",
        33.60832905769348,
        63.04
    ],
    [
        "\t[input] Value of Wire # 58 :: a4\n",
        33.640862464904785,
        63.07
    ],
    [
        "\t[input] Value of Wire # 67 :: 40\n",
        33.67256784439087,
        63.1
    ],
    [
        "\t[input] Value of Wire # 76 :: ed\n",
        33.70384883880615,
        63.13
    ],
    [
        "\t[input] Value of Wire # 85 :: 41\n",
        33.73535752296448,
        63.17
    ],
    [
        "\t[input] Value of Wire # 94 :: f\n",
        33.76672911643982,
        63.2
    ],
    [
        "\t[input] Value of Wire # 103 :: 3b\n",
        33.79814147949219,
        63.24
    ],
    [
        "\t[input] Value of Wire # 112 :: d0\n",
        33.82951235771179,
        63.29
    ],
    [
        "\t[input] Value of Wire # 121 :: b2\n",
        33.86023139953613,
        63.34
    ],
    [
        "\t[input] Value of Wire # 130 :: 5e\n",
        33.891308307647705,
        63.410000000000004
    ],
    [
        "\t[input] Value of Wire # 139 :: 1f\n",
        33.92254114151001,
        63.47
    ],
    [
        "\t[input] Value of Wire # 148 :: b7\n",
        33.95595622062683,
        63.56
    ],
    [
        "\t[input] Value of Wire # 157 :: 92\n",
        33.987696409225464,
        63.61
    ],
    [
        "\t[input] Value of Wire # 166 :: 9f\n",
        34.01842713356018,
        63.660000000000004
    ],
    [
        "\t[input] Value of Wire # 175 :: 37\n",
        34.048795223236084,
        63.69
    ],
    [
        "\t[input] Value of Wire # 184 :: 6b\n",
        34.07975625991821,
        63.73
    ],
    [
        "\t[input] Value of Wire # 193 :: 74\n",
        34.11086082458496,
        63.76
    ],
    [
        "\t[input] Value of Wire # 202 :: bb\n",
        34.141722679138184,
        63.8
    ],
    [
        "\t[input] Value of Wire # 211 :: 39\n",
        34.172608852386475,
        63.83
    ],
    [
        "\t[input] Value of Wire # 220 :: 5\n",
        34.20436334609985,
        63.86
    ],
    [
        "\t[input] Value of Wire # 229 :: 2b\n",
        34.26528882980347,
        64.3
    ],
    [
        "\t[input] Value of Wire # 238 :: 43\n",
        34.32877779006958,
        64.74
    ],
    [
        "\t[input] Value of Wire # 247 :: 1d\n",
        34.364678382873535,
        64.87
    ],
    [
        "\t[input] Value of Wire # 256 :: 93\n",
        34.39553928375244,
        64.9
    ],
    [
        "\t[input] Value of Wire # 265 :: a9\n",
        34.427011489868164,
        64.94
    ],
    [
        "\t[input] Value of Wire # 274 :: b7\n",
        34.46428084373474,
        64.99
    ],
    [
        "\t[input] Value of Wire # 283 :: f2\n",
        34.54140758514404,
        65.55
    ],
    [
        "\t[input] Value of Wire # 292 :: cb\n",
        34.58024501800537,
        65.67
    ],
    [
        "\t[input] Value of Wire # 301 :: 99\n",
        34.61083507537842,
        65.71
    ],
    [
        "\t[input] Value of Wire # 310 :: cf\n",
        34.642563343048096,
        65.78999999999999
    ],
    [
        "\t[input] Value of Wire # 319 :: a3\n",
        34.67500686645508,
        65.86
    ],
    [
        "\t[input] Value of Wire # 328 :: 2f\n",
        34.708465576171875,
        65.92
    ],
    [
        "\t[input] Value of Wire # 337 :: d4\n",
        34.74299955368042,
        66.0
    ],
    [
        "\t[input] Value of Wire # 346 :: 0\n",
        34.77756428718567,
        66.08
    ],
    [
        "\t[input] Value of Wire # 355 :: 0\n",
        34.8111412525177,
        66.15
    ],
    [
        "\t[input] Value of Wire # 364 :: 0\n",
        34.84502863883972,
        66.24000000000001
    ],
    [
        "\t[input] Value of Wire # 373 :: 0\n",
        34.87855291366577,
        66.35000000000001
    ],
    [
        "\t[input] Value of Wire # 382 :: 0\n",
        34.91199612617493,
        66.45
    ],
    [
        "\t[input] Value of Wire # 391 :: 0\n",
        34.96385455131531,
        66.73
    ],
    [
        "\t[input] Value of Wire # 400 :: 0\n",
        34.997719049453735,
        66.88000000000001
    ],
    [
        "\t[input] Value of Wire # 409 :: 0\n",
        35.03150534629822,
        66.93
    ],
    [
        "\t[input] Value of Wire # 418 :: 0\n",
        35.06673336029053,
        67.04
    ],
    [
        "\t[input] Value of Wire # 427 :: 0\n",
        35.1000599861145,
        67.13000000000001
    ],
    [
        "\t[input] Value of Wire # 436 :: 0\n",
        35.14565348625183,
        67.36
    ],
    [
        "\t[input] Value of Wire # 445 :: 0\n",
        35.18569254875183,
        67.52000000000001
    ],
    [
        "\t[input] Value of Wire # 454 :: 0\n",
        35.21887183189392,
        67.62
    ],
    [
        "\t[input] Value of Wire # 463 :: 0\n",
        35.25322723388672,
        67.71000000000001
    ],
    [
        "\t[input] Value of Wire # 472 :: 0\n",
        35.28579020500183,
        67.82000000000001
    ],
    [
        "\t[input] Value of Wire # 481 :: 0\n",
        35.318477630615234,
        67.92
    ],
    [
        "\t[input] Value of Wire # 490 :: 0\n",
        35.37423634529114,
        68.21000000000001
    ],
    [
        "\t[input] Value of Wire # 499 :: 0\n",
        35.411614179611206,
        68.32000000000001
    ],
    [
        "\t[input] Value of Wire # 508 :: 0\n",
        35.44413232803345,
        68.41000000000001
    ],
    [
        "\t[input] Value of Wire # 517 :: 0\n",
        35.47661852836609,
        68.51
    ],
    [
        "\t[input] Value of Wire # 526 :: 0\n",
        35.50906300544739,
        68.61
    ],
    [
        "\t[input] Value of Wire # 535 :: 0\n",
        35.541526794433594,
        68.71000000000001
    ],
    [
        "\t[input] Value of Wire # 544 :: 0\n",
        35.593050956726074,
        68.94000000000001
    ],
    [
        "\t[input] Value of Wire # 553 :: 0\n",
        35.6328661441803,
        69.04
    ],
    [
        "\t[input] Value of Wire # 562 :: 0\n",
        35.66694712638855,
        69.14
    ],
    [
        "\t[input] Value of Wire # 571 :: 0\n",
        35.71088409423828,
        69.27
    ],
    [
        "\t[input] Value of Wire # 580 :: 0\n",
        35.74859094619751,
        69.38
    ],
    [
        "\t[input] Value of Wire # 589 :: 0\n",
        35.78089737892151,
        69.45
    ],
    [
        "\t[input] Value of Wire # 598 :: 0\n",
        35.81804943084717,
        69.58
    ],
    [
        "\t[input] Value of Wire # 607 :: 0\n",
        35.86790370941162,
        69.78
    ],
    [
        "\t[input] Value of Wire # 616 :: 0\n",
        35.91959071159363,
        69.99
    ],
    [
        "\t[input] Value of Wire # 625 :: 0\n",
        35.96996474266052,
        70.2
    ],
    [
        "\t[input] Value of Wire # 634 :: 0\n",
        36.012340784072876,
        70.31
    ],
    [
        "\t[input] Value of Wire # 643 :: 0\n",
        36.071022510528564,
        70.52
    ],
    [
        "\t[input] Value of Wire # 652 :: 0\n",
        36.10725522041321,
        70.61
    ],
    [
        "\t[input] Value of Wire # 661 :: 0\n",
        36.14735269546509,
        70.71000000000001
    ],
    [
        "\t[input] Value of Wire # 670 :: 0\n",
        36.1812961101532,
        70.79
    ],
    [
        "\t[input] Value of Wire # 679 :: 0\n",
        36.213172912597656,
        70.85000000000001
    ],
    [
        "\t[input] Value of Wire # 688 :: 0\n",
        36.24486207962036,
        70.91
    ],
    [
        "\t[input] Value of Wire # 697 :: 0\n",
        36.27609372138977,
        70.98
    ],
    [
        "\t[input] Value of Wire # 706 :: 0\n",
        36.30721187591553,
        71.05
    ],
    [
        "\t[input] Value of Wire # 715 :: 0\n",
        36.338637828826904,
        71.11
    ],
    [
        "\t[input] Value of Wire # 724 :: 0\n",
        36.38027572631836,
        71.25
    ],
    [
        "\t[input] Value of Wire # 733 :: 0\n",
        36.41154408454895,
        71.33
    ],
    [
        "\t[input] Value of Wire # 742 :: 0\n",
        36.44720458984375,
        71.41999999999999
    ],
    [
        "\t[input] Value of Wire # 751 :: 0\n",
        36.49546718597412,
        71.6
    ],
    [
        "\t[input] Value of Wire # 760 :: 0\n",
        36.52612590789795,
        71.66999999999999
    ],
    [
        "\t[input] Value of Wire # 769 :: 0\n",
        36.55720806121826,
        71.72999999999999
    ],
    [
        "\t[input] Value of Wire # 778 :: 0\n",
        36.58820104598999,
        71.8
    ],
    [
        "\t[input] Value of Wire # 787 :: 0\n",
        36.62045097351074,
        71.83
    ],
    [
        "\t[input] Value of Wire # 796 :: 0\n",
        36.652783155441284,
        71.89
    ],
    [
        "\t[input] Value of Wire # 805 :: 0\n",
        36.68422985076904,
        71.96
    ],
    [
        "\t[input] Value of Wire # 814 :: 0\n",
        36.71559119224548,
        72.03
    ],
    [
        "\t[input] Value of Wire # 823 :: 0\n",
        36.7464497089386,
        72.1
    ],
    [
        "\t[input] Value of Wire # 832 :: 0\n",
        36.77700924873352,
        72.16
    ],
    [
        "\t[input] Value of Wire # 841 :: 0\n",
        36.80849814414978,
        72.23
    ],
    [
        "\t[input] Value of Wire # 850 :: 0\n",
        36.838451623916626,
        72.26
    ],
    [
        "\t[input] Value of Wire # 859 :: 0\n",
        36.87070083618164,
        72.33
    ],
    [
        "\t[input] Value of Wire # 868 :: 0\n",
        36.90139436721802,
        72.39
    ],
    [
        "\t[input] Value of Wire # 877 :: 0\n",
        36.935532331466675,
        72.48
    ],
    [
        "\t[input] Value of Wire # 886 :: 0\n",
        36.98396015167236,
        72.67
    ],
    [
        "\t[input] Value of Wire # 895 :: 0\n",
        37.03213405609131,
        72.86
    ],
    [
        "\t[input] Value of Wire # 904 :: 0\n",
        37.07881569862366,
        73.13
    ],
    [
        "\t[input] Value of Wire # 913 :: 0\n",
        37.120176792144775,
        73.16
    ],
    [
        "\t[input] Value of Wire # 922 :: 0\n",
        37.149670124053955,
        73.22
    ],
    [
        "\t[input] Value of Wire # 931 :: 0\n",
        37.17907786369324,
        73.28
    ],
    [
        "\t[input] Value of Wire # 940 :: 0\n",
        37.208416223526,
        73.34
    ],
    [
        "\t[input] Value of Wire # 949 :: 0\n",
        37.237815618515015,
        73.4
    ],
    [
        "\t[input] Value of Wire # 958 :: 0\n",
        37.26726937294006,
        73.46000000000001
    ],
    [
        "\t[input] Value of Wire # 967 :: 0\n",
        37.296586751937866,
        73.51
    ],
    [
        "\t[input] Value of Wire # 976 :: 0\n",
        37.3258273601532,
        73.58
    ],
    [
        "\t[input] Value of Wire # 985 :: 0\n",
        37.354716539382935,
        73.60000000000001
    ],
    [
        "\t[input] Value of Wire # 994 :: 0\n",
        37.38643670082092,
        73.61
    ],
    [
        "\t[input] Value of Wire # 1003 :: 0\n",
        37.417659282684326,
        73.67
    ],
    [
        "\t[input] Value of Wire # 1012 :: 0\n",
        37.44657635688782,
        73.72
    ],
    [
        "\t[input] Value of Wire # 1021 :: 0\n",
        37.477055072784424,
        73.73
    ],
    [
        "\t[input] Value of Wire # 1030 :: 0\n",
        37.50844740867615,
        73.77000000000001
    ],
    [
        "\t[input] Value of Wire # 1039 :: 0\n",
        37.53914713859558,
        73.82000000000001
    ],
    [
        "\t[input] Value of Wire # 1048 :: 0\n",
        37.57025933265686,
        73.85000000000001
    ],
    [
        "\t[input] Value of Wire # 1057 :: 0\n",
        37.60061001777649,
        73.9
    ],
    [
        "\t[input] Value of Wire # 1066 :: 0\n",
        37.62950587272644,
        73.97
    ],
    [
        "\t[input] Value of Wire # 1075 :: 0\n",
        37.65863609313965,
        74.02000000000001
    ],
    [
        "\t[input] Value of Wire # 1084 :: 0\n",
        37.68789267539978,
        74.08
    ],
    [
        "\t[input] Value of Wire # 1093 :: 0\n",
        37.7173125743866,
        74.14
    ],
    [
        "\t[input] Value of Wire # 1102 :: 0\n",
        37.746596574783325,
        74.2
    ],
    [
        "\t[input] Value of Wire # 1111 :: 0\n",
        37.775991678237915,
        74.25
    ],
    [
        "\t[input] Value of Wire # 1120 :: 0\n",
        37.80500626564026,
        74.29
    ],
    [
        "\t[input] Value of Wire # 1129 :: 0\n",
        37.83422923088074,
        74.36
    ],
    [
        "\t[input] Value of Wire # 1138 :: 0\n",
        37.86342644691467,
        74.41
    ],
    [
        "\t[input] Value of Wire # 1147 :: 0\n",
        37.89240026473999,
        74.47
    ],
    [
        "\t[input] Value of Wire # 1156 :: 0\n",
        37.92186164855957,
        74.53
    ],
    [
        "\t[input] Value of Wire # 1165 :: 0\n",
        37.951467990875244,
        74.59
    ],
    [
        "\t[input] Value of Wire # 1174 :: 0\n",
        37.98112225532532,
        74.65
    ],
    [
        "\t[input] Value of Wire # 1183 :: 0\n",
        38.01077198982239,
        74.71000000000001
    ],
    [
        "\t[input] Value of Wire # 1192 :: 0\n",
        38.04166293144226,
        74.74
    ],
    [
        "Done",
        38.42745923995972,
        74.75
    ]
]