[
    [
        "[1st Phase] Running Initial Circuit Analysis for < Test_HTTP_String >\n",
        0.019864320755004883,
        0.0
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        0.36208391189575195,
        1.54
    ],
    [
        "Num of variable reads = 1480\n",
        0.3666963577270508,
        1.55
    ],
    [
        "Num of conditional writes = 0\n",
        0.3708767890930176,
        1.57
    ],
    [
        "Num of words per element = 1\n",
        0.3746914863586426,
        1.59
    ],
    [
        "Num of variable writes = 0\n",
        0.3779165744781494,
        1.6
    ],
    [
        "num of accesses = 1480\n",
        0.3808314800262451,
        1.62
    ],
    [
        "Packing Option = 1\n",
        0.3839132785797119,
        1.62
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        0.3868715763092041,
        1.6400000000000001
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        0.3894834518432617,
        1.6500000000000001
    ],
    [
        "done with read only memory solutions!\n",
        1.0157642364501953,
        2.7
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.0228538513183594,
        2.71
    ],
    [
        "Num of variable reads = 128\n",
        1.0326950550079346,
        2.73
    ],
    [
        "Num of conditional writes = 0\n",
        1.041433572769165,
        2.74
    ],
    [
        "Num of words per element = 1\n",
        1.0487070083618164,
        2.75
    ],
    [
        "Num of variable writes = 0\n",
        1.0541813373565674,
        2.75
    ],
    [
        "num of accesses = 128\n",
        1.0592944622039795,
        2.7600000000000002
    ],
    [
        "Packing Option = 1\n",
        1.0648267269134521,
        2.77
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.070692539215088,
        2.77
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.0753023624420166,
        2.77
    ],
    [
        "Num of variable reads = 520\n",
        1.0794222354888916,
        2.7800000000000002
    ],
    [
        "Num of conditional writes = 0\n",
        1.0837955474853516,
        2.7800000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.0884246826171875,
        2.79
    ],
    [
        "Num of variable writes = 0\n",
        1.0925202369689941,
        2.79
    ],
    [
        "num of accesses = 520\n",
        1.096817970275879,
        2.8000000000000003
    ],
    [
        "Packing Option = 1\n",
        1.101304531097412,
        2.8000000000000003
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.1057977676391602,
        2.81
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.1097896099090576,
        2.81
    ],
    [
        "done with read only memory solutions!\n",
        1.5172932147979736,
        3.2600000000000002
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5255787372589111,
        3.27
    ],
    [
        "Num of variable reads = 128\n",
        1.5316593647003174,
        3.27
    ],
    [
        "Num of conditional writes = 0\n",
        1.5369198322296143,
        3.2800000000000002
    ],
    [
        "Num of words per element = 1\n",
        1.5417604446411133,
        3.2800000000000002
    ],
    [
        "Num of variable writes = 0\n",
        1.546506404876709,
        3.29
    ],
    [
        "num of accesses = 128\n",
        1.5511441230773926,
        3.29
    ],
    [
        "Packing Option = 1\n",
        1.555401086807251,
        3.3000000000000003
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.559337854385376,
        3.3000000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5633165836334229,
        3.3000000000000003
    ],
    [
        "Num of variable reads = 71\n",
        1.567258358001709,
        3.31
    ],
    [
        "Num of conditional writes = 0\n",
        1.5712103843688965,
        3.31
    ],
    [
        "Num of words per element = 1\n",
        1.57499098777771,
        3.3200000000000003
    ],
    [
        "Num of variable writes = 0\n",
        1.5788986682891846,
        3.3200000000000003
    ],
    [
        "num of accesses = 71\n",
        1.5828049182891846,
        3.3200000000000003
    ],
    [
        "Packing Option = 1\n",
        1.5868325233459473,
        3.33
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.5907435417175293,
        3.33
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.5949461460113525,
        3.3400000000000003
    ],
    [
        "Num of variable reads = 128\n",
        1.6000025272369385,
        3.3400000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.6046302318572998,
        3.35
    ],
    [
        "Num of words per element = 1\n",
        1.6083571910858154,
        3.35
    ],
    [
        "Num of variable writes = 0\n",
        1.612605094909668,
        3.3600000000000003
    ],
    [
        "num of accesses = 128\n",
        1.618994951248169,
        3.3600000000000003
    ],
    [
        "Packing Option = 0\n",
        1.6248276233673096,
        3.37
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6302509307861328,
        3.3800000000000003
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6352314949035645,
        3.3800000000000003
    ],
    [
        "Num of variable reads = 71\n",
        1.6404812335968018,
        3.3800000000000003
    ],
    [
        "Num of conditional writes = 0\n",
        1.6452436447143555,
        3.39
    ],
    [
        "Num of words per element = 1\n",
        1.6500344276428223,
        3.4000000000000004
    ],
    [
        "Num of variable writes = 0\n",
        1.6545281410217285,
        3.4000000000000004
    ],
    [
        "num of accesses = 71\n",
        1.6587896347045898,
        3.4000000000000004
    ],
    [
        "Packing Option = 1\n",
        1.6629152297973633,
        3.41
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.667423963546753,
        3.41
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.6716735363006592,
        3.4200000000000004
    ],
    [
        "Num of variable reads = 128\n",
        1.6757216453552246,
        3.4200000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        1.6797103881835938,
        3.4200000000000004
    ],
    [
        "Num of words per element = 1\n",
        1.6836791038513184,
        3.43
    ],
    [
        "Num of variable writes = 0\n",
        1.6876189708709717,
        3.43
    ],
    [
        "num of accesses = 128\n",
        1.6914935111999512,
        3.4400000000000004
    ],
    [
        "Packing Option = 0\n",
        1.695303201675415,
        3.4400000000000004
    ],
    [
        "Decision: Using Network mode for this memory\n",
        1.6991252899169922,
        3.4400000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7029852867126465,
        3.45
    ],
    [
        "Num of variable reads = 0\n",
        1.706834316253662,
        3.45
    ],
    [
        "Num of conditional writes = 0\n",
        1.7107195854187012,
        3.46
    ],
    [
        "Num of words per element = 1\n",
        1.714562177658081,
        3.46
    ],
    [
        "Num of variable writes = 0\n",
        1.7184734344482422,
        3.46
    ],
    [
        "num of accesses = 0\n",
        1.722416639328003,
        3.47
    ],
    [
        "Packing Option = 0\n",
        1.72629976272583,
        3.47
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        1.7312841415405273,
        3.49
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        1.7374532222747803,
        3.49
    ],
    [
        "Num of variable reads = 15080\n",
        1.7436492443084717,
        3.5
    ],
    [
        "Num of conditional writes = 0\n",
        1.7495155334472656,
        3.52
    ],
    [
        "Num of words per element = 1\n",
        1.7550208568572998,
        3.52
    ],
    [
        "Num of variable writes = 0\n",
        1.7602224349975586,
        3.5300000000000002
    ],
    [
        "num of accesses = 15080\n",
        1.7654569149017334,
        3.5500000000000003
    ],
    [
        "Packing Option = 1\n",
        1.7703263759613037,
        3.56
    ],
    [
        "Decision: Using Read-only O(sqrt n) mode for this memory\n",
        1.7753617763519287,
        3.56
    ],
    [
        "Attempting to solve linear systems for efficient Read-only memory access: Attempt#1 -- bitcount = 15\n",
        1.7801237106323242,
        3.5700000000000003
    ],
    [
        "done with read only memory solutions!\n",
        2.0076584815979004,
        3.9000000000000004
    ],
    [
        "Analyzing memory workload (more updates optimizing memory access costs are expected soon) .. \n",
        2.0228095054626465,
        3.91
    ],
    [
        "Num of variable reads = 0\n",
        2.029395341873169,
        3.9200000000000004
    ],
    [
        "Num of conditional writes = 0\n",
        2.0349953174591064,
        3.93
    ],
    [
        "Num of words per element = 1\n",
        2.0412559509277344,
        3.96
    ],
    [
        "Num of variable writes = 0\n",
        2.047192096710205,
        3.97
    ],
    [
        "num of accesses = 0\n",
        2.0527589321136475,
        4.0
    ],
    [
        "Packing Option = 1\n",
        2.058271646499634,
        4.01
    ],
    [
        "Decision: Using Linear mode for this memory\n",
        2.0638911724090576,
        4.03
    ],
    [
        "Phase 1: Analysis Completed!\n",
        2.0703423023223877,
        4.07
    ],
    [
        "[2nd Phase] Running Circuit Generator for < Test_HTTP_String >\n",
        2.0766167640686035,
        4.09
    ],
    [
        "Circuit Generation Done for < Test_HTTP_String >  \n",
        6.32918906211853,
        26.869999999999997
    ],
    [
        " \t Total Number of Constraints :  2502225\n",
        6.353835821151733,
        26.99
    ],
    [
        "\n",
        6.375780344009399,
        27.08
    ],
    [
        "Instruction queue size: 11129423\n",
        6.392712831497192,
        27.12
    ],
    [
        "Normal execution\n",
        16.593663215637207,
        42.879999999999995
    ],
    [
        "Running Sample Run: run15001\n",
        16.614174604415894,
        42.89
    ],
    [
        "Url assignment done\n",
        16.635524034500122,
        42.91
    ],
    [
        "Evaluating Input on the circuit \n",
        16.6539945602417,
        42.94
    ],
    [
        "\t[input] Value of Wire # 0 (The one-input wire.) :: 1\n",
        16.670424222946167,
        42.949999999999996
    ],
    [
        "\t[input] Value of Wire # 2 :: 6e8\n",
        16.687660217285156,
        43.0
    ],
    [
        "\t[input] Value of Wire # 19 :: 108\n",
        16.70648503303528,
        43.07
    ],
    [
        "\t[input] Value of Wire # 20 :: 4\n",
        16.72462224960327,
        43.1
    ],
    [
        "\t[input] Value of Wire # 21 :: 9\n",
        16.743133544921875,
        43.15
    ],
    [
        "\t[input] Value of Wire # 22 :: e3\n",
        16.761884450912476,
        43.18
    ],
    [
        "\t[input] Value of Wire # 31 :: bf\n",
        16.779898643493652,
        43.199999999999996
    ],
    [
        "\t[input] Value of Wire # 40 :: a4\n",
        16.79800581932068,
        43.22
    ],
    [
        "\t[input] Value of Wire # 49 :: 1\n",
        16.81577205657959,
        43.24
    ],
    [
        "\t[input] Value of Wire # 58 :: a4\n",
        16.833925008773804,
        43.26
    ],
    [
        "\t[input] Value of Wire # 67 :: 40\n",
        16.86354684829712,
        43.41
    ],
    [
        "\t[input] Value of Wire # 76 :: ed\n",
        16.890355110168457,
        43.54
    ],
    [
        "\t[input] Value of Wire # 85 :: 41\n",
        16.90799117088318,
        43.559999999999995
    ],
    [
        "\t[input] Value of Wire # 94 :: f\n",
        16.925830602645874,
        43.58
    ],
    [
        "\t[input] Value of Wire # 103 :: 3b\n",
        16.94385862350464,
        43.6
    ],
    [
        "\t[input] Value of Wire # 112 :: d0\n",
        16.96915102005005,
        43.699999999999996
    ],
    [
        "\t[input] Value of Wire # 121 :: b2\n",
        17.010464429855347,
        44.01
    ],
    [
        "\t[input] Value of Wire # 130 :: 5e\n",
        17.03024411201477,
        44.07
    ],
    [
        "\t[input] Value of Wire # 139 :: 1f\n",
        17.050018548965454,
        44.13
    ],
    [
        "\t[input] Value of Wire # 148 :: b7\n",
        17.087842226028442,
        44.38
    ],
    [
        "\t[input] Value of Wire # 157 :: 92\n",
        17.106152057647705,
        44.4
    ],
    [
        "\t[input] Value of Wire # 166 :: 9f\n",
        17.124743223190308,
        44.43
    ],
    [
        "\t[input] Value of Wire # 175 :: 37\n",
        17.143664360046387,
        44.45
    ],
    [
        "\t[input] Value of Wire # 184 :: 6b\n",
        17.176084995269775,
        44.64
    ],
    [
        "\t[input] Value of Wire # 193 :: 74\n",
        17.19409942626953,
        44.66
    ],
    [
        "\t[input] Value of Wire # 202 :: bb\n",
        17.211912393569946,
        44.68
    ],
    [
        "\t[input] Value of Wire # 211 :: 39\n",
        17.238492965698242,
        44.79
    ],
    [
        "\t[input] Value of Wire # 220 :: 5\n",
        17.262319803237915,
        44.89
    ],
    [
        "\t[input] Value of Wire # 229 :: 2b\n",
        17.28044319152832,
        44.91
    ],
    [
        "\t[input] Value of Wire # 238 :: 43\n",
        17.298450469970703,
        44.92
    ],
    [
        "\t[input] Value of Wire # 247 :: 1d\n",
        17.316323280334473,
        45.15
    ],
    [
        "\t[input] Value of Wire # 256 :: 93\n",
        17.352269887924194,
        45.15
    ],
    [
        "\t[input] Value of Wire # 265 :: a9\n",
        17.369438409805298,
        45.16
    ],
    [
        "\t[input] Value of Wire # 274 :: b7\n",
        17.387460231781006,
        45.17
    ],
    [
        "\t[input] Value of Wire # 283 :: f2\n",
        17.405235528945923,
        45.19
    ],
    [
        "\t[input] Value of Wire # 292 :: cb\n",
        17.42400097846985,
        45.21
    ],
    [
        "\t[input] Value of Wire # 301 :: 99\n",
        17.442002534866333,
        45.230000000000004
    ],
    [
        "\t[input] Value of Wire # 310 :: cf\n",
        17.46050238609314,
        45.24
    ],
    [
        "\t[input] Value of Wire # 319 :: a3\n",
        17.479588508605957,
        45.26
    ],
    [
        "\t[input] Value of Wire # 328 :: 2f\n",
        17.504879474639893,
        45.36
    ],
    [
        "\t[input] Value of Wire # 337 :: d4\n",
        17.536113262176514,
        45.519999999999996
    ],
    [
        "\t[input] Value of Wire # 346 :: 0\n",
        17.554871559143066,
        45.54
    ],
    [
        "\t[input] Value of Wire # 355 :: 0\n",
        17.573156595230103,
        45.559999999999995
    ],
    [
        "\t[input] Value of Wire # 364 :: 0\n",
        17.591388702392578,
        45.58
    ],
    [
        "\t[input] Value of Wire # 373 :: 0\n",
        17.60975694656372,
        45.599999999999994
    ],
    [
        "\t[input] Value of Wire # 382 :: 0\n",
        17.627520322799683,
        45.61
    ],
    [
        "\t[input] Value of Wire # 391 :: 0\n",
        17.646368741989136,
        45.64
    ],
    [
        "\t[input] Value of Wire # 400 :: 0\n",
        17.671459674835205,
        45.71
    ],
    [
        "\t[input] Value of Wire # 409 :: 0\n",
        17.705703020095825,
        45.93
    ],
    [
        "\t[input] Value of Wire # 418 :: 0\n",
        17.724465370178223,
        45.95
    ],
    [
        "\t[input] Value of Wire # 427 :: 0\n",
        17.743412256240845,
        45.97
    ],
    [
        "\t[input] Value of Wire # 436 :: 0\n",
        17.762298583984375,
        45.99
    ],
    [
        "\t[input] Value of Wire # 445 :: 0\n",
        17.780922651290894,
        46.01
    ],
    [
        "\t[input] Value of Wire # 454 :: 0\n",
        17.798612594604492,
        46.02
    ],
    [
        "\t[input] Value of Wire # 463 :: 0\n",
        17.8163640499115,
        46.05
    ],
    [
        "\t[input] Value of Wire # 472 :: 0\n",
        17.834469318389893,
        46.08
    ],
    [
        "\t[input] Value of Wire # 481 :: 0\n",
        17.85235905647278,
        46.11
    ],
    [
        "\t[input] Value of Wire # 490 :: 0\n",
        17.87024211883545,
        46.16
    ],
    [
        "\t[input] Value of Wire # 499 :: 0\n",
        17.890735387802124,
        46.239999999999995
    ],
    [
        "\t[input] Value of Wire # 508 :: 0\n",
        17.911972284317017,
        46.32
    ],
    [
        "\t[input] Value of Wire # 517 :: 0\n",
        17.93320631980896,
        46.419999999999995
    ],
    [
        "\t[input] Value of Wire # 526 :: 0\n",
        17.954975366592407,
        46.5
    ],
    [
        "\t[input] Value of Wire # 535 :: 0\n",
        17.97739338874817,
        46.589999999999996
    ],
    [
        "\t[input] Value of Wire # 544 :: 0\n",
        18.001407861709595,
        46.669999999999995
    ],
    [
        "\t[input] Value of Wire # 553 :: 0\n",
        18.023099184036255,
        46.73
    ],
    [
        "\t[input] Value of Wire # 562 :: 0\n",
        18.041476726531982,
        46.76
    ],
    [
        "\t[input] Value of Wire # 571 :: 0\n",
        18.059909343719482,
        46.78
    ],
    [
        "\t[input] Value of Wire # 580 :: 0\n",
        18.0787513256073,
        46.8
    ],
    [
        "\t[input] Value of Wire # 589 :: 0\n",
        18.097645044326782,
        46.82
    ],
    [
        "\t[input] Value of Wire # 598 :: 0\n",
        18.117534399032593,
        46.86
    ],
    [
        "\t[input] Value of Wire # 607 :: 0\n",
        18.138665914535522,
        46.9
    ],
    [
        "\t[input] Value of Wire # 616 :: 0\n",
        18.159064292907715,
        46.94
    ],
    [
        "\t[input] Value of Wire # 625 :: 0\n",
        18.17899990081787,
        46.97
    ],
    [
        "\t[input] Value of Wire # 634 :: 0\n",
        18.200842142105103,
        47.019999999999996
    ],
    [
        "\t[input] Value of Wire # 643 :: 0\n",
        18.221139669418335,
        47.059999999999995
    ],
    [
        "\t[input] Value of Wire # 652 :: 0\n",
        18.238834381103516,
        47.059999999999995
    ],
    [
        "Done",
        18.385874271392822,
        47.08
    ]
]